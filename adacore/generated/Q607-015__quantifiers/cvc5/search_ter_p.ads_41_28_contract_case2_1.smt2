;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                               (of_rep x))) )))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

;; "bool_eq"
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool
  (ite (and
         (ite (<= a__first a__last)
           (and
             (<= b__first b__last)
             (= (- a__last a__first) (- b__last b__first)))
           (< b__last b__first))
         (forall ((temp___idx_168 Int))
           (=>
             (and (<= a__first temp___idx_168) (<= temp___idx_168 a__last))
             (= (to_rep (select a temp___idx_168)) (to_rep
                                                     (select b (+ (- b__first a__first) temp___idx_168)))))))
    true
    false))

;; "bool_eq_rev"
(assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
    (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
      (=>
        (= (bool_eq b b__first b__last a a__first a__last) true)
        (and
          (ite (<= a__first a__last)
            (and
              (<= b__first b__last)
              (= (- a__last a__first) (- b__last b__first)))
            (< b__last b__first))
          (forall ((temp___idx_168 Int))
            (=>
              (and (<= a__first temp___idx_168) (<= temp___idx_168 a__last))
              (= (to_rep (select a temp___idx_168)) (to_rep
                                                      (select b (+ (- b__first a__first) temp___idx_168)))))))))))

(declare-datatypes ((t 0))
  (((tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep (rec__first (mk f l))) f)
             (= (to_rep (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range low)
    (and
      (in_range high)
      (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes ((us_t 0))
  (((us_tqtmk (elts (Array Int integer))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array Int integer)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

;; "first"
(define-fun first ((a us_t)) Int
  (to_rep (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) Int
  (to_rep (rec__last (rt a))))

;; "length"
(define-fun length ((a us_t)) Int
  (ite (<= (first a) (last a)) (+ (- (last a) (first a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

;; "equal_subrange"
(define-fun equal_subrange ((param__a us_t) (param__j Int) (param__b us_t)) Bool
  (let ((temp___172 (let ((temp___170 (+ (- param__j 1) (length param__b))))
                      (of_array (to_array param__a) param__j temp___170))))
    (bool_eq
      (to_array temp___172)
      (first temp___172)
      (last temp___172)
      (to_array param__b)
      (first param__b)
      (last param__b))))

;; "has_sub_range_in_prefix"
(declare-fun has_sub_range_in_prefix (us_t
  Int
  us_t) Bool)

;; "has_sub_range"
(declare-fun has_sub_range (us_t
  us_t) Bool)

(declare-const a us_t)

(declare-const b us_t)

(declare-datatypes ((us_split_fields 0))
  (((us_split_fieldsqtmk
    (rec__types__option__exists Bool)(rec__types__option__value integer)))))

(declare-datatypes ((us_rep 0))
  (((us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const types__option__exists__first__bit Int)

(declare-const types__option__exists__last__bit Int)

(declare-const types__option__exists__position Int)

;; "types__option__exists__first__bit_axiom"
(assert (<= 0 types__option__exists__first__bit))

;; "types__option__exists__last__bit_axiom"
(assert
  (< types__option__exists__first__bit types__option__exists__last__bit))

;; "types__option__exists__position_axiom"
(assert (<= 0 types__option__exists__position))

(declare-const types__option__value__first__bit Int)

(declare-const types__option__value__last__bit Int)

(declare-const types__option__value__position Int)

;; "types__option__value__first__bit_axiom"
(assert (<= 0 types__option__value__first__bit))

;; "types__option__value__last__bit_axiom"
(assert (< types__option__value__first__bit types__option__value__last__bit))

;; "types__option__value__position_axiom"
(assert (<= 0 types__option__value__position))

(declare-const dummy us_rep)

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_180 us_t) (temp___is_init_176 Bool) (temp___skip_constant_177 Bool) (temp___do_toplevel_178 Bool) (temp___do_typ_inv_179 Bool)) Bool
  (=>
    (not (= temp___skip_constant_177 true))
    (dynamic_property
      1
      2147483647
      (first temp___expr_180)
      (last temp___expr_180))))

;; "has_sub_range_in_prefix__post_axiom"
(assert true)

;; "has_sub_range_in_prefix__def_axiom"
(assert
  (forall ((param__a us_t) (param__b us_t))
    (forall ((param__last Int))
      (! (=
           (= (has_sub_range_in_prefix param__a param__last param__b) true)
           (exists ((j Int))
             (and
               (and (<= (first param__a) j) (<= j param__last))
               (= (equal_subrange param__a j param__b) true)))) :pattern (
      (has_sub_range_in_prefix
        param__a
        param__last
        param__b)) ))))

;; "has_sub_range__post_axiom"
(assert true)

;; "has_sub_range__def_axiom"
(assert
  (forall ((param__a us_t) (param__b us_t))
    (! (=
         (= (has_sub_range param__a param__b) true)
         (= (has_sub_range_in_prefix
              param__a
              (- (+ (last param__a) 1) (length param__b))
              param__b) true)) :pattern ((has_sub_range param__a param__b)) )))

(declare-const rliteral integer)

;; "rliteral_axiom"
(assert (= (integerqtint rliteral) 1))

;; Goal "def'vc"
;; File "search_ter_p.ads", line 32, characters 0-0
(assert
  (not
  (forall ((search_ter_p__search__result us_split_fields))
    (=>
      (dynamic_invariant a true false true true)
      (=>
        (dynamic_invariant b true false true true)
        (=>
          (and (< (last a) 2147483647) (<= (first b) (last b)))
          (forall ((temp___233 Bool))
            (=>
              (ite (<= (length b) (length a))
                (let ((o b))
                  (let ((o1 a))
                    (and
                      (= temp___233 (has_sub_range o1 o))
                      (=
                        (= temp___233 true)
                        (= (has_sub_range_in_prefix
                             o1
                             (- (+ (last o1) 1) (length o))
                             o) true)))))
                (= temp___233 false))
              (forall ((search_ter_p__search__result1 us_split_fields))
                (=>
                  (exists ((result____split_fields us_split_fields))
                    (and
                      (= result____split_fields (us_split_fieldsqtmk
                                                  (distinct 0 0)
                                                  rliteral))
                      (exists ((o Bool))
                        (and
                          (ite (< (length a) (length b))
                            (= o true)
                            (= o (ite (= (length b) 0) true false)))
                          (exists ((spark__branch Bool))
                            (and
                              (= spark__branch o)
                              (ite (= spark__branch true)
                                (= search_ter_p__search__result1 result____split_fields)
                                (let ((temp___235 (first a)))
                                  (let ((o1 (length b)))
                                    (and
                                      (in_range o1)
                                      (let ((o2 (+ (last a) 1)))
                                        (and
                                          (in_range o2)
                                          (let ((o3 (- o2 o1)))
                                            (and
                                              (in_range o3)
                                              (exists ((i Int))
                                                (and
                                                  (= i temp___235)
                                                  (or
                                                    (and
                                                      (= (and (ite (<= temp___235 i)
                                                                true
                                                                false) 
                                                      (ite (<= i o3)
                                                        true
                                                        false)) true)
                                                      (let ((o4 b))
                                                        (let ((o5 a))
                                                          (let ((o6 (equal_subrange
                                                                    o5
                                                                    i
                                                                    o4)))
                                                            (and
                                                              (=
                                                                (= o6 true)
                                                                (= (let ((temp___184 
                                                                    (let ((temp___182 (+ (- i 1) 
                                                                    (length
                                                                    o4))))
                                                                    (of_array
                                                                    (to_array
                                                                    o5)
                                                                    i
                                                                    temp___182))))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___184)
                                                                    (first
                                                                    temp___184)
                                                                    (last
                                                                    temp___184)
                                                                    (to_array
                                                                    o4)
                                                                    (first
                                                                    o4)
                                                                    (last o4))) true))
                                                              (exists 
                                                                ((spark__branch1 Bool))
                                                                (and
                                                                  (= spark__branch1 o6)
                                                                  (ite (= spark__branch1 true)
                                                                    (and
                                                                    (= 
                                                                    (has_sub_range
                                                                    a
                                                                    b) true)
                                                                    (exists 
                                                                    ((result____split_fields1 us_split_fields))
                                                                    (and
                                                                    (= result____split_fields1 
                                                                    (us_split_fieldsqtmk
                                                                    (distinct 1 0)
                                                                    (rec__types__option__value
                                                                    result____split_fields)))
                                                                    (exists 
                                                                    ((o7 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o7) i)
                                                                    (exists 
                                                                    ((result____split_fields2 us_split_fields))
                                                                    (and
                                                                    (= result____split_fields2 
                                                                    (us_split_fieldsqtmk
                                                                    (rec__types__option__exists
                                                                    result____split_fields1)
                                                                    o7))
                                                                    (= search_ter_p__search__result1 result____split_fields2))))))))
                                                                    (let ((o7 
                                                                    b))
                                                                    (let ((o8 
                                                                    a))
                                                                    (and
                                                                    (=
                                                                    (= 
                                                                    (has_sub_range_in_prefix
                                                                    o8
                                                                    i
                                                                    o7) true)
                                                                    (exists 
                                                                    ((j Int))
                                                                    (and
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    o8) j)
                                                                    (<= j i))
                                                                    (= 
                                                                    (equal_subrange
                                                                    o8
                                                                    j
                                                                    o7) true))))
                                                                    (exists 
                                                                    ((result____split_fields1 us_split_fields) (i1 Int))
                                                                    (and
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (has_sub_range_in_prefix
                                                                    a
                                                                    i1
                                                                    b) true))
                                                                    (not
                                                                    (= 
                                                                    (rec__types__option__exists
                                                                    result____split_fields1) true)))
                                                                    (and
                                                                    (= (and 
                                                                    (ite (= result____split_fields1 result____split_fields)
                                                                    true
                                                                    false) 
                                                                    (ite 
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    a) i1)
                                                                    (<= i1 (- (+ 
                                                                    (last
                                                                    a) 1) 
                                                                    (length
                                                                    b))))
                                                                    true
                                                                    false)) true)
                                                                    (and
                                                                    (not
                                                                    (= i1 o3))
                                                                    (exists 
                                                                    ((i2 Int))
                                                                    (and
                                                                    (= i2 (+ i1 1))
                                                                    (let ((o9 
                                                                    b))
                                                                    (let ((o10 
                                                                    a))
                                                                    (let ((o11 
                                                                    (equal_subrange
                                                                    o10
                                                                    i2
                                                                    o9)))
                                                                    (and
                                                                    (=
                                                                    (= o11 true)
                                                                    (= 
                                                                    (let ((temp___184 
                                                                    (let ((temp___182 (+ (- i2 1) 
                                                                    (length
                                                                    o9))))
                                                                    (of_array
                                                                    (to_array
                                                                    o10)
                                                                    i2
                                                                    temp___182))))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___184)
                                                                    (first
                                                                    temp___184)
                                                                    (last
                                                                    temp___184)
                                                                    (to_array
                                                                    o9)
                                                                    (first
                                                                    o9)
                                                                    (last o9))) true))
                                                                    (exists 
                                                                    ((spark__branch2 Bool))
                                                                    (and
                                                                    (= spark__branch2 o11)
                                                                    (and
                                                                    (= spark__branch2 true)
                                                                    (and
                                                                    (= 
                                                                    (has_sub_range
                                                                    a
                                                                    b) true)
                                                                    (exists 
                                                                    ((result____split_fields2 us_split_fields))
                                                                    (and
                                                                    (= result____split_fields2 
                                                                    (us_split_fieldsqtmk
                                                                    (distinct 1 0)
                                                                    (rec__types__option__value
                                                                    result____split_fields1)))
                                                                    (exists 
                                                                    ((o12 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o12) i2)
                                                                    (exists 
                                                                    ((result____split_fields3 us_split_fields))
                                                                    (and
                                                                    (= result____split_fields3 
                                                                    (us_split_fieldsqtmk
                                                                    (rec__types__option__exists
                                                                    result____split_fields2)
                                                                    o12))
                                                                    (= search_ter_p__search__result1 result____split_fields3))))))))))))))))))))))))))))))))
                                                    (exists ((result____split_fields1 us_split_fields) (search_ter_p__search__result2 us_split_fields))
                                                      (and
                                                        (ite (= (and 
                                                          (ite (<= temp___235 i)
                                                            true
                                                            false) (ite (<= i o3)
                                                                    true
                                                                    false)) true)
                                                          (let ((o4 b))
                                                            (let ((o5 
                                                              a))
                                                              (let ((o6 
                                                                (equal_subrange
                                                                  o5
                                                                  i
                                                                  o4)))
                                                                (and
                                                                  (=
                                                                    (= o6 true)
                                                                    (= 
                                                                    (let ((temp___184 
                                                                    (let ((temp___182 (+ (- i 1) 
                                                                    (length
                                                                    o4))))
                                                                    (of_array
                                                                    (to_array
                                                                    o5)
                                                                    i
                                                                    temp___182))))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___184)
                                                                    (first
                                                                    temp___184)
                                                                    (last
                                                                    temp___184)
                                                                    (to_array
                                                                    o4)
                                                                    (first
                                                                    o4)
                                                                    (last o4))) true))
                                                                  (exists 
                                                                    ((spark__branch1 Bool))
                                                                    (and
                                                                    (= spark__branch1 o6)
                                                                    (and
                                                                    (not
                                                                    (= spark__branch1 true))
                                                                    (let ((o7 
                                                                    b))
                                                                    (let ((o8 
                                                                    a))
                                                                    (and
                                                                    (=
                                                                    (= 
                                                                    (has_sub_range_in_prefix
                                                                    o8
                                                                    i
                                                                    o7) true)
                                                                    (exists 
                                                                    ((j Int))
                                                                    (and
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    o8) j)
                                                                    (<= j i))
                                                                    (= 
                                                                    (equal_subrange
                                                                    o8
                                                                    j
                                                                    o7) true))))
                                                                    (exists 
                                                                    ((i1 Int))
                                                                    (and
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (has_sub_range_in_prefix
                                                                    a
                                                                    i1
                                                                    b) true))
                                                                    (not
                                                                    (= 
                                                                    (rec__types__option__exists
                                                                    result____split_fields1) true)))
                                                                    (and
                                                                    (= (and 
                                                                    (ite (= result____split_fields1 result____split_fields)
                                                                    true
                                                                    false) 
                                                                    (ite 
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    a) i1)
                                                                    (<= i1 (- (+ 
                                                                    (last
                                                                    a) 1) 
                                                                    (length
                                                                    b))))
                                                                    true
                                                                    false)) true)
                                                                    (= i1 o3))))))))))))))
                                                          (and
                                                            (= result____split_fields1 result____split_fields)
                                                            (= search_ter_p__search__result2 search_ter_p__search__result)))
                                                        (= search_ter_p__search__result1 result____split_fields1))))))))))))))))))))
                  (=>
                    (=>
                      (= (length b) 0)
                      (not
                        (= (rec__types__option__exists
                             search_ter_p__search__result1) true)))
                    (=>
                      (=>
                        (< (length a) (length b))
                        (not
                          (= (rec__types__option__exists
                               search_ter_p__search__result1) true)))
                      (=>
                        (= temp___233 true)
                        (= (equal_subrange
                             a
                             (to_rep
                               (rec__types__option__value
                                 search_ter_p__search__result1))
                             b) true))))))))))))))

(check-sat)
(get-info :reason-unknown)
