;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

;; "pow2"
(declare-fun pow2 (Int) Int)

(declare-const two_power_size_minus_one Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one (pow2 (- 8 1))))

;; "min"
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; "max"
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; "Min_r"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; "Max_l"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; "Min_comm"
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; "Max_comm"
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; "Min_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; "Max_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(declare-sort os_mbx_index_t 0)

;; "in_range"
(define-fun in_range ((x (_ BitVec 8))) Bool
  (and (bvule #x00 x) (bvule x #x02)))

;; "to_rep"
(declare-fun to_rep (os_mbx_index_t) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep ((_ BitVec 8)) os_mbx_index_t)

;; "inversion_axiom"
(assert
  (forall ((x os_mbx_index_t))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x os_mbx_index_t))
    (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (let ((y (bvurem x #x03)))
         (=> (in_range y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep
                                                                  (of_rep x))) )))

(declare-sort os_mbx_count_t 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))

;; "in_range"
(define-fun in_range1 ((x (_ BitVec 8))) Bool
  (and (bvule #x00 x) (bvule x #x03)))

;; "to_rep"
(declare-fun to_rep1 (os_mbx_count_t) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep1 ((_ BitVec 8)) os_mbx_count_t)

;; "inversion_axiom"
(assert
  (forall ((x os_mbx_count_t))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x os_mbx_count_t))
    (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-sort os_task_id_t 0)

;; "os_task_id_t'int"
(declare-fun os_task_id_tqtint (os_task_id_t) Int)

;; "os_task_id_t'axiom"
(assert
  (forall ((i os_task_id_t))
    (and (<= (- 1) (os_task_id_tqtint i)) (<= (os_task_id_tqtint i) 4))))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= (- 1) x) (<= x 4)))

;; "to_rep"
(define-fun to_rep2 ((x os_task_id_t)) Int
  (os_task_id_tqtint x))

;; "of_rep"
(declare-fun of_rep2 (Int) os_task_id_t)

;; "inversion_axiom"
(assert
  (forall ((x os_task_id_t))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x os_task_id_t))
    (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

(declare-sort os_mbx_msg_t 0)

;; "os_mbx_msg_t'int"
(declare-fun os_mbx_msg_tqtint (os_mbx_msg_t) Int)

;; "os_mbx_msg_t'axiom"
(assert
  (forall ((i os_mbx_msg_t))
    (and (<= 0 (os_mbx_msg_tqtint i)) (<= (os_mbx_msg_tqtint i) 4294967295))))

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 4294967295)))

;; "to_rep"
(define-fun to_rep3 ((x os_mbx_msg_t)) Int
  (os_mbx_msg_tqtint x))

;; "of_rep"
(declare-fun of_rep3 (Int) os_mbx_msg_t)

;; "inversion_axiom"
(assert
  (forall ((x os_mbx_msg_t))
    (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; "range_axiom"
(assert
  (forall ((x os_mbx_msg_t))
    (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range3 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                                  (of_rep3 x))) )))

(declare-datatypes ((us_split_fields 0))
  (((us_split_fieldsqtmk
    (rec__test__os_mbx_entry_t__sender_id os_task_id_t)(rec__test__os_mbx_entry_t__msg os_mbx_msg_t)))))

(declare-datatypes ((us_rep 0))
  (((us_repqtmk (us_split_fields1 us_split_fields)))))

;; "bool_eq"
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool
  (ite (and
         (= (to_rep2
              (rec__test__os_mbx_entry_t__sender_id (us_split_fields1 a))) 
         (to_rep2
           (rec__test__os_mbx_entry_t__sender_id (us_split_fields1 b))))
         (= (to_rep3 (rec__test__os_mbx_entry_t__msg (us_split_fields1 a))) 
         (to_rep3
           (rec__test__os_mbx_entry_t__msg (us_split_fields1 b)))))
    true
    false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const test__os_mbx_entry_t__sender_id__first__bit Int)

(declare-const test__os_mbx_entry_t__sender_id__last__bit Int)

(declare-const test__os_mbx_entry_t__sender_id__position Int)

;; "test__os_mbx_entry_t__sender_id__first__bit_axiom"
(assert (<= 0 test__os_mbx_entry_t__sender_id__first__bit))

;; "test__os_mbx_entry_t__sender_id__last__bit_axiom"
(assert
  (< test__os_mbx_entry_t__sender_id__first__bit test__os_mbx_entry_t__sender_id__last__bit))

;; "test__os_mbx_entry_t__sender_id__position_axiom"
(assert (<= 0 test__os_mbx_entry_t__sender_id__position))

(declare-const test__os_mbx_entry_t__msg__first__bit Int)

(declare-const test__os_mbx_entry_t__msg__last__bit Int)

(declare-const test__os_mbx_entry_t__msg__position Int)

;; "test__os_mbx_entry_t__msg__first__bit_axiom"
(assert (<= 0 test__os_mbx_entry_t__msg__first__bit))

;; "test__os_mbx_entry_t__msg__last__bit_axiom"
(assert
  (< test__os_mbx_entry_t__msg__first__bit test__os_mbx_entry_t__msg__last__bit))

;; "test__os_mbx_entry_t__msg__position_axiom"
(assert (<= 0 test__os_mbx_entry_t__msg__position))

(declare-const dummy us_rep)

;; "bool_eq"
(define-fun bool_eq1 ((a (Array (_ BitVec 8) us_rep)) (a__first (_ BitVec 8)) (a__last (_ BitVec 8)) (b (Array (_ BitVec 8) us_rep)) (b__first (_ BitVec 8)) (b__last (_ BitVec 8))) Bool
  (ite (and
         (ite (bvule a__first a__last)
           (and
             (bvule b__first b__last)
             (= (bvsub a__last a__first) (bvsub b__last b__first)))
           (bvugt b__first b__last))
         (forall ((temp___idx_168 (_ BitVec 8)))
           (=>
             (and
               (bvule a__first temp___idx_168)
               (bvule temp___idx_168 a__last))
             (= (bool_eq
                  (select a temp___idx_168)
                  (select b (bvadd (bvsub b__first a__first) temp___idx_168))) true))))
    true
    false))

;; "bool_eq_rev"
(assert
  (forall ((a (Array (_ BitVec 8) us_rep)) (b (Array (_ BitVec 8) us_rep)))
    (forall ((a__first (_ BitVec 8)) (a__last (_ BitVec 8)) (b__first (_ BitVec 8)) (b__last (_ BitVec 8)))
      (=>
        (= (bool_eq1 b b__first b__last a a__first a__last) true)
        (and
          (ite (bvule a__first a__last)
            (and
              (bvule b__first b__last)
              (= (bvsub a__last a__first) (bvsub b__last b__first)))
            (bvugt b__first b__last))
          (forall ((temp___idx_168 (_ BitVec 8)))
            (=>
              (and
                (bvule a__first temp___idx_168)
                (bvule temp___idx_168 a__last))
              (= (bool_eq
                   (select a temp___idx_168)
                   (select b (bvadd (bvsub b__first a__first) temp___idx_168))) true))))))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-datatypes ((us_split_fields2 0))
  (((us_split_fieldsqtmk1
    (rec__test__os_mbx_t__head os_mbx_index_t)(rec__test__os_mbx_t__count os_mbx_count_t)(rec__test__os_mbx_t__mbx_array (Array (_ BitVec 8) us_rep))))))

(declare-datatypes ((us_rep1 0))
  (((us_repqtmk1 (us_split_fields3 us_split_fields2)))))

;; "bool_eq"
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool
  (ite (and
         (= (to_rep (rec__test__os_mbx_t__head (us_split_fields3 a))) 
         (to_rep
           (rec__test__os_mbx_t__head (us_split_fields3 b))))
         (and
           (= (to_rep1 (rec__test__os_mbx_t__count (us_split_fields3 a))) 
           (to_rep1
             (rec__test__os_mbx_t__count (us_split_fields3 b))))
           (= (bool_eq1
                (rec__test__os_mbx_t__mbx_array (us_split_fields3 a))
                #x00
                #x02
                (rec__test__os_mbx_t__mbx_array (us_split_fields3 b))
                #x00
                #x02) true)))
    true
    false))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const test__os_mbx_t__head__first__bit Int)

(declare-const test__os_mbx_t__head__last__bit Int)

(declare-const test__os_mbx_t__head__position Int)

;; "test__os_mbx_t__head__first__bit_axiom"
(assert (<= 0 test__os_mbx_t__head__first__bit))

;; "test__os_mbx_t__head__last__bit_axiom"
(assert (< test__os_mbx_t__head__first__bit test__os_mbx_t__head__last__bit))

;; "test__os_mbx_t__head__position_axiom"
(assert (<= 0 test__os_mbx_t__head__position))

(declare-const test__os_mbx_t__count__first__bit Int)

(declare-const test__os_mbx_t__count__last__bit Int)

(declare-const test__os_mbx_t__count__position Int)

;; "test__os_mbx_t__count__first__bit_axiom"
(assert (<= 0 test__os_mbx_t__count__first__bit))

;; "test__os_mbx_t__count__last__bit_axiom"
(assert
  (< test__os_mbx_t__count__first__bit test__os_mbx_t__count__last__bit))

;; "test__os_mbx_t__count__position_axiom"
(assert (<= 0 test__os_mbx_t__count__position))

(declare-const test__os_mbx_t__mbx_array__first__bit Int)

(declare-const test__os_mbx_t__mbx_array__last__bit Int)

(declare-const test__os_mbx_t__mbx_array__position Int)

;; "test__os_mbx_t__mbx_array__first__bit_axiom"
(assert (<= 0 test__os_mbx_t__mbx_array__first__bit))

;; "test__os_mbx_t__mbx_array__last__bit_axiom"
(assert
  (< test__os_mbx_t__mbx_array__first__bit test__os_mbx_t__mbx_array__last__bit))

;; "test__os_mbx_t__mbx_array__position_axiom"
(assert (<= 0 test__os_mbx_t__mbx_array__position))

(declare-const dummy1 us_rep1)

;; "os_mbx_get_mbx_head"
(define-fun os_mbx_get_mbx_head ((param__task_id Int) (Test__os_task_mbx_rw___os_task_mbx_rw___ (Array Int us_rep1))) (_ BitVec 8)
  (to_rep
    (rec__test__os_mbx_t__head
      (us_split_fields3
        (select Test__os_task_mbx_rw___os_task_mbx_rw___ param__task_id)))))

;; "os_ghost_mbx_are_well_formed"
(declare-fun os_ghost_mbx_are_well_formed ((Array Int us_rep1)) Bool)

;; "os_mbx_get_mbx_count"
(define-fun os_mbx_get_mbx_count ((param__task_id Int) (Test__os_task_mbx_rw___os_task_mbx_rw___ (Array Int us_rep1))) (_ BitVec 8)
  (to_rep1
    (rec__test__os_mbx_t__count
      (us_split_fields3
        (select Test__os_task_mbx_rw___os_task_mbx_rw___ param__task_id)))))

;; "oadd"
(define-fun oadd ((param__left (_ BitVec 8)) (param__right (_ BitVec 8))) (_ BitVec 8)
  (let ((temp___172 (bvadd param__left (bvurem param__right #x03))))
    (ite (bvule (bvsub #x03 param__left) (bvurem param__right #x03))
      (bvsub temp___172 #x03)
      temp___172)))

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 4)))

;; "os_ghost_task_mbx_are_well_formed"
(define-fun os_ghost_task_mbx_are_well_formed ((param__task_id Int) (Test__os_task_mbx_rw___os_task_mbx_rw___ (Array Int us_rep1))) Bool
  (ite (forall ((index (_ BitVec 8)))
         (=>
           (and (bvule #x00 index) (bvule index #x02))
           (ite (bvuge index (os_mbx_get_mbx_count
                               param__task_id
                               Test__os_task_mbx_rw___os_task_mbx_rw___))
             (= (to_rep2
                  (rec__test__os_mbx_entry_t__sender_id
                    (us_split_fields1
                      (let ((temp___175 (rec__test__os_mbx_t__mbx_array
                                          (us_split_fields3
                                            (select Test__os_task_mbx_rw___os_task_mbx_rw___ param__task_id)))))
                        (select temp___175 (oadd
                                             (os_mbx_get_mbx_head
                                               param__task_id
                                               Test__os_task_mbx_rw___os_task_mbx_rw___)
                                             index)))))) (- 1))
             (in_range4
               (to_rep2
                 (rec__test__os_mbx_entry_t__sender_id
                   (us_split_fields1
                     (let ((temp___176 (rec__test__os_mbx_t__mbx_array
                                         (us_split_fields3
                                           (select Test__os_task_mbx_rw___os_task_mbx_rw___ param__task_id)))))
                       (select temp___176 (oadd
                                            (os_mbx_get_mbx_head
                                              param__task_id
                                              Test__os_task_mbx_rw___os_task_mbx_rw___)
                                            index))))))))))
    true
    false))

;; "os_mbx_is_empty"
(define-fun os_mbx_is_empty ((param__task_id Int) (Test__os_task_mbx_rw___os_task_mbx_rw___ (Array Int us_rep1))) Bool
  (= (to_rep1
       (rec__test__os_mbx_t__count
         (us_split_fields3
           (select Test__os_task_mbx_rw___os_task_mbx_rw___ param__task_id)))) #x00))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_324 us_rep1) (temp___is_init_320 Bool) (temp___skip_constant_321 Bool) (temp___do_toplevel_322 Bool) (temp___do_typ_inv_323 Bool)) Bool
  true)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const task_id Int)

(declare-const mbx_index (_ BitVec 8))

(declare-const c20b Int)

(declare-const c21b (_ BitVec 8))

(declare-const c23b Int)

;; "temp_____aggregate_def_419"
(declare-fun temp_____aggregate_def_419 ((Array (_ BitVec 8) us_rep)
  (_ BitVec 8)
  us_rep) (Array (_ BitVec 8) us_rep))

;; "os_ghost_mbx_are_well_formed__post_axiom"
(assert true)

;; "os_ghost_mbx_are_well_formed__def_axiom"
(assert
  (forall ((Test__os_task_mbx_rw___os_task_mbx_rw___ (Array Int us_rep1)))
    (! (=
         (= (os_ghost_mbx_are_well_formed
              Test__os_task_mbx_rw___os_task_mbx_rw___) true)
         (forall ((task_id1 Int))
           (=>
             (and (<= 0 task_id1) (<= task_id1 4))
             (= (os_ghost_task_mbx_are_well_formed
                  task_id1
                  Test__os_task_mbx_rw___os_task_mbx_rw___) true)))) :pattern (
    (os_ghost_mbx_are_well_formed
      Test__os_task_mbx_rw___os_task_mbx_rw___)) )))

;; "def_axiom"
(assert
  (forall ((temp___416 (Array (_ BitVec 8) us_rep)))
    (forall ((temp___417 (_ BitVec 8)))
      (forall ((temp___418 us_rep))
        (let ((temp___420 (temp_____aggregate_def_419
                            temp___416
                            temp___417
                            temp___418)))
          (forall ((temp___421 (_ BitVec 8)))
            (! (ite (= temp___421 temp___417)
                 (= (select temp___420 temp___421) temp___418)
                 (= (select temp___420 temp___421) (select temp___416 temp___421))) :pattern ((select temp___420 temp___421)) )))))))

(declare-const rliteral os_task_id_t)

;; "rliteral_axiom"
(assert (= (os_task_id_tqtint rliteral) (- 1)))

(declare-const rliteral1 os_mbx_msg_t)

;; "rliteral_axiom"
(assert (= (os_mbx_msg_tqtint rliteral1) 0))

;; Goal "def'vc"
;; File "test.adb", line 283, characters 0-0
(assert
  (not
  (forall ((os_task_mbx_rw (Array Int us_rep1)))
    (=>
      (forall ((temp___584 Int))
        (=>
          (and (<= 0 temp___584) (<= temp___584 4))
          (dynamic_invariant
            (select os_task_mbx_rw temp___584)
            true
            false
            true
            true)))
      (=>
        (in_range4 task_id)
        (=>
          (and
            (not (= (os_mbx_is_empty task_id os_task_mbx_rw) true))
            (= (os_ghost_mbx_are_well_formed os_task_mbx_rw) true))
          (let ((o task_id))
            (let ((test__os_mbx_remove_first_mbx__mbx_index__assume (os_mbx_get_mbx_head
                                                                    o
                                                                    os_task_mbx_rw)))
              (=>
                (and
                  (in_range test__os_mbx_remove_first_mbx__mbx_index__assume)
                  (= test__os_mbx_remove_first_mbx__mbx_index__assume 
                  (to_rep
                    (rec__test__os_mbx_t__head
                      (us_split_fields3 (select os_task_mbx_rw o))))))
                (=>
                  (= test__os_mbx_remove_first_mbx__mbx_index__assume 
                  mbx_index)
                  (=>
                    (in_range mbx_index)
                    (=>
                      (= task_id c20b)
                      (=>
                        (in_range4 c20b)
                        (=>
                          (= mbx_index c21b)
                          (=>
                            (in_range c21b)
                            (let ((usq_ (us_split_fields3
                                          (select os_task_mbx_rw c20b))))
                              (forall ((os_task_mbx_rw1 (Array Int us_rep1)))
                                (=>
                                  (= os_task_mbx_rw1 (store os_task_mbx_rw 
                                  c20b (us_repqtmk1
                                         (us_split_fieldsqtmk1
                                           (rec__test__os_mbx_t__head usq_)
                                           (rec__test__os_mbx_t__count usq_)
                                           (store (rec__test__os_mbx_t__mbx_array
                                                    (us_split_fields3
                                                      (select os_task_mbx_rw 
                                                      c20b))) c21b (us_repqtmk
                                                                    (us_split_fieldsqtmk
                                                                    rliteral
                                                                    (rec__test__os_mbx_entry_t__msg
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__test__os_mbx_t__mbx_array
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw 
                                                                    c20b))) 
                                                                    c21b))))))))))
                                  (let ((usq_1 (us_split_fields3
                                                 (select os_task_mbx_rw1 
                                                 c20b))))
                                    (forall ((os_task_mbx_rw2 (Array Int us_rep1)))
                                      (=>
                                        (= os_task_mbx_rw2 (store os_task_mbx_rw1 
                                        c20b (us_repqtmk1
                                               (us_split_fieldsqtmk1
                                                 (rec__test__os_mbx_t__head
                                                   usq_1)
                                                 (rec__test__os_mbx_t__count
                                                   usq_1)
                                                 (store (rec__test__os_mbx_t__mbx_array
                                                          (us_split_fields3
                                                            (select os_task_mbx_rw1 
                                                            c20b))) c21b 
                                                 (us_repqtmk
                                                   (us_split_fieldsqtmk
                                                     (rec__test__os_mbx_entry_t__sender_id
                                                       (us_split_fields1
                                                         (select (rec__test__os_mbx_t__mbx_array
                                                                   (us_split_fields3
                                                                    (select os_task_mbx_rw1 
                                                                    c20b))) 
                                                         c21b)))
                                                     rliteral1)))))))
                                        (=>
                                          (= task_id c23b)
                                          (=>
                                            (in_range4 c23b)
                                            (let ((usq_2 (us_split_fields3
                                                           (select os_task_mbx_rw2 
                                                           c23b))))
                                              (forall ((o1 (_ BitVec 8)))
                                                (=>
                                                  (let ((o2 c23b))
                                                    (let ((o3 (os_mbx_get_mbx_head
                                                                o2
                                                                os_task_mbx_rw2)))
                                                      (and
                                                        (and
                                                          (in_range o3)
                                                          (= o3 (to_rep
                                                                  (rec__test__os_mbx_t__head
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw2 o2))))))
                                                        (let ((temp___557 (bvadd o3 #x01)))
                                                          (let ((o4 c23b))
                                                            (let ((o5 
                                                              (os_mbx_get_mbx_head
                                                                o4
                                                                os_task_mbx_rw2)))
                                                              (and
                                                                (and
                                                                  (in_range
                                                                    o5)
                                                                  (= o5 
                                                                  (to_rep
                                                                    (rec__test__os_mbx_t__head
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw2 o4))))))
                                                                (ite (bvule (bvsub #x03 o5) #x01)
                                                                  (= o1 (bvsub temp___557 #x03))
                                                                  (= o1 temp___557)))))))))
                                                  (forall ((o2 os_mbx_index_t))
                                                    (=>
                                                      (= (to_rep o2) o1)
                                                      (forall ((os_task_mbx_rw3 (Array Int us_rep1)))
                                                        (=>
                                                          (= os_task_mbx_rw3 (store os_task_mbx_rw2 
                                                          c23b (us_repqtmk1
                                                                 (us_split_fieldsqtmk1
                                                                   o2
                                                                   (rec__test__os_mbx_t__count
                                                                    usq_2)
                                                                   (rec__test__os_mbx_t__mbx_array
                                                                    usq_2)))))
                                                          (let ((o3 task_id))
                                                            (forall ((os_task_mbx_rw4 (Array Int us_rep1)))
                                                              (=>
                                                                (and
                                                                  (forall 
                                                                    ((temp___index_372 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 0 temp___index_372)
                                                                    (<= temp___index_372 4))
                                                                    (= 
                                                                    (bool_eq2
                                                                    (select os_task_mbx_rw4 temp___index_372)
                                                                    (ite (= temp___index_372 o3)
                                                                    (us_repqtmk1
                                                                    (let ((usq_3 
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw3 o3))))
                                                                    (us_split_fieldsqtmk1
                                                                    (rec__test__os_mbx_t__head
                                                                    usq_3)
                                                                    (of_rep1
                                                                    (bvsub 
                                                                    (to_rep1
                                                                    (rec__test__os_mbx_t__count
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw3 o3)))) #x01))
                                                                    (rec__test__os_mbx_t__mbx_array
                                                                    usq_3))))
                                                                    (select os_task_mbx_rw3 temp___index_372))) true)))
                                                                  (forall 
                                                                    ((temp___376 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 0 temp___376)
                                                                    (<= temp___376 4))
                                                                    (dynamic_invariant
                                                                    (select os_task_mbx_rw4 temp___376)
                                                                    true
                                                                    false
                                                                    true
                                                                    true))))
                                                                (forall 
                                                                  ((temp___index_587 Int))
                                                                  (=>
                                                                    (and
                                                                    (<= 0 temp___index_587)
                                                                    (<= temp___index_587 4))
                                                                    (= 
                                                                    (bool_eq2
                                                                    (select os_task_mbx_rw4 temp___index_587)
                                                                    (ite (= temp___index_587 
                                                                    task_id)
                                                                    (us_repqtmk1
                                                                    (let ((usq_qtunused 
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw 
                                                                    task_id))))
                                                                    (us_split_fieldsqtmk1
                                                                    (of_rep
                                                                    (let ((temp___591 (bvadd 
                                                                    (to_rep
                                                                    (rec__test__os_mbx_t__head
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw 
                                                                    task_id)))) #x01)))
                                                                    (ite (bvule (bvsub #x03 
                                                                    (to_rep
                                                                    (rec__test__os_mbx_t__head
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw 
                                                                    task_id))))) #x01)
                                                                    (bvsub temp___591 #x03)
                                                                    temp___591)))
                                                                    (of_rep1
                                                                    (bvsub 
                                                                    (to_rep1
                                                                    (rec__test__os_mbx_t__count
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw 
                                                                    task_id)))) #x01))
                                                                    (temp_____aggregate_def_419
                                                                    (rec__test__os_mbx_t__mbx_array
                                                                    (us_split_fields3
                                                                    (select os_task_mbx_rw 
                                                                    task_id)))
                                                                    (let ((temp___596 (bvsub 
                                                                    (os_mbx_get_mbx_head
                                                                    task_id
                                                                    os_task_mbx_rw4) #x01)))
                                                                    (ite (bvult 
                                                                    (os_mbx_get_mbx_head
                                                                    task_id
                                                                    os_task_mbx_rw4) #x01)
                                                                    (bvadd temp___596 #x03)
                                                                    temp___596))
                                                                    (us_repqtmk
                                                                    (us_split_fieldsqtmk
                                                                    rliteral
                                                                    rliteral1))))))
                                                                    (select os_task_mbx_rw temp___index_587))) true))))))))))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
