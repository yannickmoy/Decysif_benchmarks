(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

type us_private

logic us_null_ext__ : us_private

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. (((- 2147483648) <= integerqtint(i)) and
  (integerqtint(i) <= 2147483647)))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom :
  (forall i:natural. ((0 <= naturalqtint(i)) and
  (naturalqtint(i) <= 2147483647)))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type map

logic get : map, int, int -> natural

logic set : map, int, int, natural -> map

axiom Select_eq :
  (forall m:map.
  (forall i:int.
  (forall j:int.
  (forall a:natural [set(m, i, j, a)]. (get(set(m, i, j, a), i, j) = a)))))

axiom Select_neq :
  (forall m:map.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a:natural [get(set(m, i, j, a), i2, j2)| set(m, i, j, a), get(m,
  i2, j2)]. ((not ((i = i2) and (j = j2))) -> (get(set(m, i, j, a), i2,
  j2) = get(m, i2, j2)))))))

logic c62b : map

logic c77b : map

logic c96b : map

type tTmSP1

logic tTmSP1qtint : tTmSP1 -> int

axiom tTmSP1qtaxiom :
  (forall i:tTmSP1. ((1 <= tTmSP1qtint(i)) and (tTmSP1qtint(i) <= 10)))

type tTmSP2

logic tTmSP2qtint : tTmSP2 -> int

axiom tTmSP2qtaxiom :
  (forall i:tTmSP2. ((1 <= tTmSP2qtint(i)) and (tTmSP2qtint(i) <= 10)))

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

type t58b

logic t58bqtint : t58b -> int

axiom t58bqtaxiom :
  (forall i:t58b. ((1 <= t58bqtint(i)) and (t58bqtint(i) <= 10)))

type t59b

logic t59bqtint : t59b -> int

axiom t59bqtaxiom :
  (forall i:t59b. ((1 <= t59bqtint(i)) and (t59bqtint(i) <= 10)))

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic temp_____aggregate_def_286 : int, int, int -> map

type t73b

logic t73bqtint : t73b -> int

axiom t73bqtaxiom :
  (forall i:t73b. ((1 <= t73bqtint(i)) and (t73bqtint(i) <= 10)))

type t74b

logic t74bqtint : t74b -> int

axiom t74bqtaxiom :
  (forall i:t74b. ((1 <= t74bqtint(i)) and (t74bqtint(i) <= 10)))

logic value__size2 : int

logic object__size2 : int

logic component__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom component__size_axiom2 : (0 <= component__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic temp_____aggregate_def_310 : int, int, int -> map

type t92b

logic t92bqtint : t92b -> int

axiom t92bqtaxiom :
  (forall i:t92b. ((1 <= t92bqtint(i)) and (t92bqtint(i) <= 10)))

logic value__size3 : int

logic object__size3 : int

logic component__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom component__size_axiom3 : (0 <= component__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic temp_____aggregate_def_335 : int -> map

logic rliteral : natural

axiom rliteral_axiom : (naturalqtint(rliteral) = 1)

logic rliteral1 : natural

axiom rliteral_axiom1 : (naturalqtint(rliteral1) = 2)

logic rliteral2 : natural

axiom rliteral_axiom2 : (naturalqtint(rliteral2) = 0)

 (* "test_swap_lines.adb", line 1, characters 0-0 *)
goal defqtvc :
  (forall tmp:int. forall tmp1:int.
  (forall temp___292:map.
  (((forall temp___290:int. forall temp___291:int [get(temp___292,
    temp___290, temp___291)]. (((((temp___290 = 5) and ((1 <= temp___291) and
    (temp___291 <= 10))) -> (get(temp___292, temp___290,
    temp___291) = rliteral)) and (((temp___290 = 7) and
    ((1 <= temp___291) and (temp___291 <= 10))) -> (get(temp___292,
    temp___290, temp___291) = rliteral1))) and (((not (temp___290 = 5)) and
    ((not (temp___290 = 7)) and ((1 <= temp___290) and
    (temp___290 <= 10)))) -> (get(temp___292, temp___290,
    temp___291) = rliteral2)))) and
  (temp___292 = temp_____aggregate_def_286(1, 2, 0))) ->
  (forall m:map. ((m = temp___292) -> ((m = c62b) ->
  (forall m1:map. ((in_range1(tmp) and
  (exists c:int. ((c = 1) and (if (andb((if (1 <= c) then true else false),
  (if (c <= 10) then true else false)) = true) then (exists m2:map.
                                                    exists tmp2:int.
                                                    exists c1:int.
                                                    ((forall i:int.
                                                     (((1 <= i) and
                                                     (i <= (c1 - 1))) ->
                                                     ((to_rep(get(m2, 5,
                                                     i)) = to_rep(get(m, 7,
                                                     i))) and (to_rep(get(m2,
                                                     7, i)) = to_rep(get(m,
                                                     5, i)))))) and
                                                    ((andb((if (in_range1(tmp2) and
                                                    (forall temp___301:int.
                                                    forall temp___302:int.
                                                    ((((1 <= temp___301) and
                                                    (temp___301 <= 10)) and
                                                    ((1 <= temp___302) and
                                                    (temp___302 <= 10))) ->
                                                    ((((10 <  temp___302) or
                                                    ((temp___302 <  1) or
                                                    ((c1 <= temp___302) or
                                                    (not (7 = temp___301))))) and
                                                    ((10 <  temp___302) or
                                                    ((temp___302 <  1) or
                                                    ((c1 <= temp___302) or
                                                    (not (5 = temp___301)))))) ->
                                                    (get(m2, temp___301,
                                                    temp___302) = get(m,
                                                    temp___301,
                                                    temp___302)))))) then true else false),
                                                    (if ((1 <= c1) and
                                                    (c1 <= 10)) then true else false)) = true) and
                                                    (exists o:int.
                                                    ((to_rep(get(m2, 5,
                                                    c1)) = o) and
                                                    (exists tmp3:int.
                                                    ((tmp3 = o) and
                                                    (exists o1:int.
                                                    ((to_rep(get(m2, 7,
                                                    c1)) = o1) and
                                                    (exists o2:natural.
                                                    ((to_rep(o2) = o1) and
                                                    (exists m3:map.
                                                    ((m3 = set(m2, 5, c1,
                                                    o2)) and
                                                    (exists o3:natural.
                                                    ((to_rep(o3) = tmp3) and
                                                    ((m1 = set(m3, 7, c1,
                                                    o3)) and (c1 = 10))))))))))))))))) else (m1 = m))))) ->
  ((forall i:int. (((1 <= i) and (i <= 10)) ->
   (forall j:int. (((1 <= j) and (j <= 10)) ->
   (if (i = 5) then (to_rep(get(m1, i,
   j)) = 2) else (if (i = 7) then (to_rep(get(m1, i,
   j)) = 1) else (to_rep(get(m1, i, j)) = 0))))))) ->
  (forall temp___316:map.
  (((forall temp___314:int. forall temp___315:int [get(temp___316,
    temp___314, temp___315)]. (((((temp___314 = 5) and ((1 <= temp___315) and
    (temp___315 <= 10))) -> (get(temp___316, temp___314,
    temp___315) = rliteral)) and (((temp___314 = 7) and
    ((1 <= temp___315) and (temp___315 <= 10))) -> (get(temp___316,
    temp___314, temp___315) = rliteral1))) and (((not (temp___314 = 5)) and
    ((not (temp___314 = 7)) and ((1 <= temp___314) and
    (temp___314 <= 10)))) -> (get(temp___316, temp___314,
    temp___315) = rliteral2)))) and
  (temp___316 = temp_____aggregate_def_310(1, 2, 0))) ->
  (forall m2:map. ((m2 = temp___316) -> ((m2 = c77b) ->
  (forall m3:map. ((in_range1(tmp1) and
  (exists c:int. ((c = 0) and (if (andb((if (0 <= c) then true else false),
  (if (c <= 9) then true else false)) = true) then (exists m4:map.
                                                   exists tmp2:int.
                                                   exists c1:int.
                                                   (((forall i:int.
                                                     (((1 <= i) and
                                                     (i <= c1)) ->
                                                     ((to_rep(get(m4, 5,
                                                     i)) = to_rep(get(m2, 7,
                                                     i))) and (to_rep(get(m4,
                                                     7, i)) = to_rep(get(m2,
                                                     5, i)))))) and
                                                   (forall i:int.
                                                   ((((c1 + 1) <= i) and
                                                   (i <= 10)) ->
                                                   ((to_rep(get(m4, 5,
                                                   i)) = to_rep(get(m2, 5,
                                                   i))) and (to_rep(get(m4,
                                                   7, i)) = to_rep(get(m2, 7,
                                                   i))))))) and
                                                   ((andb((if ((forall temp___324:int.
                                                               forall temp___325:int.
                                                               ((((1 <= temp___324) and
                                                               (temp___324 <= 10)) and
                                                               ((1 <= temp___325) and
                                                               (temp___325 <= 10))) ->
                                                               (((not (7 = temp___324)) and
                                                               (not (5 = temp___324))) ->
                                                               (get(m4,
                                                               temp___324,
                                                               temp___325) = get(m2,
                                                               temp___324,
                                                               temp___325))))) and
                                                   in_range1(tmp2)) then true else false),
                                                   (if ((0 <= c1) and
                                                   (c1 <= 9)) then true else false)) = true) and
                                                   (exists o:int.
                                                   ((to_rep(get(m4, 5,
                                                   (c1 + 1))) = o) and
                                                   (exists tmp3:int.
                                                   ((tmp3 = o) and
                                                   (exists o1:int.
                                                   ((to_rep(get(m4, 7,
                                                   (c1 + 1))) = o1) and
                                                   (exists o2:natural.
                                                   ((to_rep(o2) = o1) and
                                                   (exists m5:map.
                                                   ((m5 = set(m4, 5,
                                                   (c1 + 1), o2)) and
                                                   (exists o3:natural.
                                                   ((to_rep(o3) = tmp3) and
                                                   ((m3 = set(m5, 7,
                                                   (c1 + 1), o3)) and
                                                   (c1 = 9))))))))))))))))) else (m3 = m2))))) ->
  ((forall i:int. (((1 <= i) and (i <= 10)) ->
   (forall j:int. (((1 <= j) and (j <= 10)) ->
   (if (i = 5) then (to_rep(get(m3, i,
   j)) = 2) else (if (i = 7) then (to_rep(get(m3, i,
   j)) = 1) else (to_rep(get(m3, i, j)) = 0))))))) ->
  (forall temp___341:map.
  (((forall temp___339:int. forall temp___340:int [get(temp___341,
    temp___339, temp___340)]. (((1 <= temp___339) and (temp___339 <= 10)) ->
    (get(temp___341, temp___339, temp___340) = rliteral2))) and
  (temp___341 = temp_____aggregate_def_335(0))) ->
  (forall m4:map. ((m4 = temp___341) -> ((m4 = c96b) ->
  (forall m5:map.
  ((exists i:int. ((i = 1) and (if (andb((if (1 <= i) then true else false),
   (if (i <= 10) then true else false)) = true) then (exists m6:map.
                                                     exists i1:int.
                                                     (((forall k:int.
                                                       (((1 <= k) and
                                                       (k <= (i1 - 1))) ->
                                                       (to_rep(get(m6, k,
                                                       k)) = (to_rep(get(m4,
                                                       k, k)) + 1)))) and
                                                     (forall k:int.
                                                     (((1 <= k) and
                                                     (k <= (i1 - 1))) ->
                                                     (forall h:int.
                                                     (((1 <= h) and
                                                     (h <= (i1 - 1))) ->
                                                     ((not (k = h)) ->
                                                     (to_rep(get(m6, k,
                                                     h)) = to_rep(get(m4, k,
                                                     h))))))))) and
                                                     ((andb((if (forall temp___347:int.
                                                                forall temp___348:int.
                                                                ((((1 <= temp___347) and
                                                                (temp___347 <= 10)) and
                                                                ((1 <= temp___348) and
                                                                (temp___348 <= 10))) ->
                                                                (((10 <  temp___348) or
                                                                ((temp___348 <  1) or
                                                                ((i1 <= temp___348) or
                                                                ((10 <  temp___347) or
                                                                ((temp___347 <  1) or
                                                                (i1 <= temp___347)))))) ->
                                                                (get(m6,
                                                                temp___347,
                                                                temp___348) = get(m4,
                                                                temp___347,
                                                                temp___348))))) then true else false),
                                                     (if ((1 <= i1) and
                                                     (i1 <= 10)) then true else false)) = true) and
                                                     (exists o:int.
                                                     ((to_rep(get(m6, i1,
                                                     i1)) = o) and (let o1 =
                                                     (o + 1) : int in
                                                     (in_range(o1) and
                                                     (exists o2:natural.
                                                     ((to_rep(o2) = o1) and
                                                     ((m5 = set(m6, i1, i1,
                                                     o2)) and (i1 = 10))))))))))) else (m5 = m4)))) ->
  (forall i:int. (((1 <= i) and (i <= 10)) ->
  (forall j:int. (((1 <= j) and (j <= 10)) -> ((not (i = j)) ->
  (to_rep(get(m5, i, j)) = 0))))))))))))))))))))))))))))))
