;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0))
  (((Tuple0))))

(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

;; "length"
(define-fun length ((x Int) (y Int)) Int
  (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

(declare-sort character 0)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

;; "to_rep"
(declare-fun to_rep (character) Int)

;; "of_rep"
(declare-fun of_rep (Int) character)

;; "inversion_axiom"
(assert
  (forall ((x character))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

;; "slide"
(declare-fun slide ((Array Int character)
  Int
  Int) (Array Int character))

;; "slide_eq"
(assert
  (forall ((a (Array Int character)))
    (forall ((first Int))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; "slide_def"
(assert
  (forall ((a (Array Int character)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

;; "concat"
(declare-fun concat1 ((Array Int character)
  Int
  Int
  (Array Int character)
  Int
  Int) (Array Int character))

;; "concat_def"
(assert
  (forall ((a (Array Int character)) (b (Array Int character)))
    (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
      (forall ((i Int))
        (! (and
             (=>
               (and (<= a_first i) (<= i a_last))
               (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
             (=>
               (< a_last i)
               (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
        (concat1
          a
          a_first
          a_last
          b
          b_first
          b_last) i)) )))))

;; "bool_eq"
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool
  (ite (and
         (ite (<= a__first a__last)
           (and
             (<= b__first b__last)
             (= (- a__last a__first) (- b__last b__first)))
           (< b__last b__first))
         (forall ((temp___idx_105 Int))
           (=>
             (and (<= a__first temp___idx_105) (<= temp___idx_105 a__last))
             (= (to_rep (select a temp___idx_105)) (to_rep
                                                     (select b (+ (- b__first a__first) temp___idx_105)))))))
    true
    false))

;; "bool_eq_rev"
(assert
  (forall ((a (Array Int character)) (b (Array Int character)))
    (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
      (=>
        (= (bool_eq b b__first b__last a a__first a__last) true)
        (and
          (ite (<= a__first a__last)
            (and
              (<= b__first b__last)
              (= (- a__last a__first) (- b__last b__first)))
            (< b__last b__first))
          (forall ((temp___idx_105 Int))
            (=>
              (and (<= a__first temp___idx_105) (<= temp___idx_105 a__last))
              (= (to_rep (select a temp___idx_105)) (to_rep
                                                      (select b (+ (- b__first a__first) temp___idx_105)))))))))))

;; "to_rep"
(define-fun to_rep1 ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                 (of_rep1 x))) )))

(declare-datatypes ((t 0))
  (((tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep1 (rec__first (mk f l))) f)
             (= (to_rep1 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range low)
    (and
      (in_range high)
      (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ((us_t 0))
  (((us_tqtmk (elts (Array Int character))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array Int character)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

;; "first"
(define-fun first ((a us_t)) Int
  (to_rep1 (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) Int
  (to_rep1 (rec__last (rt a))))

;; "length"
(define-fun length1 ((a us_t)) Int
  (ite (<= (first a) (last a)) (+ (- (last a) (first a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-sort us_rep 0)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const dummy us_rep)

(declare-datatypes ((file_type__ref 0))
  (((file_type__refqtmk (file_type__content us_rep)))))

;; "is_open"
(declare-fun is_open (us_rep) Bool)

;; "is_readable"
(declare-fun is_readable (us_rep) Bool)

;; "mode"
(declare-fun mode (us_rep) Int)

;; "is_writable"
(declare-fun is_writable (us_rep) Bool)

;; "status"
(declare-fun status (us_rep) Int)

(declare-sort file_status 0)

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 10)))

(declare-const yes (Array Int character))

(declare-const no (Array Int character))

;; "to_rep"
(declare-fun to_rep2 (file_status) Int)

;; "of_rep"
(declare-fun of_rep2 (Int) file_status)

;; "inversion_axiom"
(assert
  (forall ((x file_status))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x file_status))
    (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

(declare-datatypes ((us_split_discrs 0))
  (((us_split_discrsqtmk
    (rec__ada___spark__text_io__character_result__status file_status)))))

(declare-datatypes ((us_split_fields 0))
  (((us_split_fieldsqtmk
    (rec__ada___spark__text_io__character_result__item character)))))

(declare-datatypes ((us_rep1 0))
  (((us_repqtmk
    (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const ada___spark__text_io__character_result__status__first__bit Int)

(declare-const ada___spark__text_io__character_result__status__last__bit Int)

(declare-const ada___spark__text_io__character_result__status__position Int)

;; "ada___spark__text_io__character_result__status__first__bit_axiom"
(assert (<= 0 ada___spark__text_io__character_result__status__first__bit))

;; "ada___spark__text_io__character_result__status__last__bit_axiom"
(assert
  (< ada___spark__text_io__character_result__status__first__bit ada___spark__text_io__character_result__status__last__bit))

;; "ada___spark__text_io__character_result__status__position_axiom"
(assert (<= 0 ada___spark__text_io__character_result__status__position))

(declare-const ada___spark__text_io__character_result__item__first__bit Int)

(declare-const ada___spark__text_io__character_result__item__last__bit Int)

(declare-const ada___spark__text_io__character_result__item__position Int)

;; "ada___spark__text_io__character_result__item__first__bit_axiom"
(assert (<= 0 ada___spark__text_io__character_result__item__first__bit))

;; "ada___spark__text_io__character_result__item__last__bit_axiom"
(assert
  (< ada___spark__text_io__character_result__item__first__bit ada___spark__text_io__character_result__item__last__bit))

;; "ada___spark__text_io__character_result__item__position_axiom"
(assert (<= 0 ada___spark__text_io__character_result__item__position))

(declare-const dummy1 us_rep1)

(declare-const c__attr__constrained Bool)

;; "default_initial_assumption"
(define-fun default_initial_assumption ((temp___expr_307 us_rep1) (temp___skip_top_level_308 Bool)) Bool
  (= (to_rep2
       (rec__ada___spark__text_io__character_result__status
         (us_split_discrs1 temp___expr_307))) 3))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_110 us_t) (temp___is_init_106 Bool) (temp___skip_constant_107 Bool) (temp___do_toplevel_108 Bool) (temp___do_typ_inv_109 Bool)) Bool
  (=>
    (not (= temp___skip_constant_107 true))
    (dynamic_property
      1
      2147483647
      (first temp___expr_110)
      (last temp___expr_110))))

;; "name"
(declare-fun name (us_rep) us_t)

;; "form"
(declare-fun form (us_rep) us_t)

;; "line_length"
(declare-fun line_length (us_rep) Int)

;; "page_length"
(declare-fun page_length (us_rep) Int)

;; "is_standard_output"
(declare-fun is_standard_output (us_rep) Bool)

;; "is_standard_file"
(declare-fun is_standard_file (us_rep) Bool)

;; "is_standard_input"
(declare-fun is_standard_input (us_rep) Bool)

;; "is_standard_error"
(declare-fun is_standard_error (us_rep) Bool)

(declare-const clast Int)

(declare-const clast1 Int)

(declare-const length_of_yes_no Int)

;; "to_upper"
(declare-fun to_upper (Int) Int)

;; "to_upper"
(declare-fun to_upper1 (us_t) us_t)

;; "end_of_file"
(declare-fun end_of_file (us_rep) Bool)

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const component__size2 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const component__size3 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment5))

;; "temp___String_Literal_173"
(declare-fun temp___String_Literal_173 (tuple0) (Array Int character))

;; "temp___String_Literal_173__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_173 us_void_param) 1)) 89)
           (= (to_rep (select (temp___String_Literal_173 us_void_param) 2)) 69))
         (= (to_rep (select (temp___String_Literal_173 us_void_param) 3)) 83)) :pattern (
    (temp___String_Literal_173
      us_void_param)) )))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const component__size4 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "component__size_axiom"
(assert (<= 0 component__size4))

;; "alignment_axiom"
(assert (<= 0 alignment6))

;; "temp___String_Literal_176"
(declare-fun temp___String_Literal_176 (tuple0) (Array Int character))

;; "temp___String_Literal_176__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (= (to_rep (select (temp___String_Literal_176 us_void_param) 1)) 78)
         (= (to_rep (select (temp___String_Literal_176 us_void_param) 2)) 79)) :pattern (
    (temp___String_Literal_176
      us_void_param)) )))

;; "temp___String_Literal_423"
(declare-fun temp___String_Literal_423 (tuple0) (Array Int character))

;; "temp___String_Literal_423__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_423 us_void_param) 1)) 80)
           (= (to_rep (select (temp___String_Literal_423 us_void_param) 2)) 108))
         (and
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_423 us_void_param) 3)) 101)
                     (= (to_rep
                          (select (temp___String_Literal_423 us_void_param) 4)) 97))
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 5)) 115))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 6)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 7)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 8)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 9)) 110))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 10)) 116)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 11)) 101))))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 12)) 114)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 13)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 14)) 116)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 15)) 104)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 16)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 17)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 18)) 115)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 19)) 111)))))
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 20)) 117)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 21)) 114))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 22)) 99)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 23)) 101)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 24)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 25)) 102))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 26)) 105)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 27)) 108))))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 28)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 29)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 30)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 31)) 97)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 32)) 109)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 33)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 34)) 58)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 35)) 32))))))) :pattern (
    (temp___String_Literal_423
      us_void_param)) )))

;; "temp___String_Literal_441"
(declare-fun temp___String_Literal_441 (tuple0) (Array Int character))

;; "temp___String_Literal_441__def_axiom"
(assert true)

;; "temp___String_Literal_489"
(declare-fun temp___String_Literal_489 (tuple0) (Array Int character))

;; "temp___String_Literal_489__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_489 us_void_param) 1)) 80)
           (= (to_rep (select (temp___String_Literal_489 us_void_param) 2)) 108))
         (and
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 3)) 101)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 4)) 97))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 5)) 115))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 6)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 7)) 32)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 8)) 101)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 9)) 110))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 10)) 116))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 11)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 12)) 114))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 13)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 14)) 116))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 15)) 104))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 16)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 17)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 18)) 68)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 19)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 20)) 115)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 21)) 116)))))
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 22)) 105)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 23)) 110))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 24)) 97))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 25)) 116)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 26)) 105)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 27)) 111)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 28)) 110))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 29)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 30)) 102)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 31)) 105))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 32)) 108)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 33)) 101))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 34)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 35)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 36)) 97)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 37)) 109)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 38)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 39)) 58)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 40)) 32))))))) :pattern (
    (temp___String_Literal_489
      us_void_param)) )))

;; "temp___String_Literal_507"
(declare-fun temp___String_Literal_507 (tuple0) (Array Int character))

;; "temp___String_Literal_507__def_axiom"
(assert true)

;; "temp___String_Literal_527"
(declare-fun temp___String_Literal_527 (tuple0) (Array Int character))

;; "temp___String_Literal_527__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_527 us_void_param) 1)) 32)
           (= (to_rep (select (temp___String_Literal_527 us_void_param) 2)) 97))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 3)) 108)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 4)) 114))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 5)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 6)) 97)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 7)) 100)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 8)) 121))
               (= (to_rep
                    (select (temp___String_Literal_527 us_void_param) 9)) 32)))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 10)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 11)) 120))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 12)) 116)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 13)) 105)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 14)) 116)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 15)) 115))
               (= (to_rep
                    (select (temp___String_Literal_527 us_void_param) 16)) 46))))) :pattern (
    (temp___String_Literal_527
      us_void_param)) )))

;; "temp___String_Literal_529"
(declare-fun temp___String_Literal_529 (tuple0) (Array Int character))

;; "temp___String_Literal_529__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_529 us_void_param) 1)) 84)
           (= (to_rep (select (temp___String_Literal_529 us_void_param) 2)) 104))
         (and
           (and
             (and
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 3)) 101)
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 4)) 32))
             (and
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 5)) 102)
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 6)) 105)))
           (and
             (and
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 7)) 108)
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 8)) 101))
             (= (to_rep (select (temp___String_Literal_529 us_void_param) 9)) 32)))) :pattern (
    (temp___String_Literal_529
      us_void_param)) )))

;; "temp___String_Literal_534"
(declare-fun temp___String_Literal_534 (tuple0) (Array Int character))

;; "temp___String_Literal_534__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_534 us_void_param) 1)) 68)
           (= (to_rep (select (temp___String_Literal_534 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 3)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 4)) 121))
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 5)) 111))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 6)) 117)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 7)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 8)) 119)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 9)) 97))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 10)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 11)) 116))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 12)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 13)) 116))
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 14)) 111))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 15)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 16)) 111)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 17)) 118)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 18)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 19)) 114)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 20)) 119)))))
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 21)) 114)
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 22)) 105))
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 23)) 116))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 24)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 25)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 26)) 105)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 27)) 116))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 28)) 63)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 29)) 32))))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 30)) 40)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 31)) 89))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 32)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 33)) 115)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 34)) 47)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 35)) 78))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 36)) 111)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 37)) 41))))))) :pattern (
    (temp___String_Literal_534
      us_void_param)) )))

;; "temp___String_Literal_560"
(declare-fun temp___String_Literal_560 (tuple0) (Array Int character))

;; "temp___String_Literal_560__def_axiom"
(assert true)

;; "is_lower"
(declare-fun is_lower (Int) Bool)

;; "in_range"
(define-fun in_range6 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "in_range"
(define-fun in_range7 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "is_open__post_axiom"
(assert true)

;; "mode__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=> (= (is_open param__file) true) (in_range6 (mode param__file))) :pattern (
    (mode
      param__file)) )))

;; "is_readable__post_axiom"
(assert true)

;; "is_readable__def_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=
         (= (is_readable param__file) true)
         (and (= (is_open param__file) true) (= (mode param__file) 0))) :pattern (
    (is_readable
      param__file)) )))

;; "is_writable__post_axiom"
(assert true)

;; "is_writable__def_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=
         (= (is_writable param__file) true)
         (and
           (= (is_open param__file) true)
           (or (= (mode param__file) 1) (= (mode param__file) 2)))) :pattern (
    (is_writable
      param__file)) )))

;; "status__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (in_range4 (status param__file)) :pattern ((status param__file)) )))

;; "name__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_open param__file) true)
         (dynamic_invariant (name param__file) true false true true)) :pattern (
    (name
      param__file)) )))

;; "form__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_open param__file) true)
         (dynamic_invariant (form param__file) true false true true)) :pattern (
    (form
      param__file)) )))

;; "line_length__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_writable param__file) true)
         (in_range7 (line_length param__file))) :pattern ((line_length
                                                            param__file)) )))

;; "page_length__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_writable param__file) true)
         (in_range7 (page_length param__file))) :pattern ((page_length
                                                            param__file)) )))

;; "is_standard_output__post_axiom"
(assert true)

;; "is_standard_input__post_axiom"
(assert true)

;; "is_standard_error__post_axiom"
(assert true)

;; "is_standard_file__post_axiom"
(assert true)

;; "is_standard_file__def_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=
         (= (is_standard_file param__file) true)
         (or
           (or
             (= (is_standard_input param__file) true)
             (= (is_standard_output param__file) true))
           (= (is_standard_error param__file) true))) :pattern ((is_standard_file
                                                                  param__file)) )))

;; "is_lower__post_axiom"
(assert
  (forall ((param__item Int))
    (! (=>
         (in_range3 param__item)
         (=
           (= (is_lower param__item) true)
           (or
             (and (<= 97 param__item) (<= param__item 122))
             (or
               (and (<= 223 param__item) (<= param__item 246))
               (and (<= 248 param__item) (<= param__item 255)))))) :pattern (
    (is_lower
      param__item)) )))

;; "to_upper__post_axiom"
(assert
  (forall ((param__item Int))
    (! (=>
         (in_range3 param__item)
         (let ((result (to_upper param__item)))
           (and
             (= result (ite (and
                              (= (is_lower param__item) true)
                              (= (not (or (ite (= param__item 223)
                                            true
                                            false) (ite (= param__item 255)
                                                     true
                                                     false))) true))
                         (+ param__item (ite (and
                                               (<= 65 param__item)
                                               (<= param__item 90))
                                          (- 32)
                                          (- 32)))
                         param__item))
             (in_range3 result)))) :pattern ((to_upper param__item)) )))

;; "end_of_file__post_axiom"
(assert true)

;; Goal "def'vc"
;; File "copy.adb", line 32, characters 0-0
(assert
  (not
  (forall ((standard_error us_rep) (source us_rep) (destination us_rep) (count Int) (last1 Int) (last_of_yes_no Int) (c__split_fields character) (c__split_discrs file_status))
    (=>
      (and
        (and
          (and
            (= (status standard_error) 1)
            (= (is_writable standard_error) true))
          (not (= (is_open source) true)))
        (not (= (is_open destination) true)))
      (=>
        (in_range5 count)
        (=>
          (= (temp___String_Literal_173 Tuple0) yes)
          (=>
            (= (temp___String_Literal_176 Tuple0) no)
            (=>
              (in_range1 last1)
              (=>
                (in_range1 last_of_yes_no)
                (=>
                  (= c__attr__constrained false)
                  (=>
                    (default_initial_assumption
                      (us_repqtmk
                        (us_split_discrsqtmk c__split_discrs)
                        (us_split_fieldsqtmk c__split_fields))
                      false)
                    (forall ((count1 Int))
                      (=>
                        (= count1 0)
                        (forall ((count_limit_reached Bool))
                          (=>
                            (= count_limit_reached (distinct 0 0))
                            (forall ((spark__branch Bool) (standard_input us_rep) (standard_output us_rep) (standard_error1 us_rep) (source1 us_rep) (response (Array Int character)) (last2 Int))
                              (=>
                                (and
                                  (=
                                    (= (is_writable standard_error) true)
                                    (and
                                      (= (is_open standard_error) true)
                                      (or
                                        (= (mode standard_error) 1)
                                        (= (mode standard_error) 2))))
                                  (and
                                    (in_range4 (status standard_error))
                                    (exists ((standard_input1 us_rep) (standard_output1 us_rep) (source2 us_rep) (last3 Int))
                                      (and
                                        (and
                                          (and
                                            (= (status standard_error1) 1)
                                            (= (is_writable standard_error1) true))
                                          (not (= (is_open source2) true)))
                                        (and
                                          (and
                                            (= standard_error1 standard_error)
                                            (in_range1 last3))
                                          (let ((o (status standard_output1)))
                                            (and
                                              (in_range4 o)
                                              (exists ((spark__branch1 Bool))
                                                (and
                                                  (= spark__branch1 (ite (= o 1)
                                                                    true
                                                                    false))
                                                  (and
                                                    (= spark__branch1 true)
                                                    (exists ((standard_output2 us_rep))
                                                      (and
                                                        (and
                                                          (and
                                                            (and
                                                              (and
                                                                (and
                                                                  (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output2) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output2) 1))
                                                                  (= 
                                                                  (let ((temp___332 
                                                                    (name
                                                                    standard_output1)))
                                                                    (let ((temp___330 
                                                                    (name
                                                                    standard_output2)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___330)
                                                                    (first
                                                                    temp___330)
                                                                    (last
                                                                    temp___330)
                                                                    (to_array
                                                                    temp___332)
                                                                    (first
                                                                    temp___332)
                                                                    (last
                                                                    temp___332)))) true))
                                                                (= (let ((temp___336 
                                                                    (form
                                                                    standard_output1)))
                                                                    (let ((temp___334 
                                                                    (form
                                                                    standard_output2)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___334)
                                                                    (first
                                                                    temp___334)
                                                                    (last
                                                                    temp___334)
                                                                    (to_array
                                                                    temp___336)
                                                                    (first
                                                                    temp___336)
                                                                    (last
                                                                    temp___336)))) true))
                                                              (= (line_length
                                                                   standard_output2) 
                                                              (line_length
                                                                standard_output1)))
                                                            (= (page_length
                                                                 standard_output2) 
                                                            (page_length
                                                              standard_output1)))
                                                          (= (is_standard_output
                                                               standard_output2) true))
                                                        (exists ((o1 integer))
                                                          (and
                                                            (= (to_rep1 o1) 512)
                                                            (exists ((o2 integer))
                                                              (and
                                                                (= (to_rep1
                                                                    o2) 1)
                                                                (exists 
                                                                  ((param__item (Array Int character)))
                                                                  (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_readable
                                                                    standard_input) true)
                                                                    (= 
                                                                    (let ((temp___348 
                                                                    (name
                                                                    standard_input1)))
                                                                    (let ((temp___346 
                                                                    (name
                                                                    standard_input)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___346)
                                                                    (first
                                                                    temp___346)
                                                                    (last
                                                                    temp___346)
                                                                    (to_array
                                                                    temp___348)
                                                                    (first
                                                                    temp___348)
                                                                    (last
                                                                    temp___348)))) true))
                                                                    (= 
                                                                    (let ((temp___352 
                                                                    (form
                                                                    standard_input1)))
                                                                    (let ((temp___350 
                                                                    (form
                                                                    standard_input)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___350)
                                                                    (first
                                                                    temp___350)
                                                                    (last
                                                                    temp___350)
                                                                    (to_array
                                                                    temp___352)
                                                                    (first
                                                                    temp___352)
                                                                    (last
                                                                    temp___352)))) true))
                                                                    (= 
                                                                    (is_standard_input
                                                                    standard_input) true))
                                                                    (ite (= 
                                                                    (status
                                                                    standard_input) 1)
                                                                    (and
                                                                    (<= (- 
                                                                    (to_rep1
                                                                    o2) 1) last2)
                                                                    (<= last2 
                                                                    (to_rep1
                                                                    o1)))
                                                                    (= last2 0)))
                                                                    (and
                                                                    (dynamic_invariant
                                                                    (of_array
                                                                    param__item
                                                                    (to_rep1
                                                                    o2)
                                                                    (to_rep1
                                                                    o1))
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (in_range1
                                                                    last2)))
                                                                    (and
                                                                    (= response 
                                                                    (slide
                                                                    param__item
                                                                    1
                                                                    1))
                                                                    (and
                                                                    (let ((o3 
                                                                    (status
                                                                    standard_input)))
                                                                    (and
                                                                    (in_range4
                                                                    o3)
                                                                    (exists 
                                                                    ((spark__branch2 Bool))
                                                                    (and
                                                                    (= spark__branch2 (and (and 
                                                                    (ite (= o3 1)
                                                                    true
                                                                    false) 
                                                                    (ite (<= 1 last2)
                                                                    true
                                                                    false)) 
                                                                    (ite (<= last2 512)
                                                                    true
                                                                    false)))
                                                                    (and
                                                                    (= spark__branch2 true)
                                                                    (and
                                                                    (= last2 
                                                                    clast)
                                                                    (and
                                                                    (in_range1
                                                                    clast)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast)
                                                                    (<= 
                                                                    clast 512))))
                                                                    (and
                                                                    (ite (= 
                                                                    (status
                                                                    source1) 1)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (mode
                                                                    source1) 0)
                                                                    (= 
                                                                    (let ((temp___357 
                                                                    (name
                                                                    source1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___357)
                                                                    (first
                                                                    temp___357)
                                                                    (last
                                                                    temp___357)
                                                                    response
                                                                    1
                                                                    clast)) true))
                                                                    (= 
                                                                    (let ((temp___359 
                                                                    (form
                                                                    source1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___359)
                                                                    (first
                                                                    temp___359)
                                                                    (last
                                                                    temp___359)
                                                                    (temp___String_Literal_441
                                                                    Tuple0)
                                                                    1
                                                                    0)) true))
                                                                    (= 
                                                                    (is_open
                                                                    source1) true))
                                                                    (= 
                                                                    (line_length
                                                                    source1) 0))
                                                                    (= 
                                                                    (page_length
                                                                    source1) 0))
                                                                    (not
                                                                    (= 
                                                                    (is_standard_file
                                                                    source1) true)))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    source1) true)))
                                                                    (let ((temp___444 
                                                                    (status
                                                                    source1)))
                                                                    (and
                                                                    (in_range4
                                                                    temp___444)
                                                                    (and
                                                                    (= spark__branch 
                                                                    (ite (= temp___444 1)
                                                                    true
                                                                    false))
                                                                    (= spark__branch true)))))))))))))
                                                                    (= standard_output standard_output2)))))))))))))))))))))
                                (forall ((spark__branch1 Bool) (standard_output1 us_rep) (standard_error2 us_rep) (source2 us_rep) (destination1 us_rep))
                                  (=>
                                    (and
                                      (=
                                        (= (is_readable source1) true)
                                        (and
                                          (= (is_open source1) true)
                                          (= (mode source1) 0)))
                                      (and
                                        (=
                                          (= (is_standard_file source1) true)
                                          (or
                                            (or
                                              (= (is_standard_input source1) true)
                                              (= (is_standard_output source1) true))
                                            (= (is_standard_error source1) true)))
                                        (and
                                          (=
                                            (= (is_writable standard_error1) true)
                                            (and
                                              (= (is_open standard_error1) true)
                                              (or
                                                (= (mode standard_error1) 1)
                                                (= (mode standard_error1) 2))))
                                          (and
                                            (in_range4
                                              (status standard_error1))
                                            (exists ((standard_input1 us_rep) (standard_output2 us_rep) (standard_error3 us_rep) (destination2 us_rep) (last3 Int) (last_of_yes_no1 Int))
                                              (and
                                                (and
                                                  (and
                                                    (and
                                                      (and
                                                        (and
                                                          (= (status
                                                               standard_error3) 1)
                                                          (= (is_writable
                                                               standard_error3) true))
                                                        (not
                                                          (= (is_open
                                                               destination2) true)))
                                                      (= (is_open source2) true))
                                                    (not
                                                      (= (is_standard_file
                                                           source2) true)))
                                                  (= (is_readable source2) true))
                                                (and
                                                  (and
                                                    (and
                                                      (and
                                                        (= standard_error3 standard_error1)
                                                        (in_range1 last3))
                                                      (in_range1
                                                        last_of_yes_no1))
                                                    (= source2 source1))
                                                  (let ((o (status
                                                             standard_output2)))
                                                    (and
                                                      (in_range4 o)
                                                      (exists ((spark__branch2 Bool))
                                                        (and
                                                          (= spark__branch2 
                                                          (ite (= o 1)
                                                            true
                                                            false))
                                                          (and
                                                            (= spark__branch2 true)
                                                            (exists ((standard_output3 us_rep))
                                                              (and
                                                                (and
                                                                  (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output3) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output3) 1))
                                                                    (= 
                                                                    (let ((temp___332 
                                                                    (name
                                                                    standard_output2)))
                                                                    (let ((temp___330 
                                                                    (name
                                                                    standard_output3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___330)
                                                                    (first
                                                                    temp___330)
                                                                    (last
                                                                    temp___330)
                                                                    (to_array
                                                                    temp___332)
                                                                    (first
                                                                    temp___332)
                                                                    (last
                                                                    temp___332)))) true))
                                                                    (= 
                                                                    (let ((temp___336 
                                                                    (form
                                                                    standard_output2)))
                                                                    (let ((temp___334 
                                                                    (form
                                                                    standard_output3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___334)
                                                                    (first
                                                                    temp___334)
                                                                    (last
                                                                    temp___334)
                                                                    (to_array
                                                                    temp___336)
                                                                    (first
                                                                    temp___336)
                                                                    (last
                                                                    temp___336)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output3) 
                                                                    (line_length
                                                                    standard_output2)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output3) 
                                                                    (page_length
                                                                    standard_output2)))
                                                                  (= 
                                                                  (is_standard_output
                                                                    standard_output3) true))
                                                                (exists 
                                                                  ((o1 integer))
                                                                  (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o1) 512)
                                                                    (exists 
                                                                    ((o2 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o2) 1)
                                                                    (exists 
                                                                    ((standard_input2 us_rep) (last4 Int) (param__item (Array Int character)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_readable
                                                                    standard_input2) true)
                                                                    (= 
                                                                    (let ((temp___348 
                                                                    (name
                                                                    standard_input1)))
                                                                    (let ((temp___346 
                                                                    (name
                                                                    standard_input2)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___346)
                                                                    (first
                                                                    temp___346)
                                                                    (last
                                                                    temp___346)
                                                                    (to_array
                                                                    temp___348)
                                                                    (first
                                                                    temp___348)
                                                                    (last
                                                                    temp___348)))) true))
                                                                    (= 
                                                                    (let ((temp___352 
                                                                    (form
                                                                    standard_input1)))
                                                                    (let ((temp___350 
                                                                    (form
                                                                    standard_input2)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___350)
                                                                    (first
                                                                    temp___350)
                                                                    (last
                                                                    temp___350)
                                                                    (to_array
                                                                    temp___352)
                                                                    (first
                                                                    temp___352)
                                                                    (last
                                                                    temp___352)))) true))
                                                                    (= 
                                                                    (is_standard_input
                                                                    standard_input2) true))
                                                                    (ite (= 
                                                                    (status
                                                                    standard_input2) 1)
                                                                    (and
                                                                    (<= (- 
                                                                    (to_rep1
                                                                    o2) 1) last4)
                                                                    (<= last4 
                                                                    (to_rep1
                                                                    o1)))
                                                                    (= last4 0)))
                                                                    (and
                                                                    (dynamic_invariant
                                                                    (of_array
                                                                    param__item
                                                                    (to_rep1
                                                                    o2)
                                                                    (to_rep1
                                                                    o1))
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (in_range1
                                                                    last4)))
                                                                    (exists 
                                                                    ((response1 (Array Int character)))
                                                                    (and
                                                                    (= response1 
                                                                    (slide
                                                                    param__item
                                                                    1
                                                                    1))
                                                                    (let ((o3 
                                                                    (status
                                                                    standard_input2)))
                                                                    (and
                                                                    (in_range4
                                                                    o3)
                                                                    (exists 
                                                                    ((spark__branch3 Bool))
                                                                    (and
                                                                    (= spark__branch3 (and (and 
                                                                    (ite (= o3 1)
                                                                    true
                                                                    false) 
                                                                    (ite (<= 1 last4)
                                                                    true
                                                                    false)) 
                                                                    (ite (<= last4 512)
                                                                    true
                                                                    false)))
                                                                    (and
                                                                    (= spark__branch3 true)
                                                                    (and
                                                                    (= last4 
                                                                    clast1)
                                                                    (and
                                                                    (in_range1
                                                                    clast1)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (exists 
                                                                    ((destination3 us_rep))
                                                                    (and
                                                                    (ite (= 
                                                                    (status
                                                                    destination3) 1)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (mode
                                                                    destination3) 1)
                                                                    (= 
                                                                    (let ((temp___369 
                                                                    (name
                                                                    destination3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___369)
                                                                    (first
                                                                    temp___369)
                                                                    (last
                                                                    temp___369)
                                                                    response1
                                                                    1
                                                                    clast1)) true))
                                                                    (= 
                                                                    (let ((temp___371 
                                                                    (form
                                                                    destination3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___371)
                                                                    (first
                                                                    temp___371)
                                                                    (last
                                                                    temp___371)
                                                                    (temp___String_Literal_507
                                                                    Tuple0)
                                                                    1
                                                                    0)) true))
                                                                    (= 
                                                                    (is_open
                                                                    destination3) true))
                                                                    (= 
                                                                    (line_length
                                                                    destination3) 0))
                                                                    (= 
                                                                    (page_length
                                                                    destination3) 0))
                                                                    (not
                                                                    (= 
                                                                    (is_standard_file
                                                                    destination3) true)))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    destination3) true)))
                                                                    (let ((temp___510 
                                                                    (status
                                                                    destination3)))
                                                                    (and
                                                                    (in_range4
                                                                    temp___510)
                                                                    (exists 
                                                                    ((spark__branch4 Bool))
                                                                    (and
                                                                    (= spark__branch4 
                                                                    (ite (= temp___510 1)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch4 true)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= spark__branch1 spark__branch4)
                                                                    (= standard_output1 standard_output3))
                                                                    (= standard_error2 standard_error3))
                                                                    (= destination1 destination3))
                                                                    (exists 
                                                                    ((spark__branch5 Bool))
                                                                    (and
                                                                    (= spark__branch5 
                                                                    (ite (= temp___510 5)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (not
                                                                    (= spark__branch5 true))
                                                                    (exists 
                                                                    ((spark__branch6 Bool))
                                                                    (and
                                                                    (= spark__branch6 
                                                                    (ite (= temp___510 6)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch6 true)
                                                                    (let ((o4 
                                                                    (status
                                                                    standard_output3)))
                                                                    (and
                                                                    (in_range4
                                                                    o4)
                                                                    (exists 
                                                                    ((spark__branch7 Bool))
                                                                    (and
                                                                    (= spark__branch7 
                                                                    (ite (= o4 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch7 true)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (and
                                                                    (in_range2
                                                                    (- (+ 1 (+ 
                                                                    (length
                                                                    1
                                                                    24) 
                                                                    (length
                                                                    1
                                                                    clast1))) 1))
                                                                    (exists 
                                                                    ((standard_output4 us_rep))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output4) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output4) 1))
                                                                    (= 
                                                                    (let ((temp___363 
                                                                    (name
                                                                    standard_output3)))
                                                                    (let ((temp___361 
                                                                    (name
                                                                    standard_output4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___361)
                                                                    (first
                                                                    temp___361)
                                                                    (last
                                                                    temp___361)
                                                                    (to_array
                                                                    temp___363)
                                                                    (first
                                                                    temp___363)
                                                                    (last
                                                                    temp___363)))) true))
                                                                    (= 
                                                                    (let ((temp___367 
                                                                    (form
                                                                    standard_output3)))
                                                                    (let ((temp___365 
                                                                    (form
                                                                    standard_output4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___365)
                                                                    (first
                                                                    temp___365)
                                                                    (last
                                                                    temp___365)
                                                                    (to_array
                                                                    temp___367)
                                                                    (first
                                                                    temp___367)
                                                                    (last
                                                                    temp___367)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output4) 
                                                                    (line_length
                                                                    standard_output3)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output4) 
                                                                    (page_length
                                                                    standard_output3)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output4) true))
                                                                    (exists 
                                                                    ((spark__branch8 Bool) (standard_output5 us_rep))
                                                                    (and
                                                                    (let ((o5 
                                                                    (status
                                                                    standard_output4)))
                                                                    (and
                                                                    (in_range4
                                                                    o5)
                                                                    (and
                                                                    (= spark__branch8 
                                                                    (ite (= o5 1)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch8 true)
                                                                    (and
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (let ((o6 (- (+ 1 (+ 
                                                                    (length
                                                                    1
                                                                    9) 
                                                                    (length
                                                                    1
                                                                    clast1))) 1)))
                                                                    (and
                                                                    (in_range2
                                                                    o6)
                                                                    (=>
                                                                    (not
                                                                    (= 
                                                                    (length1
                                                                    (of_array
                                                                    (concat1
                                                                    (temp___String_Literal_529
                                                                    Tuple0)
                                                                    1
                                                                    9
                                                                    response1
                                                                    1
                                                                    clast1)
                                                                    1
                                                                    o6)) 0))
                                                                    (in_range2
                                                                    (- (+ 1 (+ 
                                                                    (length
                                                                    1
                                                                    o6) 
                                                                    (length
                                                                    1
                                                                    16))) 1))))))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output5) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output5) 1))
                                                                    (= 
                                                                    (let ((temp___363 
                                                                    (name
                                                                    standard_output4)))
                                                                    (let ((temp___361 
                                                                    (name
                                                                    standard_output5)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___361)
                                                                    (first
                                                                    temp___361)
                                                                    (last
                                                                    temp___361)
                                                                    (to_array
                                                                    temp___363)
                                                                    (first
                                                                    temp___363)
                                                                    (last
                                                                    temp___363)))) true))
                                                                    (= 
                                                                    (let ((temp___367 
                                                                    (form
                                                                    standard_output4)))
                                                                    (let ((temp___365 
                                                                    (form
                                                                    standard_output5)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___365)
                                                                    (first
                                                                    temp___365)
                                                                    (last
                                                                    temp___365)
                                                                    (to_array
                                                                    temp___367)
                                                                    (first
                                                                    temp___367)
                                                                    (last
                                                                    temp___367)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output5) 
                                                                    (line_length
                                                                    standard_output4)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output5) 
                                                                    (page_length
                                                                    standard_output4)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output5) true)))
                                                                    (= standard_output5 standard_output4)))))
                                                                    (let ((o5 
                                                                    (status
                                                                    standard_output5)))
                                                                    (and
                                                                    (in_range4
                                                                    o5)
                                                                    (exists 
                                                                    ((spark__branch9 Bool))
                                                                    (and
                                                                    (= spark__branch9 
                                                                    (ite (= o5 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch9 true)
                                                                    (exists 
                                                                    ((standard_output6 us_rep))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output6) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output6) 1))
                                                                    (= 
                                                                    (let ((temp___363 
                                                                    (name
                                                                    standard_output5)))
                                                                    (let ((temp___361 
                                                                    (name
                                                                    standard_output6)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___361)
                                                                    (first
                                                                    temp___361)
                                                                    (last
                                                                    temp___361)
                                                                    (to_array
                                                                    temp___363)
                                                                    (first
                                                                    temp___363)
                                                                    (last
                                                                    temp___363)))) true))
                                                                    (= 
                                                                    (let ((temp___367 
                                                                    (form
                                                                    standard_output5)))
                                                                    (let ((temp___365 
                                                                    (form
                                                                    standard_output6)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___365)
                                                                    (first
                                                                    temp___365)
                                                                    (last
                                                                    temp___365)
                                                                    (to_array
                                                                    temp___367)
                                                                    (first
                                                                    temp___367)
                                                                    (last
                                                                    temp___367)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output6) 
                                                                    (line_length
                                                                    standard_output5)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output6) 
                                                                    (page_length
                                                                    standard_output5)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output6) true))
                                                                    (and
                                                                    (=
                                                                    (= 
                                                                    (is_writable
                                                                    standard_error3) true)
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_error3) true)
                                                                    (or
                                                                    (= 
                                                                    (mode
                                                                    standard_error3) 1)
                                                                    (= 
                                                                    (mode
                                                                    standard_error3) 2))))
                                                                    (and
                                                                    (in_range4
                                                                    (status
                                                                    standard_error3))
                                                                    (exists 
                                                                    ((standard_input3 us_rep) (destination4 us_rep) (last_of_yes_no2 Int))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    destination4) true))
                                                                    (= 
                                                                    (status
                                                                    standard_error2) 1))
                                                                    (= 
                                                                    (is_writable
                                                                    standard_error2) true))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= standard_error2 standard_error3)
                                                                    (in_range1
                                                                    last_of_yes_no2))
                                                                    (= destination4 destination3))
                                                                    (exists 
                                                                    ((o6 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o6) 4)
                                                                    (exists 
                                                                    ((o7 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o7) 1)
                                                                    (exists 
                                                                    ((standard_input4 us_rep) (last_of_yes_no3 Int) (param__item1 (Array Int character)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_readable
                                                                    standard_input4) true)
                                                                    (= 
                                                                    (let ((temp___348 
                                                                    (name
                                                                    standard_input3)))
                                                                    (let ((temp___346 
                                                                    (name
                                                                    standard_input4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___346)
                                                                    (first
                                                                    temp___346)
                                                                    (last
                                                                    temp___346)
                                                                    (to_array
                                                                    temp___348)
                                                                    (first
                                                                    temp___348)
                                                                    (last
                                                                    temp___348)))) true))
                                                                    (= 
                                                                    (let ((temp___352 
                                                                    (form
                                                                    standard_input3)))
                                                                    (let ((temp___350 
                                                                    (form
                                                                    standard_input4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___350)
                                                                    (first
                                                                    temp___350)
                                                                    (last
                                                                    temp___350)
                                                                    (to_array
                                                                    temp___352)
                                                                    (first
                                                                    temp___352)
                                                                    (last
                                                                    temp___352)))) true))
                                                                    (= 
                                                                    (is_standard_input
                                                                    standard_input4) true))
                                                                    (ite (= 
                                                                    (status
                                                                    standard_input4) 1)
                                                                    (and
                                                                    (<= (- 
                                                                    (to_rep1
                                                                    o7) 1) last_of_yes_no3)
                                                                    (<= last_of_yes_no3 
                                                                    (to_rep1
                                                                    o6)))
                                                                    (= last_of_yes_no3 0)))
                                                                    (and
                                                                    (dynamic_invariant
                                                                    (of_array
                                                                    param__item1
                                                                    (to_rep1
                                                                    o7)
                                                                    (to_rep1
                                                                    o6))
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (in_range1
                                                                    last_of_yes_no3)))
                                                                    (exists 
                                                                    ((yes_no (Array Int character)))
                                                                    (and
                                                                    (= yes_no 
                                                                    (slide
                                                                    param__item1
                                                                    1
                                                                    1))
                                                                    (let ((o8 
                                                                    (status
                                                                    standard_input4)))
                                                                    (and
                                                                    (in_range4
                                                                    o8)
                                                                    (exists 
                                                                    ((spark__branch10 Bool))
                                                                    (and
                                                                    (= spark__branch10 
                                                                    (ite (= o8 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch10 true)
                                                                    (let ((o9 (+ (- last_of_yes_no3 1) 1)))
                                                                    (and
                                                                    (in_range
                                                                    o9)
                                                                    (and
                                                                    (in_range1
                                                                    o9)
                                                                    (and
                                                                    (= o9 
                                                                    length_of_yes_no)
                                                                    (and
                                                                    (in_range1
                                                                    length_of_yes_no)
                                                                    (exists 
                                                                    ((spark__branch11 Bool))
                                                                    (and
                                                                    (= spark__branch11 (and 
                                                                    (ite (< 0 
                                                                    length_of_yes_no)
                                                                    true
                                                                    false) 
                                                                    (ite (<= 
                                                                    length_of_yes_no 3)
                                                                    true
                                                                    false)))
                                                                    (and
                                                                    (= spark__branch11 true)
                                                                    (exists 
                                                                    ((o10 Bool))
                                                                    (and
                                                                    (ite (< 
                                                                    length_of_yes_no 3)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 last_of_yes_no3)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 4))
                                                                    (and
                                                                    (<= 1 last_of_yes_no3)
                                                                    (<= last_of_yes_no3 4))))
                                                                    (let ((o11 
                                                                    (of_array
                                                                    yes_no
                                                                    1
                                                                    last_of_yes_no3)))
                                                                    (let ((temp___578 
                                                                    (to_upper1
                                                                    o11)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant
                                                                    temp___578
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (first
                                                                    temp___578) 1)
                                                                    (= 
                                                                    (length1
                                                                    temp___578) 
                                                                    (length1
                                                                    o11)))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    temp___578) j)
                                                                    (<= j 
                                                                    (last
                                                                    temp___578)))
                                                                    (= 
                                                                    (to_rep
                                                                    (select 
                                                                    (to_array
                                                                    temp___578) j)) 
                                                                    (to_upper
                                                                    (to_rep
                                                                    (select yes_no (+ 1 (- j 1))))))))))
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 2))
                                                                    (and
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (<= 
                                                                    length_of_yes_no 2))))
                                                                    (= o10 
                                                                    (bool_eq
                                                                    no
                                                                    1
                                                                    length_of_yes_no
                                                                    (to_array
                                                                    temp___578)
                                                                    (first
                                                                    temp___578)
                                                                    (last
                                                                    temp___578))))))))
                                                                    (= o10 false))
                                                                    (exists 
                                                                    ((spark__branch12 Bool))
                                                                    (and
                                                                    (= spark__branch12 o10)
                                                                    (and
                                                                    (not
                                                                    (= spark__branch12 true))
                                                                    (and
                                                                    (=>
                                                                    (<= 1 last_of_yes_no3)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 4))
                                                                    (and
                                                                    (<= 1 last_of_yes_no3)
                                                                    (<= last_of_yes_no3 4))))
                                                                    (let ((o11 
                                                                    (of_array
                                                                    yes_no
                                                                    1
                                                                    last_of_yes_no3)))
                                                                    (let ((temp___555 
                                                                    (to_upper1
                                                                    o11)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant
                                                                    temp___555
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (first
                                                                    temp___555) 1)
                                                                    (= 
                                                                    (length1
                                                                    temp___555) 
                                                                    (length1
                                                                    o11)))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    temp___555) j)
                                                                    (<= j 
                                                                    (last
                                                                    temp___555)))
                                                                    (= 
                                                                    (to_rep
                                                                    (select 
                                                                    (to_array
                                                                    temp___555) j)) 
                                                                    (to_upper
                                                                    (to_rep
                                                                    (select yes_no (+ 1 (- j 1))))))))))
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 3))
                                                                    (and
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (<= 
                                                                    length_of_yes_no 3))))
                                                                    (exists 
                                                                    ((spark__branch13 Bool))
                                                                    (and
                                                                    (= spark__branch13 
                                                                    (bool_eq
                                                                    yes
                                                                    1
                                                                    length_of_yes_no
                                                                    (to_array
                                                                    temp___555)
                                                                    (first
                                                                    temp___555)
                                                                    (last
                                                                    temp___555)))
                                                                    (and
                                                                    (= spark__branch13 true)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (and
                                                                    (ite (= 
                                                                    (status
                                                                    destination1) 1)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (mode
                                                                    destination1) 1)
                                                                    (= 
                                                                    (let ((temp___357 
                                                                    (name
                                                                    destination1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___357)
                                                                    (first
                                                                    temp___357)
                                                                    (last
                                                                    temp___357)
                                                                    response1
                                                                    1
                                                                    clast1)) true))
                                                                    (= 
                                                                    (let ((temp___359 
                                                                    (form
                                                                    destination1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___359)
                                                                    (first
                                                                    temp___359)
                                                                    (last
                                                                    temp___359)
                                                                    (temp___String_Literal_560
                                                                    Tuple0)
                                                                    1
                                                                    0)) true))
                                                                    (= 
                                                                    (is_open
                                                                    destination1) true))
                                                                    (= 
                                                                    (line_length
                                                                    destination1) 0))
                                                                    (= 
                                                                    (page_length
                                                                    destination1) 0))
                                                                    (not
                                                                    (= 
                                                                    (is_standard_file
                                                                    destination1) true)))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    destination1) true)))
                                                                    (let ((o12 
                                                                    (status
                                                                    destination1)))
                                                                    (and
                                                                    (in_range4
                                                                    o12)
                                                                    (and
                                                                    (= spark__branch1 
                                                                    (ite (= o12 1)
                                                                    true
                                                                    false))
                                                                    (= spark__branch1 true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                    (=>
                                      (not (= (end_of_file source2) true))
                                      (=>
                                        (=
                                          (= (is_standard_file destination1) true)
                                          (or
                                            (or
                                              (= (is_standard_input
                                                   destination1) true)
                                              (= (is_standard_output
                                                   destination1) true))
                                            (= (is_standard_error
                                                 destination1) true)))
                                        (=>
                                          (=
                                            (= (is_standard_file source2) true)
                                            (or
                                              (or
                                                (= (is_standard_input
                                                     source2) true)
                                                (= (is_standard_output
                                                     source2) true))
                                              (= (is_standard_error source2) true)))
                                          (=>
                                            (=
                                              (= (is_writable destination1) true)
                                              (and
                                                (= (is_open destination1) true)
                                                (or
                                                  (= (mode destination1) 1)
                                                  (= (mode destination1) 2))))
                                            (=>
                                              (=
                                                (= (is_readable source2) true)
                                                (and
                                                  (= (is_open source2) true)
                                                  (= (mode source2) 0)))
                                              (=>
                                                (=
                                                  (= (is_writable
                                                       standard_error2) true)
                                                  (and
                                                    (= (is_open
                                                         standard_error2) true)
                                                    (or
                                                      (= (mode
                                                           standard_error2) 1)
                                                      (= (mode
                                                           standard_error2) 2))))
                                                (=>
                                                  (in_range4
                                                    (status standard_error2))
                                                  (forall ((standard_output2 us_rep) (standard_error3 us_rep) (source3 us_rep) (destination2 us_rep) (count2 Int) (c__split_discrs1 file_status))
                                                    (=>
                                                      (and
                                                        (and
                                                          (and
                                                            (and
                                                              (and
                                                                (and
                                                                  (and
                                                                    (= 
                                                                    (status
                                                                    standard_error3) 1)
                                                                    (= 
                                                                    (is_writable
                                                                    standard_error3) true))
                                                                  (= 
                                                                  (is_open
                                                                    source3) true))
                                                                (= (is_open
                                                                    destination2) true))
                                                              (= (is_readable
                                                                   source3) true))
                                                            (= (is_writable
                                                                 destination2) true))
                                                          (not
                                                            (= (is_standard_file
                                                                 source3) true)))
                                                        (not
                                                          (= (is_standard_file
                                                               destination2) true)))
                                                      (=>
                                                        (= (and (ite 
                                                                  (and
                                                                    (and
                                                                    (= standard_output2 standard_output1)
                                                                    (= standard_error3 standard_error2))
                                                                    (in_range5
                                                                    count2))
                                                                  true
                                                                  false) 
                                                        (ite (not
                                                               (= (end_of_file
                                                                    source3) true))
                                                          true
                                                          false)) true)
                                                        (forall ((source4 us_rep) (c__split_discrs2 file_status))
                                                          (=>
                                                            (and
                                                              (and
                                                                (and
                                                                  (= 
                                                                  (is_readable
                                                                    source4) true)
                                                                  (= 
                                                                  (let ((temp___378 
                                                                    (name
                                                                    source3)))
                                                                    (let ((temp___376 
                                                                    (name
                                                                    source4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___376)
                                                                    (first
                                                                    temp___376)
                                                                    (last
                                                                    temp___376)
                                                                    (to_array
                                                                    temp___378)
                                                                    (first
                                                                    temp___378)
                                                                    (last
                                                                    temp___378)))) true))
                                                                (= (let ((temp___382 
                                                                    (form
                                                                    source3)))
                                                                    (let ((temp___380 
                                                                    (form
                                                                    source4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___380)
                                                                    (first
                                                                    temp___380)
                                                                    (last
                                                                    temp___380)
                                                                    (to_array
                                                                    temp___382)
                                                                    (first
                                                                    temp___382)
                                                                    (last
                                                                    temp___382)))) true))
                                                              (=
                                                                (= (is_standard_file
                                                                    source4) true)
                                                                (= (is_standard_file
                                                                    source3) true)))
                                                            (=>
                                                              (=>
                                                                (= c__attr__constrained true)
                                                                (= c__split_discrs2 c__split_discrs1))
                                                              (forall 
                                                                ((o Int))
                                                                (=>
                                                                  (= 
                                                                  (to_rep2
                                                                    c__split_discrs2) o)
                                                                  (forall 
                                                                    ((spark__branch2 Bool))
                                                                    (=>
                                                                    (= spark__branch2 
                                                                    (ite (= o 1)
                                                                    true
                                                                    false))
                                                                    (=>
                                                                    (not
                                                                    (= spark__branch2 true))
                                                                    (let ((o1 
                                                                    (status
                                                                    standard_output2)))
                                                                    (=>
                                                                    (in_range4
                                                                    o1)
                                                                    (forall 
                                                                    ((spark__branch3 Bool))
                                                                    (=>
                                                                    (= spark__branch3 
                                                                    (ite (= o1 1)
                                                                    true
                                                                    false))
                                                                    (=>
                                                                    (= spark__branch3 true)
                                                                    (let ((temp___636 
                                                                    (name
                                                                    source4)))
                                                                    (=>
                                                                    (dynamic_invariant
                                                                    temp___636
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (<= (- (+ 1 (+ 
                                                                    (length
                                                                    1
                                                                    29) 
                                                                    (length
                                                                    (first
                                                                    temp___636)
                                                                    (last
                                                                    temp___636)))) 1) 2147483647)))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
