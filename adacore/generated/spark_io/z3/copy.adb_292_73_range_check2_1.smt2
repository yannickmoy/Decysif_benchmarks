;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ()
  ((tuple0 (Tuple0))))

(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

;; "length"
(define-fun length ((x Int) (y Int)) Int
  (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

(declare-sort character 0)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

;; "to_rep"
(declare-fun to_rep (character) Int)

;; "of_rep"
(declare-fun of_rep (Int) character)

;; "inversion_axiom"
(assert
  (forall ((x character))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-datatypes ()
  ((map__ref (map__refqtmk (map__content (Array Int character))))))

;; "slide"
(declare-fun slide ((Array Int character)
  Int
  Int) (Array Int character))

;; "slide_eq"
(assert
  (forall ((a (Array Int character)))
    (forall ((first Int))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; "slide_def"
(assert
  (forall ((a (Array Int character)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

;; "concat"
(declare-fun concat1 ((Array Int character)
  Int
  Int
  (Array Int character)
  Int
  Int) (Array Int character))

;; "concat_def"
(assert
  (forall ((a (Array Int character)) (b (Array Int character)))
    (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
      (forall ((i Int))
        (! (and
             (=>
               (and (<= a_first i) (<= i a_last))
               (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
             (=>
               (< a_last i)
               (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
        (concat1
          a
          a_first
          a_last
          b
          b_first
          b_last) i)) )))))

;; "bool_eq"
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool
  (ite (and
         (ite (<= a__first a__last)
           (and
             (<= b__first b__last)
             (= (- a__last a__first) (- b__last b__first)))
           (< b__last b__first))
         (forall ((temp___idx_105 Int))
           (=>
             (and (<= a__first temp___idx_105) (<= temp___idx_105 a__last))
             (= (to_rep (select a temp___idx_105)) (to_rep
                                                     (select b (+ (- b__first a__first) temp___idx_105)))))))
    true
    false))

;; "bool_eq_rev"
(assert
  (forall ((a (Array Int character)) (b (Array Int character)))
    (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
      (=>
        (= (bool_eq b b__first b__last a a__first a__last) true)
        (and
          (ite (<= a__first a__last)
            (and
              (<= b__first b__last)
              (= (- a__last a__first) (- b__last b__first)))
            (< b__last b__first))
          (forall ((temp___idx_105 Int))
            (=>
              (and (<= a__first temp___idx_105) (<= temp___idx_105 a__last))
              (= (to_rep (select a temp___idx_105)) (to_rep
                                                      (select b (+ (- b__first a__first) temp___idx_105)))))))))))

;; "to_rep"
(define-fun to_rep1 ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                 (of_rep1 x))) )))

(declare-datatypes ()
  ((t (tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep1 (rec__first (mk f l))) f)
             (= (to_rep1 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range low)
    (and
      (in_range high)
      (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ()
  ((us_t (us_tqtmk (elts (Array Int character))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array Int character)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

;; "first"
(define-fun first ((a us_t)) Int
  (to_rep1 (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) Int
  (to_rep1 (rec__last (rt a))))

;; "length"
(define-fun length1 ((a us_t)) Int
  (ite (<= (first a) (last a)) (+ (- (last a) (first a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-sort us_rep 0)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const dummy us_rep)

(declare-datatypes ()
  ((file_type__ref (file_type__refqtmk (file_type__content us_rep)))))

;; "is_open"
(declare-fun is_open (us_rep) Bool)

;; "is_readable"
(declare-fun is_readable (us_rep) Bool)

;; "mode"
(declare-fun mode (us_rep) Int)

;; "is_writable"
(declare-fun is_writable (us_rep) Bool)

;; "status"
(declare-fun status (us_rep) Int)

(declare-sort file_status 0)

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 10)))

(declare-const yes (Array Int character))

(declare-const no (Array Int character))

;; "to_rep"
(declare-fun to_rep2 (file_status) Int)

;; "of_rep"
(declare-fun of_rep2 (Int) file_status)

;; "inversion_axiom"
(assert
  (forall ((x file_status))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x file_status))
    (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

(declare-datatypes ()
  ((us_split_discrs
   (us_split_discrsqtmk
   (rec__ada___spark__text_io__character_result__status file_status)))))

(declare-datatypes ()
  ((us_split_discrs__ref
   (us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__ada___spark__text_io__character_result__item character)))))

(declare-datatypes ()
  ((us_split_fields__ref
   (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))

(declare-datatypes ()
  ((us_rep1
   (us_repqtmk
   (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const ada___spark__text_io__character_result__status__first__bit Int)

(declare-const ada___spark__text_io__character_result__status__last__bit Int)

(declare-const ada___spark__text_io__character_result__status__position Int)

;; "ada___spark__text_io__character_result__status__first__bit_axiom"
(assert (<= 0 ada___spark__text_io__character_result__status__first__bit))

;; "ada___spark__text_io__character_result__status__last__bit_axiom"
(assert
  (< ada___spark__text_io__character_result__status__first__bit ada___spark__text_io__character_result__status__last__bit))

;; "ada___spark__text_io__character_result__status__position_axiom"
(assert (<= 0 ada___spark__text_io__character_result__status__position))

(declare-const ada___spark__text_io__character_result__item__first__bit Int)

(declare-const ada___spark__text_io__character_result__item__last__bit Int)

(declare-const ada___spark__text_io__character_result__item__position Int)

;; "ada___spark__text_io__character_result__item__first__bit_axiom"
(assert (<= 0 ada___spark__text_io__character_result__item__first__bit))

;; "ada___spark__text_io__character_result__item__last__bit_axiom"
(assert
  (< ada___spark__text_io__character_result__item__first__bit ada___spark__text_io__character_result__item__last__bit))

;; "ada___spark__text_io__character_result__item__position_axiom"
(assert (<= 0 ada___spark__text_io__character_result__item__position))

(declare-const dummy1 us_rep1)

(declare-const c__attr__constrained Bool)

;; "default_initial_assumption"
(define-fun default_initial_assumption ((temp___expr_307 us_rep1) (temp___skip_top_level_308 Bool)) Bool
  (= (to_rep2
       (rec__ada___spark__text_io__character_result__status
         (us_split_discrs1 temp___expr_307))) 3))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_110 us_t) (temp___is_init_106 Bool) (temp___skip_constant_107 Bool) (temp___do_toplevel_108 Bool) (temp___do_typ_inv_109 Bool)) Bool
  (=>
    (not (= temp___skip_constant_107 true))
    (dynamic_property
      1
      2147483647
      (first temp___expr_110)
      (last temp___expr_110))))

;; "name"
(declare-fun name (us_rep) us_t)

;; "form"
(declare-fun form (us_rep) us_t)

;; "line_length"
(declare-fun line_length (us_rep) Int)

;; "page_length"
(declare-fun page_length (us_rep) Int)

;; "is_standard_output"
(declare-fun is_standard_output (us_rep) Bool)

;; "is_standard_file"
(declare-fun is_standard_file (us_rep) Bool)

;; "is_standard_input"
(declare-fun is_standard_input (us_rep) Bool)

;; "is_standard_error"
(declare-fun is_standard_error (us_rep) Bool)

(declare-const clast Int)

(declare-const clast1 Int)

(declare-const length_of_yes_no Int)

;; "to_upper"
(declare-fun to_upper (Int) Int)

;; "to_upper"
(declare-fun to_upper1 (us_t) us_t)

;; "end_of_file"
(declare-fun end_of_file (us_rep) Bool)

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const component__size2 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const component__size3 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment5))

;; "temp___String_Literal_173"
(declare-fun temp___String_Literal_173 (tuple0) (Array Int character))

;; "temp___String_Literal_173__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_173 us_void_param) 1)) 89)
           (= (to_rep (select (temp___String_Literal_173 us_void_param) 2)) 69))
         (= (to_rep (select (temp___String_Literal_173 us_void_param) 3)) 83)) :pattern (
    (temp___String_Literal_173
      us_void_param)) )))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const component__size4 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "component__size_axiom"
(assert (<= 0 component__size4))

;; "alignment_axiom"
(assert (<= 0 alignment6))

;; "temp___String_Literal_176"
(declare-fun temp___String_Literal_176 (tuple0) (Array Int character))

;; "temp___String_Literal_176__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (= (to_rep (select (temp___String_Literal_176 us_void_param) 1)) 78)
         (= (to_rep (select (temp___String_Literal_176 us_void_param) 2)) 79)) :pattern (
    (temp___String_Literal_176
      us_void_param)) )))

;; "temp___String_Literal_423"
(declare-fun temp___String_Literal_423 (tuple0) (Array Int character))

;; "temp___String_Literal_423__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_423 us_void_param) 1)) 80)
           (= (to_rep (select (temp___String_Literal_423 us_void_param) 2)) 108))
         (and
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_423 us_void_param) 3)) 101)
                     (= (to_rep
                          (select (temp___String_Literal_423 us_void_param) 4)) 97))
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 5)) 115))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 6)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 7)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 8)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 9)) 110))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 10)) 116)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 11)) 101))))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 12)) 114)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 13)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 14)) 116)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 15)) 104)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 16)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 17)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 18)) 115)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 19)) 111)))))
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 20)) 117)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 21)) 114))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 22)) 99)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 23)) 101)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 24)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 25)) 102))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 26)) 105)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 27)) 108))))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 28)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 29)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 30)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 31)) 97)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 32)) 109)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 33)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 34)) 58)
                   (= (to_rep
                        (select (temp___String_Literal_423 us_void_param) 35)) 32))))))) :pattern (
    (temp___String_Literal_423
      us_void_param)) )))

;; "temp___String_Literal_441"
(declare-fun temp___String_Literal_441 (tuple0) (Array Int character))

;; "temp___String_Literal_441__def_axiom"
(assert true)

;; "temp___String_Literal_445"
(declare-fun temp___String_Literal_445 (tuple0) (Array Int character))

;; "temp___String_Literal_445__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_445 us_void_param) 1)) 32)
           (= (to_rep (select (temp___String_Literal_445 us_void_param) 2)) 100))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 3)) 111)
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 4)) 101))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 5)) 115)
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 6)) 32)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 7)) 110)
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 8)) 111))
               (= (to_rep
                    (select (temp___String_Literal_445 us_void_param) 9)) 116)))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 10)) 32)
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 11)) 101))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 12)) 120)
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 13)) 105)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 14)) 115)
                 (= (to_rep
                      (select (temp___String_Literal_445 us_void_param) 15)) 116))
               (= (to_rep
                    (select (temp___String_Literal_445 us_void_param) 16)) 46))))) :pattern (
    (temp___String_Literal_445
      us_void_param)) )))

;; "temp___String_Literal_447"
(declare-fun temp___String_Literal_447 (tuple0) (Array Int character))

;; "temp___String_Literal_447__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_447 us_void_param) 1)) 83)
           (= (to_rep (select (temp___String_Literal_447 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 3)) 114)
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 4)) 114))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 5)) 121)
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 6)) 44)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 7)) 32)
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 8)) 116))
               (= (to_rep
                    (select (temp___String_Literal_447 us_void_param) 9)) 104)))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 10)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 11)) 32))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 12)) 102)
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 13)) 105)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 14)) 108)
                 (= (to_rep
                      (select (temp___String_Literal_447 us_void_param) 15)) 101))
               (= (to_rep
                    (select (temp___String_Literal_447 us_void_param) 16)) 32))))) :pattern (
    (temp___String_Literal_447
      us_void_param)) )))

;; "temp___String_Literal_456"
(declare-fun temp___String_Literal_456 (tuple0) (Array Int character))

;; "temp___String_Literal_456__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_456 us_void_param) 1)) 32)
           (= (to_rep (select (temp___String_Literal_456 us_void_param) 2)) 105))
         (and
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 3)) 115)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 4)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 5)) 110))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 6)) 111)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 7)) 116))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 8)) 32)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 9)) 97)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 10)) 99))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 11)) 99))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 12)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 13)) 115))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 14)) 115))))
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 15)) 105)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 16)) 98))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 17)) 108))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 18)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 19)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 20)) 116)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 21)) 111)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 22)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 23)) 121))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 24)) 111)
                   (= (to_rep
                        (select (temp___String_Literal_456 us_void_param) 25)) 117))
                 (= (to_rep
                      (select (temp___String_Literal_456 us_void_param) 26)) 46)))))) :pattern (
    (temp___String_Literal_456
      us_void_param)) )))

;; "temp___String_Literal_458"
(declare-fun temp___String_Literal_458 (tuple0) (Array Int character))

;; "temp___String_Literal_458__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_458 us_void_param) 1)) 83)
           (= (to_rep (select (temp___String_Literal_458 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 3)) 114)
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 4)) 114))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 5)) 121)
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 6)) 44)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 7)) 32)
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 8)) 116))
               (= (to_rep
                    (select (temp___String_Literal_458 us_void_param) 9)) 104)))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 10)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 11)) 32))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 12)) 102)
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 13)) 105)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 14)) 108)
                 (= (to_rep
                      (select (temp___String_Literal_458 us_void_param) 15)) 101))
               (= (to_rep
                    (select (temp___String_Literal_458 us_void_param) 16)) 32))))) :pattern (
    (temp___String_Literal_458
      us_void_param)) )))

;; "temp___String_Literal_489"
(declare-fun temp___String_Literal_489 (tuple0) (Array Int character))

;; "temp___String_Literal_489__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_489 us_void_param) 1)) 80)
           (= (to_rep (select (temp___String_Literal_489 us_void_param) 2)) 108))
         (and
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 3)) 101)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 4)) 97))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 5)) 115))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 6)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 7)) 32)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 8)) 101)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 9)) 110))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 10)) 116))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 11)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 12)) 114))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 13)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 14)) 116))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 15)) 104))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 16)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 17)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 18)) 68)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 19)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 20)) 115)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 21)) 116)))))
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 22)) 105)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 23)) 110))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 24)) 97))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 25)) 116)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 26)) 105)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 27)) 111)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 28)) 110))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 29)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 30)) 102)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 31)) 105))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 32)) 108)
                     (= (to_rep
                          (select (temp___String_Literal_489 us_void_param) 33)) 101))
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 34)) 32))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 35)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 36)) 97)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 37)) 109)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 38)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 39)) 58)
                   (= (to_rep
                        (select (temp___String_Literal_489 us_void_param) 40)) 32))))))) :pattern (
    (temp___String_Literal_489
      us_void_param)) )))

;; "temp___String_Literal_507"
(declare-fun temp___String_Literal_507 (tuple0) (Array Int character))

;; "temp___String_Literal_507__def_axiom"
(assert true)

;; "temp___String_Literal_512"
(declare-fun temp___String_Literal_512 (tuple0) (Array Int character))

;; "temp___String_Literal_512__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_512 us_void_param) 1)) 83)
           (= (to_rep (select (temp___String_Literal_512 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 3)) 114)
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 4)) 114))
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 5)) 121))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 6)) 44)
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 7)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 8)) 105)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 9)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 10)) 118))
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 11)) 97))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 12)) 108)
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 13)) 105))))
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 14)) 100)
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 15)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 16)) 102))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 17)) 105)
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 18)) 108))
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 19)) 101)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 20)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_512 us_void_param) 21)) 110))
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 22)) 97))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 23)) 109)
                 (= (to_rep
                      (select (temp___String_Literal_512 us_void_param) 24)) 101)))))) :pattern (
    (temp___String_Literal_512
      us_void_param)) )))

;; "temp___String_Literal_520"
(declare-fun temp___String_Literal_520 (tuple0) (Array Int character))

;; "temp___String_Literal_520__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_520 us_void_param) 1)) 83)
           (= (to_rep (select (temp___String_Literal_520 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 3)) 114)
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 4)) 114))
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 5)) 121))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 6)) 44)
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 7)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 8)) 105)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 9)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 10)) 118))
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 11)) 97))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 12)) 108)
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 13)) 105))))
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 14)) 100)
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 15)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 16)) 102))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 17)) 105)
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 18)) 108))
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 19)) 101)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 20)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_520 us_void_param) 21)) 110))
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 22)) 97))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 23)) 109)
                 (= (to_rep
                      (select (temp___String_Literal_520 us_void_param) 24)) 101)))))) :pattern (
    (temp___String_Literal_520
      us_void_param)) )))

;; "temp___String_Literal_527"
(declare-fun temp___String_Literal_527 (tuple0) (Array Int character))

;; "temp___String_Literal_527__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_527 us_void_param) 1)) 32)
           (= (to_rep (select (temp___String_Literal_527 us_void_param) 2)) 97))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 3)) 108)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 4)) 114))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 5)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 6)) 97)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 7)) 100)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 8)) 121))
               (= (to_rep
                    (select (temp___String_Literal_527 us_void_param) 9)) 32)))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 10)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 11)) 120))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 12)) 116)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 13)) 105)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 14)) 116)
                 (= (to_rep
                      (select (temp___String_Literal_527 us_void_param) 15)) 115))
               (= (to_rep
                    (select (temp___String_Literal_527 us_void_param) 16)) 46))))) :pattern (
    (temp___String_Literal_527
      us_void_param)) )))

;; "temp___String_Literal_529"
(declare-fun temp___String_Literal_529 (tuple0) (Array Int character))

;; "temp___String_Literal_529__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_529 us_void_param) 1)) 84)
           (= (to_rep (select (temp___String_Literal_529 us_void_param) 2)) 104))
         (and
           (and
             (and
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 3)) 101)
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 4)) 32))
             (and
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 5)) 102)
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 6)) 105)))
           (and
             (and
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 7)) 108)
               (= (to_rep
                    (select (temp___String_Literal_529 us_void_param) 8)) 101))
             (= (to_rep (select (temp___String_Literal_529 us_void_param) 9)) 32)))) :pattern (
    (temp___String_Literal_529
      us_void_param)) )))

;; "temp___String_Literal_534"
(declare-fun temp___String_Literal_534 (tuple0) (Array Int character))

;; "temp___String_Literal_534__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_534 us_void_param) 1)) 68)
           (= (to_rep (select (temp___String_Literal_534 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 3)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 4)) 121))
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 5)) 111))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 6)) 117)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 7)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 8)) 119)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 9)) 97))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 10)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 11)) 116))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 12)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 13)) 116))
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 14)) 111))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 15)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 16)) 111)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 17)) 118)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 18)) 101))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 19)) 114)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 20)) 119)))))
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 21)) 114)
                     (= (to_rep
                          (select (temp___String_Literal_534 us_void_param) 22)) 105))
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 23)) 116))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 24)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 25)) 32)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 26)) 105)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 27)) 116))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 28)) 63)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 29)) 32))))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 30)) 40)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 31)) 89))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 32)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 33)) 115)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 34)) 47)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 35)) 78))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 36)) 111)
                   (= (to_rep
                        (select (temp___String_Literal_534 us_void_param) 37)) 41))))))) :pattern (
    (temp___String_Literal_534
      us_void_param)) )))

;; "temp___String_Literal_560"
(declare-fun temp___String_Literal_560 (tuple0) (Array Int character))

;; "temp___String_Literal_560__def_axiom"
(assert true)

;; "temp___String_Literal_564"
(declare-fun temp___String_Literal_564 (tuple0) (Array Int character))

;; "temp___String_Literal_564__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_564 us_void_param) 1)) 83)
           (= (to_rep (select (temp___String_Literal_564 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 3)) 114)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 4)) 114))
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 5)) 121)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 6)) 44)))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 7)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 8)) 117))
                 (= (to_rep
                      (select (temp___String_Literal_564 us_void_param) 9)) 110)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 10)) 97)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 11)) 98))
                 (= (to_rep
                      (select (temp___String_Literal_564 us_void_param) 12)) 108))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 13)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 14)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_564 us_void_param) 15)) 116))))
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 16)) 111)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 17)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_564 us_void_param) 18)) 111))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 19)) 118)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 20)) 101))
                 (= (to_rep
                      (select (temp___String_Literal_564 us_void_param) 21)) 114)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 22)) 119)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 23)) 114))
                 (= (to_rep
                      (select (temp___String_Literal_564 us_void_param) 24)) 105))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 25)) 116)
                   (= (to_rep
                        (select (temp___String_Literal_564 us_void_param) 26)) 101))
                 (= (to_rep
                      (select (temp___String_Literal_564 us_void_param) 27)) 32)))))) :pattern (
    (temp___String_Literal_564
      us_void_param)) )))

;; "temp___String_Literal_579"
(declare-fun temp___String_Literal_579 (tuple0) (Array Int character))

;; "temp___String_Literal_579__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_579 us_void_param) 1)) 80)
           (= (to_rep (select (temp___String_Literal_579 us_void_param) 2)) 108))
         (and
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 3)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 4)) 97))
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 5)) 115))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 6)) 101)
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 7)) 32))
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 8)) 101)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 9)) 110)
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 10)) 116))
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 11)) 101))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 12)) 114)
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 13)) 32))))
           (and
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 14)) 89)
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 15)) 101))
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 16)) 115))
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 17)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 18)) 111))
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 19)) 114)))
             (and
               (and
                 (and
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 20)) 32)
                   (= (to_rep
                        (select (temp___String_Literal_579 us_void_param) 21)) 78))
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 22)) 111))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 23)) 58)
                 (= (to_rep
                      (select (temp___String_Literal_579 us_void_param) 24)) 32)))))) :pattern (
    (temp___String_Literal_579
      us_void_param)) )))

;; "temp___String_Literal_625"
(declare-fun temp___String_Literal_625 (tuple0) (Array Int character))

;; "temp___String_Literal_625__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_625 us_void_param) 1)) 79)
           (= (to_rep (select (temp___String_Literal_625 us_void_param) 2)) 104))
         (and
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 3)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 4)) 100))
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 5)) 101)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 6)) 97)))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 7)) 114)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 8)) 44))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 9)) 32)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 10)) 97)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 11)) 32))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 12)) 102))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 13)) 105)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 14)) 108))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 15)) 101))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 16)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 17)) 101))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 18)) 114))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 19)) 114)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 20)) 111))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 21)) 114)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 22)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 23)) 104))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 24)) 97))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 25)) 115)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 26)) 32))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 27)) 111)))))
           (and
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 28)) 99)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 29)) 99))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 30)) 117))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 31)) 114)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 32)) 101))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 33)) 100)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 34)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 35)) 119))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 36)) 104))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 37)) 105)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 38)) 108))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 39)) 101))))
             (and
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 40)) 32)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 41)) 119))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 42)) 114))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 43)) 105)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 44)) 116))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 45)) 105)))
               (and
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 46)) 110)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 47)) 103))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 48)) 32))
                 (and
                   (and
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 49)) 116)
                     (= (to_rep
                          (select (temp___String_Literal_625 us_void_param) 50)) 111))
                   (= (to_rep
                        (select (temp___String_Literal_625 us_void_param) 51)) 32))))))) :pattern (
    (temp___String_Literal_625
      us_void_param)) )))

;; "is_lower"
(declare-fun is_lower (Int) Bool)

;; "in_range"
(define-fun in_range6 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "in_range"
(define-fun in_range7 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "is_open__post_axiom"
(assert true)

;; "mode__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=> (= (is_open param__file) true) (in_range6 (mode param__file))) :pattern (
    (mode
      param__file)) )))

;; "is_readable__post_axiom"
(assert true)

;; "is_readable__def_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=
         (= (is_readable param__file) true)
         (and (= (is_open param__file) true) (= (mode param__file) 0))) :pattern (
    (is_readable
      param__file)) )))

;; "is_writable__post_axiom"
(assert true)

;; "is_writable__def_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=
         (= (is_writable param__file) true)
         (and
           (= (is_open param__file) true)
           (or (= (mode param__file) 1) (= (mode param__file) 2)))) :pattern (
    (is_writable
      param__file)) )))

;; "status__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (in_range4 (status param__file)) :pattern ((status param__file)) )))

;; "name__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_open param__file) true)
         (dynamic_invariant (name param__file) true false true true)) :pattern (
    (name
      param__file)) )))

;; "form__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_open param__file) true)
         (dynamic_invariant (form param__file) true false true true)) :pattern (
    (form
      param__file)) )))

;; "line_length__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_writable param__file) true)
         (in_range7 (line_length param__file))) :pattern ((line_length
                                                            param__file)) )))

;; "page_length__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=>
         (= (is_writable param__file) true)
         (in_range7 (page_length param__file))) :pattern ((page_length
                                                            param__file)) )))

;; "is_standard_output__post_axiom"
(assert true)

;; "is_standard_input__post_axiom"
(assert true)

;; "is_standard_error__post_axiom"
(assert true)

;; "is_standard_file__post_axiom"
(assert true)

;; "is_standard_file__def_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=
         (= (is_standard_file param__file) true)
         (or
           (or
             (= (is_standard_input param__file) true)
             (= (is_standard_output param__file) true))
           (= (is_standard_error param__file) true))) :pattern ((is_standard_file
                                                                  param__file)) )))

;; "is_lower__post_axiom"
(assert
  (forall ((param__item Int))
    (! (=>
         (in_range3 param__item)
         (=
           (= (is_lower param__item) true)
           (or
             (and (<= 97 param__item) (<= param__item 122))
             (or
               (and (<= 223 param__item) (<= param__item 246))
               (and (<= 248 param__item) (<= param__item 255)))))) :pattern (
    (is_lower
      param__item)) )))

;; "to_upper__post_axiom"
(assert
  (forall ((param__item Int))
    (! (=>
         (in_range3 param__item)
         (let ((result (to_upper param__item)))
           (and
             (= result (ite (and
                              (= (is_lower param__item) true)
                              (= (not (or (ite (= param__item 223)
                                            true
                                            false) (ite (= param__item 255)
                                                     true
                                                     false))) true))
                         (+ param__item (ite (and
                                               (<= 65 param__item)
                                               (<= param__item 90))
                                          (- 32)
                                          (- 32)))
                         param__item))
             (in_range3 result)))) :pattern ((to_upper param__item)) )))

;; "end_of_file__post_axiom"
(assert true)

(declare-const spark__branch Bool)

(declare-const standard_input us_rep)

(declare-const standard_output us_rep)

(declare-const standard_error us_rep)

(declare-const source us_rep)

(declare-const destination us_rep)

(declare-const count Int)

(declare-const response (Array Int character))

(declare-const yes_no (Array Int character))

(declare-const last1 Int)

(declare-const last_of_yes_no Int)

(declare-const c__split_fields character)

(declare-const c__split_discrs file_status)

;; "c__split_discrs'unused"
(define-fun c__split_discrsqtunused () us_split_discrs__ref
  (us_split_discrs__refqtmk (us_split_discrsqtmk c__split_discrs)))

;; "c__split_fields'unused"
(define-fun c__split_fieldsqtunused () us_split_fields__ref
  (us_split_fields__refqtmk (us_split_fieldsqtmk c__split_fields)))

;; "last_of_yes_no'unused"
(define-fun last_of_yes_noqtunused () int__ref
  (int__refqtmk last_of_yes_no))

;; "last'unused"
(define-fun lastqtunused () int__ref
  (int__refqtmk last1))

;; "yes_no'unused"
(define-fun yes_noqtunused () map__ref
  (map__refqtmk yes_no))

;; "response'unused"
(define-fun responseqtunused () map__ref
  (map__refqtmk response))

;; "count'unused"
(define-fun countqtunused () int__ref
  (int__refqtmk count))

;; "destination'unused"
(define-fun destinationqtunused () file_type__ref
  (file_type__refqtmk destination))

;; "source'unused"
(define-fun sourceqtunused () file_type__ref
  (file_type__refqtmk source))

;; "standard_error'unused"
(define-fun standard_errorqtunused () file_type__ref
  (file_type__refqtmk standard_error))

;; "standard_output'unused"
(define-fun standard_outputqtunused () file_type__ref
  (file_type__refqtmk standard_output))

;; "standard_input'unused"
(define-fun standard_inputqtunused () file_type__ref
  (file_type__refqtmk standard_input))

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Ensures"
(assert
  (and
    (and
      (and
        (= (status standard_error) 1)
        (= (is_writable standard_error) true))
      (not (= (is_open source) true)))
    (not (= (is_open destination) true))))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range5 count))

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "temp___414"
(define-fun temp___414 () (Array Int character)
  (temp___String_Literal_173 Tuple0))

;; "temp___String_Literal_173'result'unused"
(define-fun temp___String_Literal_173qtresultqtunused () (Array Int character)
  temp___414)

;; "copy__yes__assume'unused"
(define-fun copy__yes__assumeqtunused () (Array Int character)
  temp___414)

;; "Assume"
(assert (= temp___414 yes))

;; "Assume"
(assert true)

;; "temp___416"
(define-fun temp___416 () (Array Int character)
  (temp___String_Literal_176 Tuple0))

;; "temp___String_Literal_176'result'unused"
(define-fun temp___String_Literal_176qtresultqtunused () (Array Int character)
  temp___416)

;; "copy__no__assume'unused"
(define-fun copy__no__assumeqtunused () (Array Int character)
  temp___416)

;; "Assume"
(assert (= temp___416 no))

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range1 last1))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range1 last_of_yes_no))

;; "Assume"
(assert (= c__attr__constrained false))

;; "Assume"
(assert
  (default_initial_assumption
    (us_repqtmk
      (us_split_discrsqtmk c__split_discrs)
      (us_split_fieldsqtmk c__split_fields))
    false))

;; "Assume"
(assert true)

(declare-const count1 Int)

;; "count'unused"
(define-fun countqtunused1 () int__ref
  (int__refqtmk count1))

;; "H"
(assert (= count1 0))

;; "o"
(define-fun o () Bool
  (distinct 0 0))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused () Bool
  o)

(declare-const count_limit_reached Bool)

;; "count_limit_reached'unused"
(define-fun count_limit_reachedqtunused () bool__ref
  (bool__refqtmk count_limit_reached))

;; "H"
(assert (= count_limit_reached o))

(declare-const spark__branch1 Bool)

(declare-const standard_input1 us_rep)

(declare-const standard_output1 us_rep)

(declare-const standard_error1 us_rep)

(declare-const source1 us_rep)

(declare-const response1 (Array Int character))

(declare-const last2 Int)

;; "last'unused"
(define-fun lastqtunused1 () int__ref
  (int__refqtmk last2))

;; "response'unused"
(define-fun responseqtunused1 () map__ref
  (map__refqtmk response1))

;; "source'unused"
(define-fun sourceqtunused1 () file_type__ref
  (file_type__refqtmk source1))

;; "standard_error'unused"
(define-fun standard_errorqtunused1 () file_type__ref
  (file_type__refqtmk standard_error1))

;; "standard_output'unused"
(define-fun standard_outputqtunused1 () file_type__ref
  (file_type__refqtmk standard_output1))

;; "standard_input'unused"
(define-fun standard_inputqtunused1 () file_type__ref
  (file_type__refqtmk standard_input1))

;; "spark__branch'unused"
(define-fun spark__branchqtunused () bool__ref
  (bool__refqtmk spark__branch1))

(declare-const temp___loop_entry_487qtunused (Array Int character))

(declare-const map__contentqtresultqtunused (Array Int character))

(declare-const temp___loop_entry_486qtunused us_rep)

(declare-const file_type__contentqtresultqtunused us_rep)

(declare-const temp___loop_entry_485qtunused Int)

(declare-const int__contentqtresultqtunused Int)

(declare-const temp___loop_entry_484qtunused us_rep)

(declare-const file_type__contentqtresultqtunused1 us_rep)

(declare-const temp___loop_entry_483qtunused us_rep)

(declare-const file_type__contentqtresultqtunused2 us_rep)

(declare-const temp___loop_entry_482qtunused us_rep)

(declare-const file_type__contentqtresultqtunused3 us_rep)

(declare-const file_type__contentqtresultqtunused4 us_rep)

(declare-const o1 Bool)

(declare-const is_openqtresultqtunused Bool)

(declare-const file_type__contentqtresultqtunused5 us_rep)

(declare-const o2 Bool)

(declare-const is_writableqtresultqtunused Bool)

(declare-const file_type__contentqtresultqtunused6 us_rep)

(declare-const o3 Int)

(declare-const statusqtresultqtunused Int)

(declare-const o4 Bool)

(declare-const infix_eqqtresultqtunused Bool)

(declare-const o5 Bool)

(declare-const andbqtresultqtunused Bool)

(declare-const andbqtresultqtunused1 Bool)

(declare-const standard_input2 us_rep)

(declare-const standard_output2 us_rep)

(declare-const source2 us_rep)

(declare-const response2 (Array Int character))

(declare-const last3 Int)

(declare-const lastqtunused2 int__ref)

(declare-const responseqtunused2 map__ref)

(declare-const sourceqtunused2 file_type__ref)

(declare-const standard_outputqtunused2 file_type__ref)

(declare-const standard_inputqtunused2 file_type__ref)

(declare-const file_type__contentqtresultqtunused7 us_rep)

(declare-const o6 Int)

(declare-const statusqtresultqtunused1 Int)

(declare-const o7 Bool)

(declare-const infix_eqqtresultqtunused1 Bool)

(declare-const spark__branch2 Bool)

(declare-const spark__branchqtunused1 bool__ref)

(declare-const bool__contentqtresultqtunused Bool)

(declare-const temp___424 (Array Int character))

(declare-const temp___String_Literal_423qtresultqtunused (Array Int character))

(declare-const of_arrayqtresultqtunused us_t)

(declare-const standard_outputqtunused3 file_type__ref)

(declare-const standard_output3 us_rep)

(declare-const standard_output4 file_type__ref)

(declare-const map__contentqtresultqtunused1 (Array Int character))

(declare-const temp___compl_431 us_t)

(declare-const of_arrayqtresultqtunused1 us_t)

(declare-const o8 (Array Int character))

(declare-const to_arrayqtresultqtunused (Array Int character))

(declare-const param__itemqtunused map__ref)

(declare-const map__refqtmkqtresultqtunused map__ref)

(declare-const int__contentqtresultqtunused1 Int)

(declare-const o9 Int)

(declare-const lastqtresultqtunused Int)

(declare-const o10 integer)

(declare-const of_repqtresultqtunused integer)

(declare-const o11 Int)

(declare-const firstqtresultqtunused Int)

(declare-const o12 integer)

(declare-const of_repqtresultqtunused1 integer)

(declare-const standard_inputqtunused3 file_type__ref)

(declare-const param__item (Array Int character))

(declare-const param__itemqtunused1 map__ref)

(declare-const o13 Int)

(declare-const lastqtresultqtunused1 Int)

(declare-const o14 Int)

(declare-const firstqtresultqtunused1 Int)

(declare-const map__contentqtresultqtunused2 (Array Int character))

(declare-const temp___434 us_t)

(declare-const of_arrayqtresultqtunused2 us_t)

(declare-const o15 Int)

(declare-const firstqtresultqtunused2 Int)

(declare-const o16 (Array Int character))

(declare-const to_arrayqtresultqtunused1 (Array Int character))

(declare-const temp___435 (Array Int character))

(declare-const slideqtresultqtunused (Array Int character))

;; "H"
(assert
  (and
    (= temp___loop_entry_487qtunused response)
    (and
      (= map__contentqtresultqtunused response)
      (and
        (= temp___loop_entry_486qtunused source)
        (and
          (= file_type__contentqtresultqtunused source)
          (and
            (= temp___loop_entry_485qtunused last1)
            (and
              (= int__contentqtresultqtunused last1)
              (and
                (= temp___loop_entry_484qtunused standard_error)
                (and
                  (= file_type__contentqtresultqtunused1 standard_error)
                  (and
                    (= temp___loop_entry_483qtunused standard_output)
                    (and
                      (= file_type__contentqtresultqtunused2 standard_output)
                      (and
                        (= temp___loop_entry_482qtunused standard_input)
                        (and
                          (= file_type__contentqtresultqtunused3 standard_input)
                          (and
                            (= file_type__contentqtresultqtunused4 source)
                            (and
                              (= o1 (is_open source))
                              (and
                                (= is_openqtresultqtunused o1)
                                (and
                                  (= file_type__contentqtresultqtunused5 
                                  standard_error)
                                  (and
                                    (= o2 (is_writable standard_error))
                                    (and
                                      (=
                                        (= o2 true)
                                        (and
                                          (= (is_open standard_error) true)
                                          (or
                                            (= (mode standard_error) 1)
                                            (= (mode standard_error) 2))))
                                      (and
                                        (= is_writableqtresultqtunused 
                                        o2)
                                        (and
                                          (= file_type__contentqtresultqtunused6 
                                          standard_error)
                                          (and
                                            (= o3 (status standard_error))
                                            (and
                                              (in_range4 o3)
                                              (and
                                                (= statusqtresultqtunused 
                                                o3)
                                                (and
                                                  (= o4 (ite (= o3 1)
                                                          true
                                                          false))
                                                  (and
                                                    (= infix_eqqtresultqtunused 
                                                    o4)
                                                    (and
                                                      (= o5 (and o4 o2))
                                                      (and
                                                        (= andbqtresultqtunused 
                                                        o5)
                                                        (and
                                                          (= andbqtresultqtunused1 (and 
                                                          o5 (ite (= 
                                                               o1 true)
                                                               false
                                                               true)))
                                                          (and
                                                            (= lastqtunused2 
                                                            (int__refqtmk
                                                              last3))
                                                            (and
                                                              (= responseqtunused2 
                                                              (map__refqtmk
                                                                response2))
                                                              (and
                                                                (= sourceqtunused2 
                                                                (file_type__refqtmk
                                                                  source2))
                                                                (and
                                                                  (= 
                                                                  standard_outputqtunused2 
                                                                  (file_type__refqtmk
                                                                    standard_output2))
                                                                  (and
                                                                    (= 
                                                                    standard_inputqtunused2 
                                                                    (file_type__refqtmk
                                                                    standard_input2))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (status
                                                                    standard_error1) 1)
                                                                    (= 
                                                                    (is_writable
                                                                    standard_error1) true))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    source2) true)))
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    standard_error1 
                                                                    standard_error)
                                                                    (in_range1
                                                                    last3))
                                                                    (and
                                                                    (= 
                                                                    file_type__contentqtresultqtunused7 
                                                                    standard_output2)
                                                                    (and
                                                                    (= 
                                                                    o6 
                                                                    (status
                                                                    standard_output2))
                                                                    (and
                                                                    (in_range4
                                                                    o6)
                                                                    (and
                                                                    (= 
                                                                    statusqtresultqtunused1 
                                                                    o6)
                                                                    (and
                                                                    (= 
                                                                    o7 
                                                                    (ite (= 
                                                                    o6 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused1 
                                                                    o7)
                                                                    (and
                                                                    (= 
                                                                    spark__branchqtunused1 
                                                                    (bool__refqtmk
                                                                    spark__branch2))
                                                                    (and
                                                                    (= 
                                                                    spark__branch2 
                                                                    o7)
                                                                    (and
                                                                    (= 
                                                                    bool__contentqtresultqtunused 
                                                                    spark__branch2)
                                                                    (and
                                                                    (= 
                                                                    spark__branch2 true)
                                                                    (and
                                                                    (= 
                                                                    temp___424 
                                                                    (temp___String_Literal_423
                                                                    Tuple0))
                                                                    (and
                                                                    (= 
                                                                    temp___String_Literal_423qtresultqtunused 
                                                                    temp___424)
                                                                    (and
                                                                    (= 
                                                                    of_arrayqtresultqtunused 
                                                                    (of_array
                                                                    temp___424
                                                                    1
                                                                    35))
                                                                    (and
                                                                    (= 
                                                                    standard_outputqtunused3 
                                                                    (file_type__refqtmk
                                                                    standard_output2))
                                                                    (and
                                                                    (= 
                                                                    standard_output4 
                                                                    (file_type__refqtmk
                                                                    standard_output3))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output3) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output3) 1))
                                                                    (= 
                                                                    (let ((temp___332 
                                                                    (name
                                                                    standard_output2)))
                                                                    (let ((temp___330 
                                                                    (name
                                                                    standard_output3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___330)
                                                                    (first
                                                                    temp___330)
                                                                    (last
                                                                    temp___330)
                                                                    (to_array
                                                                    temp___332)
                                                                    (first
                                                                    temp___332)
                                                                    (last
                                                                    temp___332)))) true))
                                                                    (= 
                                                                    (let ((temp___336 
                                                                    (form
                                                                    standard_output2)))
                                                                    (let ((temp___334 
                                                                    (form
                                                                    standard_output3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___334)
                                                                    (first
                                                                    temp___334)
                                                                    (last
                                                                    temp___334)
                                                                    (to_array
                                                                    temp___336)
                                                                    (first
                                                                    temp___336)
                                                                    (last
                                                                    temp___336)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output3) 
                                                                    (line_length
                                                                    standard_output2)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output3) 
                                                                    (page_length
                                                                    standard_output2)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output3) true))
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused1 
                                                                    response2)
                                                                    (and
                                                                    (= 
                                                                    temp___compl_431 
                                                                    (of_array
                                                                    response2
                                                                    1
                                                                    512))
                                                                    (and
                                                                    (= 
                                                                    of_arrayqtresultqtunused1 
                                                                    temp___compl_431)
                                                                    (and
                                                                    (= 
                                                                    o8 
                                                                    response2)
                                                                    (and
                                                                    (= 
                                                                    to_arrayqtresultqtunused 
                                                                    o8)
                                                                    (and
                                                                    (= 
                                                                    param__itemqtunused 
                                                                    (map__refqtmk
                                                                    o8))
                                                                    (and
                                                                    (= 
                                                                    map__refqtmkqtresultqtunused 
                                                                    (map__refqtmk
                                                                    o8))
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused1 
                                                                    last3)
                                                                    (and
                                                                    (= 
                                                                    o9 512)
                                                                    (and
                                                                    (= 
                                                                    lastqtresultqtunused 
                                                                    o9)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o10) 
                                                                    o9)
                                                                    (and
                                                                    (= 
                                                                    of_repqtresultqtunused 
                                                                    o10)
                                                                    (and
                                                                    (= 
                                                                    o11 1)
                                                                    (and
                                                                    (= 
                                                                    firstqtresultqtunused 
                                                                    o11)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o12) 
                                                                    o11)
                                                                    (and
                                                                    (= 
                                                                    of_repqtresultqtunused1 
                                                                    o12)
                                                                    (and
                                                                    (= 
                                                                    standard_inputqtunused3 
                                                                    (file_type__refqtmk
                                                                    standard_input2))
                                                                    (and
                                                                    (= 
                                                                    param__itemqtunused1 
                                                                    (map__refqtmk
                                                                    param__item))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_readable
                                                                    standard_input1) true)
                                                                    (= 
                                                                    (let ((temp___348 
                                                                    (name
                                                                    standard_input2)))
                                                                    (let ((temp___346 
                                                                    (name
                                                                    standard_input1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___346)
                                                                    (first
                                                                    temp___346)
                                                                    (last
                                                                    temp___346)
                                                                    (to_array
                                                                    temp___348)
                                                                    (first
                                                                    temp___348)
                                                                    (last
                                                                    temp___348)))) true))
                                                                    (= 
                                                                    (let ((temp___352 
                                                                    (form
                                                                    standard_input2)))
                                                                    (let ((temp___350 
                                                                    (form
                                                                    standard_input1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___350)
                                                                    (first
                                                                    temp___350)
                                                                    (last
                                                                    temp___350)
                                                                    (to_array
                                                                    temp___352)
                                                                    (first
                                                                    temp___352)
                                                                    (last
                                                                    temp___352)))) true))
                                                                    (= 
                                                                    (is_standard_input
                                                                    standard_input1) true))
                                                                    (ite (= 
                                                                    (status
                                                                    standard_input1) 1)
                                                                    (and
                                                                    (<= (- 
                                                                    (to_rep1
                                                                    o12) 1) 
                                                                    last2)
                                                                    (<= 
                                                                    last2 
                                                                    (to_rep1
                                                                    o10)))
                                                                    (= 
                                                                    last2 0)))
                                                                    (and
                                                                    (dynamic_invariant
                                                                    (of_array
                                                                    param__item
                                                                    (to_rep1
                                                                    o12)
                                                                    (to_rep1
                                                                    o10))
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (in_range1
                                                                    last2)))
                                                                    (and
                                                                    (= 
                                                                    o13 512)
                                                                    (and
                                                                    (= 
                                                                    lastqtresultqtunused1 
                                                                    o13)
                                                                    (and
                                                                    (= 
                                                                    o14 1)
                                                                    (and
                                                                    (= 
                                                                    firstqtresultqtunused1 
                                                                    o14)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused2 
                                                                    param__item)
                                                                    (and
                                                                    (= 
                                                                    temp___434 
                                                                    (of_array
                                                                    param__item
                                                                    o14
                                                                    o13))
                                                                    (and
                                                                    (= 
                                                                    of_arrayqtresultqtunused2 
                                                                    temp___434)
                                                                    (and
                                                                    (= 
                                                                    o15 
                                                                    o14)
                                                                    (and
                                                                    (= 
                                                                    firstqtresultqtunused2 
                                                                    o15)
                                                                    (and
                                                                    (= 
                                                                    o16 
                                                                    param__item)
                                                                    (and
                                                                    (= 
                                                                    to_arrayqtresultqtunused1 
                                                                    o16)
                                                                    (and
                                                                    (= 
                                                                    temp___435 
                                                                    (slide
                                                                    o16
                                                                    o15
                                                                    1))
                                                                    (and
                                                                    (= 
                                                                    slideqtresultqtunused 
                                                                    temp___435)
                                                                    (and
                                                                    (= 
                                                                    response1 
                                                                    temp___435)
                                                                    (and
                                                                    (let ((o17 
                                                                    (status
                                                                    standard_input1)))
                                                                    (and
                                                                    (in_range4
                                                                    o17)
                                                                    (exists 
                                                                    ((spark__branch3 Bool))
                                                                    (and
                                                                    (= spark__branch3 (and (and 
                                                                    (ite (= o17 1)
                                                                    true
                                                                    false) 
                                                                    (ite (<= 1 
                                                                    last2)
                                                                    true
                                                                    false)) 
                                                                    (ite (<= 
                                                                    last2 512)
                                                                    true
                                                                    false)))
                                                                    (and
                                                                    (= spark__branch3 true)
                                                                    (and
                                                                    (= 
                                                                    last2 
                                                                    clast)
                                                                    (and
                                                                    (in_range1
                                                                    clast)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast)
                                                                    (<= 
                                                                    clast 512))))
                                                                    (and
                                                                    (ite (= 
                                                                    (status
                                                                    source1) 1)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (mode
                                                                    source1) 0)
                                                                    (= 
                                                                    (let ((temp___357 
                                                                    (name
                                                                    source1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___357)
                                                                    (first
                                                                    temp___357)
                                                                    (last
                                                                    temp___357)
                                                                    response1
                                                                    1
                                                                    clast)) true))
                                                                    (= 
                                                                    (let ((temp___359 
                                                                    (form
                                                                    source1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___359)
                                                                    (first
                                                                    temp___359)
                                                                    (last
                                                                    temp___359)
                                                                    (temp___String_Literal_441
                                                                    Tuple0)
                                                                    1
                                                                    0)) true))
                                                                    (= 
                                                                    (is_open
                                                                    source1) true))
                                                                    (= 
                                                                    (line_length
                                                                    source1) 0))
                                                                    (= 
                                                                    (page_length
                                                                    source1) 0))
                                                                    (not
                                                                    (= 
                                                                    (is_standard_file
                                                                    source1) true)))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    source1) true)))
                                                                    (let ((temp___444 
                                                                    (status
                                                                    source1)))
                                                                    (and
                                                                    (in_range4
                                                                    temp___444)
                                                                    (and
                                                                    (= 
                                                                    spark__branch1 
                                                                    (ite (= temp___444 1)
                                                                    true
                                                                    false))
                                                                    (= 
                                                                    spark__branch1 true)))))))))))))
                                                                    (= 
                                                                    standard_output1 
                                                                    standard_output3)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(declare-const spark__branch3 Bool)

(declare-const standard_output5 us_rep)

(declare-const standard_error2 us_rep)

(declare-const source3 us_rep)

(declare-const destination1 us_rep)

;; "destination'unused"
(define-fun destinationqtunused1 () file_type__ref
  (file_type__refqtmk destination1))

;; "source'unused"
(define-fun sourceqtunused3 () file_type__ref
  (file_type__refqtmk source3))

;; "standard_error'unused"
(define-fun standard_errorqtunused2 () file_type__ref
  (file_type__refqtmk standard_error2))

;; "standard_output'unused"
(define-fun standard_outputqtunused4 () file_type__ref
  (file_type__refqtmk standard_output5))

;; "spark__branch'unused"
(define-fun spark__branchqtunused2 () bool__ref
  (bool__refqtmk spark__branch3))

(declare-const temp___loop_entry_618qtunused (Array Int character))

(declare-const map__contentqtresultqtunused3 (Array Int character))

(declare-const temp___loop_entry_617qtunused us_rep)

(declare-const file_type__contentqtresultqtunused8 us_rep)

(declare-const temp___loop_entry_616qtunused us_rep)

(declare-const file_type__contentqtresultqtunused9 us_rep)

(declare-const temp___loop_entry_615qtunused Int)

(declare-const int__contentqtresultqtunused2 Int)

(declare-const temp___loop_entry_614qtunused Int)

(declare-const int__contentqtresultqtunused3 Int)

(declare-const temp___loop_entry_613qtunused us_rep)

(declare-const file_type__contentqtresultqtunused10 us_rep)

(declare-const temp___loop_entry_612qtunused us_rep)

(declare-const file_type__contentqtresultqtunused11 us_rep)

(declare-const temp___loop_entry_611qtunused us_rep)

(declare-const file_type__contentqtresultqtunused12 us_rep)

(declare-const temp___loop_entry_610qtunused (Array Int character))

(declare-const map__contentqtresultqtunused4 (Array Int character))

(declare-const file_type__contentqtresultqtunused13 us_rep)

(declare-const o17 Bool)

(declare-const is_readableqtresultqtunused Bool)

(declare-const file_type__contentqtresultqtunused14 us_rep)

(declare-const o18 Bool)

(declare-const is_standard_fileqtresultqtunused Bool)

(declare-const file_type__contentqtresultqtunused15 us_rep)

(declare-const o19 Bool)

(declare-const is_openqtresultqtunused1 Bool)

(declare-const file_type__contentqtresultqtunused16 us_rep)

(declare-const o20 Bool)

(declare-const is_openqtresultqtunused2 Bool)

(declare-const file_type__contentqtresultqtunused17 us_rep)

(declare-const o21 Bool)

(declare-const is_writableqtresultqtunused1 Bool)

(declare-const file_type__contentqtresultqtunused18 us_rep)

(declare-const o22 Int)

(declare-const statusqtresultqtunused2 Int)

(declare-const o23 Bool)

(declare-const infix_eqqtresultqtunused2 Bool)

(declare-const o24 Bool)

(declare-const andbqtresultqtunused2 Bool)

(declare-const o25 Bool)

(declare-const andbqtresultqtunused3 Bool)

(declare-const o26 Bool)

(declare-const andbqtresultqtunused4 Bool)

(declare-const o27 Bool)

(declare-const andbqtresultqtunused5 Bool)

(declare-const andbqtresultqtunused6 Bool)

(declare-const standard_input3 us_rep)

(declare-const standard_output6 us_rep)

(declare-const standard_error3 us_rep)

(declare-const destination2 us_rep)

(declare-const response3 (Array Int character))

(declare-const yes_no1 (Array Int character))

(declare-const last4 Int)

(declare-const last_of_yes_no1 Int)

(declare-const last_of_yes_noqtunused1 int__ref)

(declare-const lastqtunused3 int__ref)

(declare-const yes_noqtunused1 map__ref)

(declare-const responseqtunused3 map__ref)

(declare-const destinationqtunused2 file_type__ref)

(declare-const standard_errorqtunused3 file_type__ref)

(declare-const standard_outputqtunused5 file_type__ref)

(declare-const standard_inputqtunused4 file_type__ref)

(declare-const file_type__contentqtresultqtunused19 us_rep)

(declare-const o28 Int)

(declare-const statusqtresultqtunused3 Int)

(declare-const o29 Bool)

(declare-const infix_eqqtresultqtunused3 Bool)

(declare-const spark__branch4 Bool)

(declare-const spark__branchqtunused3 bool__ref)

(declare-const bool__contentqtresultqtunused1 Bool)

(declare-const temp___490 (Array Int character))

(declare-const temp___String_Literal_489qtresultqtunused (Array Int character))

(declare-const of_arrayqtresultqtunused3 us_t)

(declare-const standard_outputqtunused6 file_type__ref)

(declare-const standard_output7 us_rep)

(declare-const standard_output8 file_type__ref)

(declare-const map__contentqtresultqtunused5 (Array Int character))

(declare-const temp___compl_497 us_t)

(declare-const of_arrayqtresultqtunused4 us_t)

(declare-const o30 (Array Int character))

(declare-const to_arrayqtresultqtunused2 (Array Int character))

(declare-const param__itemqtunused2 map__ref)

(declare-const map__refqtmkqtresultqtunused1 map__ref)

(declare-const int__contentqtresultqtunused4 Int)

(declare-const o31 Int)

(declare-const lastqtresultqtunused2 Int)

(declare-const o32 integer)

(declare-const of_repqtresultqtunused2 integer)

(declare-const o33 Int)

(declare-const firstqtresultqtunused3 Int)

(declare-const o34 integer)

(declare-const of_repqtresultqtunused3 integer)

(declare-const standard_inputqtunused5 file_type__ref)

(declare-const standard_input4 us_rep)

(declare-const last5 Int)

(declare-const param__item1 (Array Int character))

(declare-const param__itemqtunused3 map__ref)

(declare-const lastqtunused4 int__ref)

(declare-const standard_inputqtunused6 file_type__ref)

(declare-const o35 Int)

(declare-const lastqtresultqtunused3 Int)

(declare-const o36 Int)

(declare-const firstqtresultqtunused4 Int)

(declare-const map__contentqtresultqtunused6 (Array Int character))

(declare-const temp___500 us_t)

(declare-const of_arrayqtresultqtunused5 us_t)

(declare-const o37 Int)

(declare-const firstqtresultqtunused5 Int)

(declare-const o38 (Array Int character))

(declare-const to_arrayqtresultqtunused3 (Array Int character))

(declare-const temp___501 (Array Int character))

(declare-const slideqtresultqtunused1 (Array Int character))

(declare-const response4 (Array Int character))

(declare-const responseqtunused4 map__ref)

;; "H"
(assert
  (and
    (= temp___loop_entry_618qtunused response1)
    (and
      (= map__contentqtresultqtunused3 response1)
      (and
        (= temp___loop_entry_617qtunused destination)
        (and
          (= file_type__contentqtresultqtunused8 destination)
          (and
            (= temp___loop_entry_616qtunused source1)
            (and
              (= file_type__contentqtresultqtunused9 source1)
              (and
                (= temp___loop_entry_615qtunused last_of_yes_no)
                (and
                  (= int__contentqtresultqtunused2 last_of_yes_no)
                  (and
                    (= temp___loop_entry_614qtunused last2)
                    (and
                      (= int__contentqtresultqtunused3 last2)
                      (and
                        (= temp___loop_entry_613qtunused standard_error1)
                        (and
                          (= file_type__contentqtresultqtunused10 standard_error1)
                          (and
                            (= temp___loop_entry_612qtunused standard_output1)
                            (and
                              (= file_type__contentqtresultqtunused11 
                              standard_output1)
                              (and
                                (= temp___loop_entry_611qtunused standard_input1)
                                (and
                                  (= file_type__contentqtresultqtunused12 
                                  standard_input1)
                                  (and
                                    (= temp___loop_entry_610qtunused 
                                    yes_no)
                                    (and
                                      (= map__contentqtresultqtunused4 
                                      yes_no)
                                      (and
                                        (= file_type__contentqtresultqtunused13 
                                        source1)
                                        (and
                                          (= o17 (is_readable source1))
                                          (and
                                            (=
                                              (= o17 true)
                                              (and
                                                (= (is_open source1) true)
                                                (= (mode source1) 0)))
                                            (and
                                              (= is_readableqtresultqtunused 
                                              o17)
                                              (and
                                                (= file_type__contentqtresultqtunused14 
                                                source1)
                                                (and
                                                  (= o18 (is_standard_file
                                                           source1))
                                                  (and
                                                    (=
                                                      (= o18 true)
                                                      (or
                                                        (or
                                                          (= (is_standard_input
                                                               source1) true)
                                                          (= (is_standard_output
                                                               source1) true))
                                                        (= (is_standard_error
                                                             source1) true)))
                                                    (and
                                                      (= is_standard_fileqtresultqtunused 
                                                      o18)
                                                      (and
                                                        (= file_type__contentqtresultqtunused15 
                                                        source1)
                                                        (and
                                                          (= o19 (is_open
                                                                   source1))
                                                          (and
                                                            (= is_openqtresultqtunused1 
                                                            o19)
                                                            (and
                                                              (= file_type__contentqtresultqtunused16 
                                                              destination)
                                                              (and
                                                                (= o20 
                                                                (is_open
                                                                  destination))
                                                                (and
                                                                  (= 
                                                                  is_openqtresultqtunused2 
                                                                  o20)
                                                                  (and
                                                                    (= 
                                                                    file_type__contentqtresultqtunused17 
                                                                    standard_error1)
                                                                    (and
                                                                    (= 
                                                                    o21 
                                                                    (is_writable
                                                                    standard_error1))
                                                                    (and
                                                                    (=
                                                                    (= 
                                                                    o21 true)
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_error1) true)
                                                                    (or
                                                                    (= 
                                                                    (mode
                                                                    standard_error1) 1)
                                                                    (= 
                                                                    (mode
                                                                    standard_error1) 2))))
                                                                    (and
                                                                    (= 
                                                                    is_writableqtresultqtunused1 
                                                                    o21)
                                                                    (and
                                                                    (= 
                                                                    file_type__contentqtresultqtunused18 
                                                                    standard_error1)
                                                                    (and
                                                                    (= 
                                                                    o22 
                                                                    (status
                                                                    standard_error1))
                                                                    (and
                                                                    (in_range4
                                                                    o22)
                                                                    (and
                                                                    (= 
                                                                    statusqtresultqtunused2 
                                                                    o22)
                                                                    (and
                                                                    (= 
                                                                    o23 
                                                                    (ite (= 
                                                                    o22 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused2 
                                                                    o23)
                                                                    (and
                                                                    (= 
                                                                    o24 (and 
                                                                    o23 
                                                                    o21))
                                                                    (and
                                                                    (= 
                                                                    andbqtresultqtunused2 
                                                                    o24)
                                                                    (and
                                                                    (= 
                                                                    o25 (and 
                                                                    o24 
                                                                    (ite (= 
                                                                    o20 true)
                                                                    false
                                                                    true)))
                                                                    (and
                                                                    (= 
                                                                    andbqtresultqtunused3 
                                                                    o25)
                                                                    (and
                                                                    (= 
                                                                    o26 (and 
                                                                    o25 
                                                                    o19))
                                                                    (and
                                                                    (= 
                                                                    andbqtresultqtunused4 
                                                                    o26)
                                                                    (and
                                                                    (= 
                                                                    o27 (and 
                                                                    o26 
                                                                    (ite (= 
                                                                    o18 true)
                                                                    false
                                                                    true)))
                                                                    (and
                                                                    (= 
                                                                    andbqtresultqtunused5 
                                                                    o27)
                                                                    (and
                                                                    (= 
                                                                    andbqtresultqtunused6 (and 
                                                                    o27 
                                                                    o17))
                                                                    (and
                                                                    (= 
                                                                    last_of_yes_noqtunused1 
                                                                    (int__refqtmk
                                                                    last_of_yes_no1))
                                                                    (and
                                                                    (= 
                                                                    lastqtunused3 
                                                                    (int__refqtmk
                                                                    last4))
                                                                    (and
                                                                    (= 
                                                                    yes_noqtunused1 
                                                                    (map__refqtmk
                                                                    yes_no1))
                                                                    (and
                                                                    (= 
                                                                    responseqtunused3 
                                                                    (map__refqtmk
                                                                    response3))
                                                                    (and
                                                                    (= 
                                                                    destinationqtunused2 
                                                                    (file_type__refqtmk
                                                                    destination2))
                                                                    (and
                                                                    (= 
                                                                    standard_errorqtunused3 
                                                                    (file_type__refqtmk
                                                                    standard_error3))
                                                                    (and
                                                                    (= 
                                                                    standard_outputqtunused5 
                                                                    (file_type__refqtmk
                                                                    standard_output6))
                                                                    (and
                                                                    (= 
                                                                    standard_inputqtunused4 
                                                                    (file_type__refqtmk
                                                                    standard_input3))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (status
                                                                    standard_error3) 1)
                                                                    (= 
                                                                    (is_writable
                                                                    standard_error3) true))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    destination2) true)))
                                                                    (= 
                                                                    (is_open
                                                                    source3) true))
                                                                    (not
                                                                    (= 
                                                                    (is_standard_file
                                                                    source3) true)))
                                                                    (= 
                                                                    (is_readable
                                                                    source3) true))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    standard_error3 
                                                                    standard_error1)
                                                                    (in_range1
                                                                    last4))
                                                                    (in_range1
                                                                    last_of_yes_no1))
                                                                    (= 
                                                                    source3 
                                                                    source1))
                                                                    (and
                                                                    (= 
                                                                    file_type__contentqtresultqtunused19 
                                                                    standard_output6)
                                                                    (and
                                                                    (= 
                                                                    o28 
                                                                    (status
                                                                    standard_output6))
                                                                    (and
                                                                    (in_range4
                                                                    o28)
                                                                    (and
                                                                    (= 
                                                                    statusqtresultqtunused3 
                                                                    o28)
                                                                    (and
                                                                    (= 
                                                                    o29 
                                                                    (ite (= 
                                                                    o28 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused3 
                                                                    o29)
                                                                    (and
                                                                    (= 
                                                                    spark__branchqtunused3 
                                                                    (bool__refqtmk
                                                                    spark__branch4))
                                                                    (and
                                                                    (= 
                                                                    spark__branch4 
                                                                    o29)
                                                                    (and
                                                                    (= 
                                                                    bool__contentqtresultqtunused1 
                                                                    spark__branch4)
                                                                    (and
                                                                    (= 
                                                                    spark__branch4 true)
                                                                    (and
                                                                    (= 
                                                                    temp___490 
                                                                    (temp___String_Literal_489
                                                                    Tuple0))
                                                                    (and
                                                                    (= 
                                                                    temp___String_Literal_489qtresultqtunused 
                                                                    temp___490)
                                                                    (and
                                                                    (= 
                                                                    of_arrayqtresultqtunused3 
                                                                    (of_array
                                                                    temp___490
                                                                    1
                                                                    40))
                                                                    (and
                                                                    (= 
                                                                    standard_outputqtunused6 
                                                                    (file_type__refqtmk
                                                                    standard_output6))
                                                                    (and
                                                                    (= 
                                                                    standard_output8 
                                                                    (file_type__refqtmk
                                                                    standard_output7))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output7) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output7) 1))
                                                                    (= 
                                                                    (let ((temp___332 
                                                                    (name
                                                                    standard_output6)))
                                                                    (let ((temp___330 
                                                                    (name
                                                                    standard_output7)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___330)
                                                                    (first
                                                                    temp___330)
                                                                    (last
                                                                    temp___330)
                                                                    (to_array
                                                                    temp___332)
                                                                    (first
                                                                    temp___332)
                                                                    (last
                                                                    temp___332)))) true))
                                                                    (= 
                                                                    (let ((temp___336 
                                                                    (form
                                                                    standard_output6)))
                                                                    (let ((temp___334 
                                                                    (form
                                                                    standard_output7)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___334)
                                                                    (first
                                                                    temp___334)
                                                                    (last
                                                                    temp___334)
                                                                    (to_array
                                                                    temp___336)
                                                                    (first
                                                                    temp___336)
                                                                    (last
                                                                    temp___336)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output7) 
                                                                    (line_length
                                                                    standard_output6)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output7) 
                                                                    (page_length
                                                                    standard_output6)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output7) true))
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused5 
                                                                    response3)
                                                                    (and
                                                                    (= 
                                                                    temp___compl_497 
                                                                    (of_array
                                                                    response3
                                                                    1
                                                                    512))
                                                                    (and
                                                                    (= 
                                                                    of_arrayqtresultqtunused4 
                                                                    temp___compl_497)
                                                                    (and
                                                                    (= 
                                                                    o30 
                                                                    response3)
                                                                    (and
                                                                    (= 
                                                                    to_arrayqtresultqtunused2 
                                                                    o30)
                                                                    (and
                                                                    (= 
                                                                    param__itemqtunused2 
                                                                    (map__refqtmk
                                                                    o30))
                                                                    (and
                                                                    (= 
                                                                    map__refqtmkqtresultqtunused1 
                                                                    (map__refqtmk
                                                                    o30))
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused4 
                                                                    last4)
                                                                    (and
                                                                    (= 
                                                                    o31 512)
                                                                    (and
                                                                    (= 
                                                                    lastqtresultqtunused2 
                                                                    o31)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o32) 
                                                                    o31)
                                                                    (and
                                                                    (= 
                                                                    of_repqtresultqtunused2 
                                                                    o32)
                                                                    (and
                                                                    (= 
                                                                    o33 1)
                                                                    (and
                                                                    (= 
                                                                    firstqtresultqtunused3 
                                                                    o33)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o34) 
                                                                    o33)
                                                                    (and
                                                                    (= 
                                                                    of_repqtresultqtunused3 
                                                                    o34)
                                                                    (and
                                                                    (= 
                                                                    standard_inputqtunused5 
                                                                    (file_type__refqtmk
                                                                    standard_input3))
                                                                    (and
                                                                    (= 
                                                                    param__itemqtunused3 
                                                                    (map__refqtmk
                                                                    param__item1))
                                                                    (and
                                                                    (= 
                                                                    lastqtunused4 
                                                                    (int__refqtmk
                                                                    last5))
                                                                    (and
                                                                    (= 
                                                                    standard_inputqtunused6 
                                                                    (file_type__refqtmk
                                                                    standard_input4))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_readable
                                                                    standard_input4) true)
                                                                    (= 
                                                                    (let ((temp___348 
                                                                    (name
                                                                    standard_input3)))
                                                                    (let ((temp___346 
                                                                    (name
                                                                    standard_input4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___346)
                                                                    (first
                                                                    temp___346)
                                                                    (last
                                                                    temp___346)
                                                                    (to_array
                                                                    temp___348)
                                                                    (first
                                                                    temp___348)
                                                                    (last
                                                                    temp___348)))) true))
                                                                    (= 
                                                                    (let ((temp___352 
                                                                    (form
                                                                    standard_input3)))
                                                                    (let ((temp___350 
                                                                    (form
                                                                    standard_input4)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___350)
                                                                    (first
                                                                    temp___350)
                                                                    (last
                                                                    temp___350)
                                                                    (to_array
                                                                    temp___352)
                                                                    (first
                                                                    temp___352)
                                                                    (last
                                                                    temp___352)))) true))
                                                                    (= 
                                                                    (is_standard_input
                                                                    standard_input4) true))
                                                                    (ite (= 
                                                                    (status
                                                                    standard_input4) 1)
                                                                    (and
                                                                    (<= (- 
                                                                    (to_rep1
                                                                    o34) 1) 
                                                                    last5)
                                                                    (<= 
                                                                    last5 
                                                                    (to_rep1
                                                                    o32)))
                                                                    (= 
                                                                    last5 0)))
                                                                    (and
                                                                    (dynamic_invariant
                                                                    (of_array
                                                                    param__item1
                                                                    (to_rep1
                                                                    o34)
                                                                    (to_rep1
                                                                    o32))
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (in_range1
                                                                    last5)))
                                                                    (and
                                                                    (= 
                                                                    o35 512)
                                                                    (and
                                                                    (= 
                                                                    lastqtresultqtunused3 
                                                                    o35)
                                                                    (and
                                                                    (= 
                                                                    o36 1)
                                                                    (and
                                                                    (= 
                                                                    firstqtresultqtunused4 
                                                                    o36)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused6 
                                                                    param__item1)
                                                                    (and
                                                                    (= 
                                                                    temp___500 
                                                                    (of_array
                                                                    param__item1
                                                                    o36
                                                                    o35))
                                                                    (and
                                                                    (= 
                                                                    of_arrayqtresultqtunused5 
                                                                    temp___500)
                                                                    (and
                                                                    (= 
                                                                    o37 
                                                                    o36)
                                                                    (and
                                                                    (= 
                                                                    firstqtresultqtunused5 
                                                                    o37)
                                                                    (and
                                                                    (= 
                                                                    o38 
                                                                    param__item1)
                                                                    (and
                                                                    (= 
                                                                    to_arrayqtresultqtunused3 
                                                                    o38)
                                                                    (and
                                                                    (= 
                                                                    temp___501 
                                                                    (slide
                                                                    o38
                                                                    o37
                                                                    1))
                                                                    (and
                                                                    (= 
                                                                    slideqtresultqtunused1 
                                                                    temp___501)
                                                                    (and
                                                                    (= 
                                                                    responseqtunused4 
                                                                    (map__refqtmk
                                                                    response4))
                                                                    (and
                                                                    (= 
                                                                    response4 
                                                                    temp___501)
                                                                    (let ((o39 
                                                                    (status
                                                                    standard_input4)))
                                                                    (and
                                                                    (in_range4
                                                                    o39)
                                                                    (exists 
                                                                    ((spark__branch5 Bool))
                                                                    (and
                                                                    (= spark__branch5 (and (and 
                                                                    (ite (= o39 1)
                                                                    true
                                                                    false) 
                                                                    (ite (<= 1 
                                                                    last5)
                                                                    true
                                                                    false)) 
                                                                    (ite (<= 
                                                                    last5 512)
                                                                    true
                                                                    false)))
                                                                    (and
                                                                    (= spark__branch5 true)
                                                                    (and
                                                                    (= 
                                                                    last5 
                                                                    clast1)
                                                                    (and
                                                                    (in_range1
                                                                    clast1)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (exists 
                                                                    ((destination3 us_rep))
                                                                    (and
                                                                    (ite (= 
                                                                    (status
                                                                    destination3) 1)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (mode
                                                                    destination3) 1)
                                                                    (= 
                                                                    (let ((temp___369 
                                                                    (name
                                                                    destination3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___369)
                                                                    (first
                                                                    temp___369)
                                                                    (last
                                                                    temp___369)
                                                                    response4
                                                                    1
                                                                    clast1)) true))
                                                                    (= 
                                                                    (let ((temp___371 
                                                                    (form
                                                                    destination3)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___371)
                                                                    (first
                                                                    temp___371)
                                                                    (last
                                                                    temp___371)
                                                                    (temp___String_Literal_507
                                                                    Tuple0)
                                                                    1
                                                                    0)) true))
                                                                    (= 
                                                                    (is_open
                                                                    destination3) true))
                                                                    (= 
                                                                    (line_length
                                                                    destination3) 0))
                                                                    (= 
                                                                    (page_length
                                                                    destination3) 0))
                                                                    (not
                                                                    (= 
                                                                    (is_standard_file
                                                                    destination3) true)))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    destination3) true)))
                                                                    (let ((temp___510 
                                                                    (status
                                                                    destination3)))
                                                                    (and
                                                                    (in_range4
                                                                    temp___510)
                                                                    (exists 
                                                                    ((spark__branch6 Bool))
                                                                    (and
                                                                    (= spark__branch6 
                                                                    (ite (= temp___510 1)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch6 true)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    spark__branch3 spark__branch6)
                                                                    (= 
                                                                    standard_output5 
                                                                    standard_output7))
                                                                    (= 
                                                                    standard_error2 
                                                                    standard_error3))
                                                                    (= 
                                                                    destination1 destination3))
                                                                    (exists 
                                                                    ((spark__branch7 Bool))
                                                                    (and
                                                                    (= spark__branch7 
                                                                    (ite (= temp___510 5)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (not
                                                                    (= spark__branch7 true))
                                                                    (exists 
                                                                    ((spark__branch8 Bool))
                                                                    (and
                                                                    (= spark__branch8 
                                                                    (ite (= temp___510 6)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch8 true)
                                                                    (let ((o40 
                                                                    (status
                                                                    standard_output7)))
                                                                    (and
                                                                    (in_range4
                                                                    o40)
                                                                    (exists 
                                                                    ((spark__branch9 Bool))
                                                                    (and
                                                                    (= spark__branch9 
                                                                    (ite (= o40 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch9 true)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (and
                                                                    (in_range2
                                                                    (- (+ 1 (+ 
                                                                    (length
                                                                    1
                                                                    24) 
                                                                    (length
                                                                    1
                                                                    clast1))) 1))
                                                                    (exists 
                                                                    ((standard_output9 us_rep))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output9) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output9) 1))
                                                                    (= 
                                                                    (let ((temp___363 
                                                                    (name
                                                                    standard_output7)))
                                                                    (let ((temp___361 
                                                                    (name
                                                                    standard_output9)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___361)
                                                                    (first
                                                                    temp___361)
                                                                    (last
                                                                    temp___361)
                                                                    (to_array
                                                                    temp___363)
                                                                    (first
                                                                    temp___363)
                                                                    (last
                                                                    temp___363)))) true))
                                                                    (= 
                                                                    (let ((temp___367 
                                                                    (form
                                                                    standard_output7)))
                                                                    (let ((temp___365 
                                                                    (form
                                                                    standard_output9)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___365)
                                                                    (first
                                                                    temp___365)
                                                                    (last
                                                                    temp___365)
                                                                    (to_array
                                                                    temp___367)
                                                                    (first
                                                                    temp___367)
                                                                    (last
                                                                    temp___367)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output9) 
                                                                    (line_length
                                                                    standard_output7)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output9) 
                                                                    (page_length
                                                                    standard_output7)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output9) true))
                                                                    (exists 
                                                                    ((spark__branch10 Bool) (standard_output10 us_rep))
                                                                    (and
                                                                    (let ((o41 
                                                                    (status
                                                                    standard_output9)))
                                                                    (and
                                                                    (in_range4
                                                                    o41)
                                                                    (and
                                                                    (= spark__branch10 
                                                                    (ite (= o41 1)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch10 true)
                                                                    (and
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (let ((o42 (- (+ 1 (+ 
                                                                    (length
                                                                    1
                                                                    9) 
                                                                    (length
                                                                    1
                                                                    clast1))) 1)))
                                                                    (and
                                                                    (in_range2
                                                                    o42)
                                                                    (=>
                                                                    (not
                                                                    (= 
                                                                    (length1
                                                                    (of_array
                                                                    (concat1
                                                                    (temp___String_Literal_529
                                                                    Tuple0)
                                                                    1
                                                                    9
                                                                    response4
                                                                    1
                                                                    clast1)
                                                                    1
                                                                    o42)) 0))
                                                                    (in_range2
                                                                    (- (+ 1 (+ 
                                                                    (length
                                                                    1
                                                                    o42) 
                                                                    (length
                                                                    1
                                                                    16))) 1))))))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output10) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output10) 1))
                                                                    (= 
                                                                    (let ((temp___363 
                                                                    (name
                                                                    standard_output9)))
                                                                    (let ((temp___361 
                                                                    (name
                                                                    standard_output10)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___361)
                                                                    (first
                                                                    temp___361)
                                                                    (last
                                                                    temp___361)
                                                                    (to_array
                                                                    temp___363)
                                                                    (first
                                                                    temp___363)
                                                                    (last
                                                                    temp___363)))) true))
                                                                    (= 
                                                                    (let ((temp___367 
                                                                    (form
                                                                    standard_output9)))
                                                                    (let ((temp___365 
                                                                    (form
                                                                    standard_output10)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___365)
                                                                    (first
                                                                    temp___365)
                                                                    (last
                                                                    temp___365)
                                                                    (to_array
                                                                    temp___367)
                                                                    (first
                                                                    temp___367)
                                                                    (last
                                                                    temp___367)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output10) 
                                                                    (line_length
                                                                    standard_output9)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output10) 
                                                                    (page_length
                                                                    standard_output9)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output10) true)))
                                                                    (= standard_output10 standard_output9)))))
                                                                    (let ((o41 
                                                                    (status
                                                                    standard_output10)))
                                                                    (and
                                                                    (in_range4
                                                                    o41)
                                                                    (exists 
                                                                    ((spark__branch11 Bool))
                                                                    (and
                                                                    (= spark__branch11 
                                                                    (ite (= o41 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch11 true)
                                                                    (exists 
                                                                    ((standard_output11 us_rep))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_output11) true)
                                                                    (= 
                                                                    (mode
                                                                    standard_output11) 1))
                                                                    (= 
                                                                    (let ((temp___363 
                                                                    (name
                                                                    standard_output10)))
                                                                    (let ((temp___361 
                                                                    (name
                                                                    standard_output11)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___361)
                                                                    (first
                                                                    temp___361)
                                                                    (last
                                                                    temp___361)
                                                                    (to_array
                                                                    temp___363)
                                                                    (first
                                                                    temp___363)
                                                                    (last
                                                                    temp___363)))) true))
                                                                    (= 
                                                                    (let ((temp___367 
                                                                    (form
                                                                    standard_output10)))
                                                                    (let ((temp___365 
                                                                    (form
                                                                    standard_output11)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___365)
                                                                    (first
                                                                    temp___365)
                                                                    (last
                                                                    temp___365)
                                                                    (to_array
                                                                    temp___367)
                                                                    (first
                                                                    temp___367)
                                                                    (last
                                                                    temp___367)))) true))
                                                                    (= 
                                                                    (line_length
                                                                    standard_output11) 
                                                                    (line_length
                                                                    standard_output10)))
                                                                    (= 
                                                                    (page_length
                                                                    standard_output11) 
                                                                    (page_length
                                                                    standard_output10)))
                                                                    (= 
                                                                    (is_standard_output
                                                                    standard_output11) true))
                                                                    (and
                                                                    (=
                                                                    (= 
                                                                    (is_writable
                                                                    standard_error3) true)
                                                                    (and
                                                                    (= 
                                                                    (is_open
                                                                    standard_error3) true)
                                                                    (or
                                                                    (= 
                                                                    (mode
                                                                    standard_error3) 1)
                                                                    (= 
                                                                    (mode
                                                                    standard_error3) 2))))
                                                                    (and
                                                                    (in_range4
                                                                    (status
                                                                    standard_error3))
                                                                    (exists 
                                                                    ((standard_input5 us_rep) (destination4 us_rep) (last_of_yes_no2 Int))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    destination4) true))
                                                                    (= 
                                                                    (status
                                                                    standard_error2) 1))
                                                                    (= 
                                                                    (is_writable
                                                                    standard_error2) true))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    standard_error2 
                                                                    standard_error3)
                                                                    (in_range1
                                                                    last_of_yes_no2))
                                                                    (= destination4 destination3))
                                                                    (exists 
                                                                    ((o42 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o42) 4)
                                                                    (exists 
                                                                    ((o43 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o43) 1)
                                                                    (exists 
                                                                    ((standard_input6 us_rep) (last_of_yes_no3 Int) (param__item2 (Array Int character)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (is_readable
                                                                    standard_input6) true)
                                                                    (= 
                                                                    (let ((temp___348 
                                                                    (name
                                                                    standard_input5)))
                                                                    (let ((temp___346 
                                                                    (name
                                                                    standard_input6)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___346)
                                                                    (first
                                                                    temp___346)
                                                                    (last
                                                                    temp___346)
                                                                    (to_array
                                                                    temp___348)
                                                                    (first
                                                                    temp___348)
                                                                    (last
                                                                    temp___348)))) true))
                                                                    (= 
                                                                    (let ((temp___352 
                                                                    (form
                                                                    standard_input5)))
                                                                    (let ((temp___350 
                                                                    (form
                                                                    standard_input6)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___350)
                                                                    (first
                                                                    temp___350)
                                                                    (last
                                                                    temp___350)
                                                                    (to_array
                                                                    temp___352)
                                                                    (first
                                                                    temp___352)
                                                                    (last
                                                                    temp___352)))) true))
                                                                    (= 
                                                                    (is_standard_input
                                                                    standard_input6) true))
                                                                    (ite (= 
                                                                    (status
                                                                    standard_input6) 1)
                                                                    (and
                                                                    (<= (- 
                                                                    (to_rep1
                                                                    o43) 1) last_of_yes_no3)
                                                                    (<= last_of_yes_no3 
                                                                    (to_rep1
                                                                    o42)))
                                                                    (= last_of_yes_no3 0)))
                                                                    (and
                                                                    (dynamic_invariant
                                                                    (of_array
                                                                    param__item2
                                                                    (to_rep1
                                                                    o43)
                                                                    (to_rep1
                                                                    o42))
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (in_range1
                                                                    last_of_yes_no3)))
                                                                    (exists 
                                                                    ((yes_no2 (Array Int character)))
                                                                    (and
                                                                    (= yes_no2 
                                                                    (slide
                                                                    param__item2
                                                                    1
                                                                    1))
                                                                    (let ((o44 
                                                                    (status
                                                                    standard_input6)))
                                                                    (and
                                                                    (in_range4
                                                                    o44)
                                                                    (exists 
                                                                    ((spark__branch12 Bool))
                                                                    (and
                                                                    (= spark__branch12 
                                                                    (ite (= o44 1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= spark__branch12 true)
                                                                    (let ((o45 (+ (- last_of_yes_no3 1) 1)))
                                                                    (and
                                                                    (in_range
                                                                    o45)
                                                                    (and
                                                                    (in_range1
                                                                    o45)
                                                                    (and
                                                                    (= o45 
                                                                    length_of_yes_no)
                                                                    (and
                                                                    (in_range1
                                                                    length_of_yes_no)
                                                                    (exists 
                                                                    ((spark__branch13 Bool))
                                                                    (and
                                                                    (= spark__branch13 (and 
                                                                    (ite (< 0 
                                                                    length_of_yes_no)
                                                                    true
                                                                    false) 
                                                                    (ite (<= 
                                                                    length_of_yes_no 3)
                                                                    true
                                                                    false)))
                                                                    (and
                                                                    (= spark__branch13 true)
                                                                    (exists 
                                                                    ((o46 Bool))
                                                                    (and
                                                                    (ite (< 
                                                                    length_of_yes_no 3)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 last_of_yes_no3)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 4))
                                                                    (and
                                                                    (<= 1 last_of_yes_no3)
                                                                    (<= last_of_yes_no3 4))))
                                                                    (let ((o47 
                                                                    (of_array
                                                                    yes_no2
                                                                    1
                                                                    last_of_yes_no3)))
                                                                    (let ((temp___578 
                                                                    (to_upper1
                                                                    o47)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant
                                                                    temp___578
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (first
                                                                    temp___578) 1)
                                                                    (= 
                                                                    (length1
                                                                    temp___578) 
                                                                    (length1
                                                                    o47)))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    temp___578) j)
                                                                    (<= j 
                                                                    (last
                                                                    temp___578)))
                                                                    (= 
                                                                    (to_rep
                                                                    (select 
                                                                    (to_array
                                                                    temp___578) j)) 
                                                                    (to_upper
                                                                    (to_rep
                                                                    (select yes_no2 (+ 1 (- j 1))))))))))
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 2))
                                                                    (and
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (<= 
                                                                    length_of_yes_no 2))))
                                                                    (= o46 
                                                                    (bool_eq
                                                                    no
                                                                    1
                                                                    length_of_yes_no
                                                                    (to_array
                                                                    temp___578)
                                                                    (first
                                                                    temp___578)
                                                                    (last
                                                                    temp___578))))))))
                                                                    (= o46 false))
                                                                    (exists 
                                                                    ((spark__branch14 Bool))
                                                                    (and
                                                                    (= spark__branch14 o46)
                                                                    (and
                                                                    (not
                                                                    (= spark__branch14 true))
                                                                    (and
                                                                    (=>
                                                                    (<= 1 last_of_yes_no3)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 4))
                                                                    (and
                                                                    (<= 1 last_of_yes_no3)
                                                                    (<= last_of_yes_no3 4))))
                                                                    (let ((o47 
                                                                    (of_array
                                                                    yes_no2
                                                                    1
                                                                    last_of_yes_no3)))
                                                                    (let ((temp___555 
                                                                    (to_upper1
                                                                    o47)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant
                                                                    temp___555
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (first
                                                                    temp___555) 1)
                                                                    (= 
                                                                    (length1
                                                                    temp___555) 
                                                                    (length1
                                                                    o47)))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    temp___555) j)
                                                                    (<= j 
                                                                    (last
                                                                    temp___555)))
                                                                    (= 
                                                                    (to_rep
                                                                    (select 
                                                                    (to_array
                                                                    temp___555) j)) 
                                                                    (to_upper
                                                                    (to_rep
                                                                    (select yes_no2 (+ 1 (- j 1))))))))))
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 3))
                                                                    (and
                                                                    (<= 1 
                                                                    length_of_yes_no)
                                                                    (<= 
                                                                    length_of_yes_no 3))))
                                                                    (exists 
                                                                    ((spark__branch15 Bool))
                                                                    (and
                                                                    (= spark__branch15 
                                                                    (bool_eq
                                                                    yes
                                                                    1
                                                                    length_of_yes_no
                                                                    (to_array
                                                                    temp___555)
                                                                    (first
                                                                    temp___555)
                                                                    (last
                                                                    temp___555)))
                                                                    (and
                                                                    (= spark__branch15 true)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 
                                                                    clast1)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 512))
                                                                    (and
                                                                    (<= 1 
                                                                    clast1)
                                                                    (<= 
                                                                    clast1 512))))
                                                                    (and
                                                                    (ite (= 
                                                                    (status
                                                                    destination1) 1)
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (mode
                                                                    destination1) 1)
                                                                    (= 
                                                                    (let ((temp___357 
                                                                    (name
                                                                    destination1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___357)
                                                                    (first
                                                                    temp___357)
                                                                    (last
                                                                    temp___357)
                                                                    response4
                                                                    1
                                                                    clast1)) true))
                                                                    (= 
                                                                    (let ((temp___359 
                                                                    (form
                                                                    destination1)))
                                                                    (bool_eq
                                                                    (to_array
                                                                    temp___359)
                                                                    (first
                                                                    temp___359)
                                                                    (last
                                                                    temp___359)
                                                                    (temp___String_Literal_560
                                                                    Tuple0)
                                                                    1
                                                                    0)) true))
                                                                    (= 
                                                                    (is_open
                                                                    destination1) true))
                                                                    (= 
                                                                    (line_length
                                                                    destination1) 0))
                                                                    (= 
                                                                    (page_length
                                                                    destination1) 0))
                                                                    (not
                                                                    (= 
                                                                    (is_standard_file
                                                                    destination1) true)))
                                                                    (not
                                                                    (= 
                                                                    (is_open
                                                                    destination1) true)))
                                                                    (let ((o48 
                                                                    (status
                                                                    destination1)))
                                                                    (and
                                                                    (in_range4
                                                                    o48)
                                                                    (and
                                                                    (= 
                                                                    spark__branch3 
                                                                    (ite (= o48 1)
                                                                    true
                                                                    false))
                                                                    (= 
                                                                    spark__branch3 true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused20 () us_rep
  source3)

;; "o"
(define-fun o39 () Bool
  (end_of_file source3))

;; "end_of_file'result'unused"
(define-fun end_of_fileqtresultqtunused () Bool
  o39)

;; "H"
(assert (not (= o39 true)))

;; "temp___loop_entry_649'unused"
(define-fun temp___loop_entry_649qtunused () Bool
  count_limit_reached)

;; "bool__content'result'unused"
(define-fun bool__contentqtresultqtunused2 () Bool
  count_limit_reached)

;; "temp___loop_entry_648'unused"
(define-fun temp___loop_entry_648qtunused () Int
  count1)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused5 () Int
  count1)

;; "o"
(define-fun o40 () us_split_fields
  (us_split_fieldsqtmk c__split_fields))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused () us_split_fields
  o40)

;; "o"
(define-fun o41 () us_split_discrs
  (us_split_discrsqtmk c__split_discrs))

;; "__split_discrs__content'result'unused"
(define-fun us_split_discrs__contentqtresultqtunused () us_split_discrs
  o41)

;; "temp___loop_entry_647'unused"
(define-fun temp___loop_entry_647qtunused () us_rep1
  (us_repqtmk o41 o40))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused () us_rep1
  (us_repqtmk o41 o40))

;; "temp___loop_entry_646'unused"
(define-fun temp___loop_entry_646qtunused () us_rep
  destination1)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused21 () us_rep
  destination1)

;; "temp___loop_entry_645'unused"
(define-fun temp___loop_entry_645qtunused () us_rep
  source3)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused22 () us_rep
  source3)

;; "temp___loop_entry_644'unused"
(define-fun temp___loop_entry_644qtunused () us_rep
  standard_error2)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused23 () us_rep
  standard_error2)

;; "temp___loop_entry_643'unused"
(define-fun temp___loop_entry_643qtunused () us_rep
  standard_output5)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused24 () us_rep
  standard_output5)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused25 () us_rep
  destination1)

;; "o"
(define-fun o42 () Bool
  (is_standard_file destination1))

;; "Ensures"
(assert
  (=
    (= o42 true)
    (or
      (or
        (= (is_standard_input destination1) true)
        (= (is_standard_output destination1) true))
      (= (is_standard_error destination1) true))))

;; "is_standard_file'result'unused"
(define-fun is_standard_fileqtresultqtunused1 () Bool
  o42)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused26 () us_rep
  source3)

;; "o"
(define-fun o43 () Bool
  (is_standard_file source3))

;; "Ensures"
(assert
  (=
    (= o43 true)
    (or
      (or
        (= (is_standard_input source3) true)
        (= (is_standard_output source3) true))
      (= (is_standard_error source3) true))))

;; "is_standard_file'result'unused"
(define-fun is_standard_fileqtresultqtunused2 () Bool
  o43)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused27 () us_rep
  destination1)

;; "o"
(define-fun o44 () Bool
  (is_writable destination1))

;; "Ensures"
(assert
  (=
    (= o44 true)
    (and
      (= (is_open destination1) true)
      (or (= (mode destination1) 1) (= (mode destination1) 2)))))

;; "is_writable'result'unused"
(define-fun is_writableqtresultqtunused2 () Bool
  o44)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused28 () us_rep
  source3)

;; "o"
(define-fun o45 () Bool
  (is_readable source3))

;; "Ensures"
(assert
  (= (= o45 true) (and (= (is_open source3) true) (= (mode source3) 0))))

;; "is_readable'result'unused"
(define-fun is_readableqtresultqtunused1 () Bool
  o45)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused29 () us_rep
  destination1)

;; "o"
(define-fun o46 () Bool
  (is_open destination1))

;; "is_open'result'unused"
(define-fun is_openqtresultqtunused3 () Bool
  o46)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused30 () us_rep
  source3)

;; "o"
(define-fun o47 () Bool
  (is_open source3))

;; "is_open'result'unused"
(define-fun is_openqtresultqtunused4 () Bool
  o47)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused31 () us_rep
  standard_error2)

;; "o"
(define-fun o48 () Bool
  (is_writable standard_error2))

;; "Ensures"
(assert
  (=
    (= o48 true)
    (and
      (= (is_open standard_error2) true)
      (or (= (mode standard_error2) 1) (= (mode standard_error2) 2)))))

;; "is_writable'result'unused"
(define-fun is_writableqtresultqtunused3 () Bool
  o48)

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused32 () us_rep
  standard_error2)

;; "o"
(define-fun o49 () Int
  (status standard_error2))

;; "Ensures"
(assert (in_range4 o49))

;; "status'result'unused"
(define-fun statusqtresultqtunused4 () Int
  o49)

;; "o"
(define-fun o50 () Bool
  (ite (= o49 1) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused4 () Bool
  o50)

;; "o"
(define-fun o51 () Bool
  (and o50 o48))

;; "andb'result'unused"
(define-fun andbqtresultqtunused7 () Bool
  o51)

;; "o"
(define-fun o52 () Bool
  (and o51 o47))

;; "andb'result'unused"
(define-fun andbqtresultqtunused8 () Bool
  o52)

;; "o"
(define-fun o53 () Bool
  (and o52 o46))

;; "andb'result'unused"
(define-fun andbqtresultqtunused9 () Bool
  o53)

;; "o"
(define-fun o54 () Bool
  (and o53 o45))

;; "andb'result'unused"
(define-fun andbqtresultqtunused10 () Bool
  o54)

;; "o"
(define-fun o55 () Bool
  (and o54 o44))

;; "andb'result'unused"
(define-fun andbqtresultqtunused11 () Bool
  o55)

;; "o"
(define-fun o56 () Bool
  (and o55 (ite (= o43 true) false true)))

;; "andb'result'unused"
(define-fun andbqtresultqtunused12 () Bool
  o56)

;; "andb'result'unused"
(define-fun andbqtresultqtunused13 () Bool
  (and o56 (ite (= o42 true) false true)))

(declare-const standard_output9 us_rep)

(declare-const standard_error4 us_rep)

(declare-const source4 us_rep)

(declare-const destination3 us_rep)

(declare-const count2 Int)

(declare-const count_limit_reached1 Bool)

(declare-const c__split_fields1 character)

(declare-const c__split_discrs1 file_status)

;; "c__split_discrs'unused"
(define-fun c__split_discrsqtunused1 () us_split_discrs__ref
  (us_split_discrs__refqtmk (us_split_discrsqtmk c__split_discrs1)))

;; "c__split_fields'unused"
(define-fun c__split_fieldsqtunused1 () us_split_fields__ref
  (us_split_fields__refqtmk (us_split_fieldsqtmk c__split_fields1)))

;; "count_limit_reached'unused"
(define-fun count_limit_reachedqtunused1 () bool__ref
  (bool__refqtmk count_limit_reached1))

;; "count'unused"
(define-fun countqtunused2 () int__ref
  (int__refqtmk count2))

;; "destination"
(define-fun destination4 () file_type__ref
  (file_type__refqtmk destination3))

;; "source'unused"
(define-fun sourceqtunused4 () file_type__ref
  (file_type__refqtmk source4))

;; "standard_error"
(define-fun standard_error5 () file_type__ref
  (file_type__refqtmk standard_error4))

;; "standard_output"
(define-fun standard_output10 () file_type__ref
  (file_type__refqtmk standard_output9))

;; "LoopInvariant"
(assert
  (and
    (and
      (and
        (and
          (and
            (and
              (and
                (= (status standard_error4) 1)
                (= (is_writable standard_error4) true))
              (= (is_open source4) true))
            (= (is_open destination3) true))
          (= (is_readable source4) true))
        (= (is_writable destination3) true))
      (not (= (is_standard_file source4) true)))
    (not (= (is_standard_file destination3) true))))

;; "Assume"
(assert
  (= (and (ite (and
                 (and
                   (= standard_output9 standard_output5)
                   (= standard_error4 standard_error2))
                 (in_range5 count2))
            true
            false) (ite (not (= (end_of_file source4) true)) true false)) true))

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused33 () us_rep
  source4)

;; "o"
(define-fun o57 () us_split_fields
  (us_split_fieldsqtmk c__split_fields1))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused1 () us_split_fields
  o57)

;; "o"
(define-fun o58 () us_split_discrs
  (us_split_discrsqtmk c__split_discrs1))

;; "__split_discrs__content'result'unused"
(define-fun us_split_discrs__contentqtresultqtunused1 () us_split_discrs
  o58)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused1 () us_rep1
  (us_repqtmk o58 o57))

;; "param__file'unused"
(define-fun param__fileqtunused () file_type__ref
  (file_type__refqtmk source4))

(declare-const source5 us_rep)

(declare-const c__split_fields2 character)

(declare-const c__split_discrs2 file_status)

;; "c__split_discrs'unused"
(define-fun c__split_discrsqtunused2 () us_split_discrs__ref
  (us_split_discrs__refqtmk (us_split_discrsqtmk c__split_discrs2)))

;; "c__split_fields'unused"
(define-fun c__split_fieldsqtunused2 () us_split_fields__ref
  (us_split_fields__refqtmk (us_split_fieldsqtmk c__split_fields2)))

;; "source'unused"
(define-fun sourceqtunused5 () file_type__ref
  (file_type__refqtmk source5))

;; "H"
(assert (= (is_readable source5) true))

;; "H"
(assert
  (= (let ((temp___378 (name source4)))
       (let ((temp___376 (name source5)))
         (bool_eq
           (to_array temp___376)
           (first temp___376)
           (last temp___376)
           (to_array temp___378)
           (first temp___378)
           (last temp___378)))) true))

;; "H"
(assert
  (= (let ((temp___382 (form source4)))
       (let ((temp___380 (form source5)))
         (bool_eq
           (to_array temp___380)
           (first temp___380)
           (last temp___380)
           (to_array temp___382)
           (first temp___382)
           (last temp___382)))) true))

;; "H"
(assert
  (= (= (is_standard_file source5) true) (= (is_standard_file source4) true)))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert true)

;; "Assume"
(assert
  (=> (= c__attr__constrained true) (= c__split_discrs2 c__split_discrs1)))

;; "o"
(define-fun o59 () us_split_fields
  (us_split_fieldsqtmk c__split_fields2))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused2 () us_split_fields
  o59)

;; "o"
(define-fun o60 () us_split_discrs
  (us_split_discrsqtmk c__split_discrs2))

;; "__split_discrs__content'result'unused"
(define-fun us_split_discrs__contentqtresultqtunused2 () us_split_discrs
  o60)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused2 () us_rep1
  (us_repqtmk o60 o59))

;; "__split_discrs'result'unused"
(define-fun us_split_discrsqtresultqtunused () us_split_discrs
  o60)

;; "rec__ada___spark__text_io__character_result__status'result'unused"
(define-fun rec__ada___spark__text_io__character_result__statusqtresultqtunused 
  () file_status
  c__split_discrs2)

(declare-const o61 Int)

;; "Ensures"
(assert (= (to_rep2 c__split_discrs2) o61))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused () Int
  o61)

;; "o"
(define-fun o62 () Bool
  (ite (= o61 1) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused5 () Bool
  o62)

(declare-const spark__branch5 Bool)

;; "spark__branch'unused"
(define-fun spark__branchqtunused4 () bool__ref
  (bool__refqtmk spark__branch5))

;; "H"
(assert (= spark__branch5 o62))

;; "bool__content'result'unused"
(define-fun bool__contentqtresultqtunused3 () Bool
  spark__branch5)

;; "H"
(assert (= spark__branch5 true))

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused34 () us_rep
  destination3)

;; "o"
(define-fun o63 () Int
  (status destination3))

;; "Ensures"
(assert (in_range4 o63))

;; "status'result'unused"
(define-fun statusqtresultqtunused5 () Int
  o63)

;; "o"
(define-fun o64 () Bool
  (ite (= o63 1) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused6 () Bool
  o64)

(declare-const spark__branch6 Bool)

;; "spark__branch'unused"
(define-fun spark__branchqtunused5 () bool__ref
  (bool__refqtmk spark__branch6))

;; "H"
(assert (= spark__branch6 o64))

;; "bool__content'result'unused"
(define-fun bool__contentqtresultqtunused4 () Bool
  spark__branch6)

;; "H"
(assert (not (= spark__branch6 true)))

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused35 () us_rep
  standard_output9)

;; "o"
(define-fun o65 () Int
  (status standard_output9))

;; "Ensures"
(assert (in_range4 o65))

;; "status'result'unused"
(define-fun statusqtresultqtunused6 () Int
  o65)

;; "o"
(define-fun o66 () Bool
  (ite (= o65 1) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused7 () Bool
  o66)

(declare-const spark__branch7 Bool)

;; "spark__branch'unused"
(define-fun spark__branchqtunused6 () bool__ref
  (bool__refqtmk spark__branch7))

;; "H"
(assert (= spark__branch7 o66))

;; "bool__content'result'unused"
(define-fun bool__contentqtresultqtunused5 () Bool
  spark__branch7)

;; "H"
(assert (= spark__branch7 true))

;; "file_type__content'result'unused"
(define-fun file_type__contentqtresultqtunused36 () us_rep
  destination3)

;; "temp___627"
(define-fun temp___627 () us_t
  (name destination3))

;; "Ensures"
(assert (dynamic_invariant temp___627 true false true true))

;; "name'result'unused"
(define-fun nameqtresultqtunused () us_t
  temp___627)

;; "temp___626"
(define-fun temp___626 () (Array Int character)
  (temp___String_Literal_625 Tuple0))

;; "temp___String_Literal_625'result'unused"
(define-fun temp___String_Literal_625qtresultqtunused () (Array Int character)
  temp___626)

;; "o"
(define-fun o67 () Int
  (last temp___627))

;; "last'result'unused"
(define-fun lastqtresultqtunused4 () Int
  o67)

;; "o"
(define-fun o68 () Int
  (first temp___627))

;; "first'result'unused"
(define-fun firstqtresultqtunused6 () Int
  o68)

;; "o"
(define-fun o69 () Int
  (length o68 o67))

;; "length'result'unused"
(define-fun lengthqtresultqtunused () Int
  o69)

;; "o"
(define-fun o70 () Int
  (length 1 51))

;; "length'result'unused"
(define-fun lengthqtresultqtunused1 () Int
  o70)

;; "o"
(define-fun o71 () Int
  (+ o70 o69))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused () Int
  o71)

;; "o"
(define-fun o72 () Int
  (+ 1 o71))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused1 () Int
  o72)

;; "o"
(define-fun o73 () Int
  (- o72 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused () Int
  o73)

;; Goal "def'vc"
;; File "copy.adb", line 32, characters 0-0
(assert
  (not (<= o73 2147483647)))

(check-sat)
