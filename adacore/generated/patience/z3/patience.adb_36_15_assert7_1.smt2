;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

(declare-sort cardindex 0)

;; "cardindex'int"
(declare-fun cardindexqtint (cardindex) Int)

;; "cardindex'axiom"
(assert
  (forall ((i cardindex))
    (and (<= (- 1) (cardindexqtint i)) (<= (cardindexqtint i) 100))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= (- 1) x) (<= x 100)))

;; "to_rep"
(define-fun to_rep ((x cardindex)) Int
  (cardindexqtint x))

;; "of_rep"
(declare-fun of_rep (Int) cardindex)

;; "inversion_axiom"
(assert
  (forall ((x cardindex))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x cardindex)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-sort card1 0)

;; "card'int"
(declare-fun cardqtint (card1) Int)

;; "card'axiom"
(assert
  (forall ((i card1)) (and (<= 1 (cardqtint i)) (<= (cardqtint i) 52))))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 1 x) (<= x 52)))

;; "to_rep"
(define-fun to_rep1 ((x card1)) Int
  (cardqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) card1)

;; "inversion_axiom"
(assert
  (forall ((x card1))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x card1)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__patience__state__numelts cardindex)(rec__patience__state__values (Array Int card1))(rec__patience__state__numstacks cardindex)(rec__patience__state__stacksizes (Array Int cardindex))(rec__patience__state__stacks (Array Int (Array Int cardindex)))(rec__patience__state__posstack (Array Int cardindex))(rec__patience__state__posheight (Array Int cardindex))(rec__patience__state__preds (Array Int cardindex))))))

(declare-datatypes ()
  ((us_split_fields__ref
   (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const patience__state__numelts__first__bit Int)

(declare-const patience__state__numelts__last__bit Int)

(declare-const patience__state__numelts__position Int)

;; "patience__state__numelts__first__bit_axiom"
(assert (<= 0 patience__state__numelts__first__bit))

;; "patience__state__numelts__last__bit_axiom"
(assert
  (< patience__state__numelts__first__bit patience__state__numelts__last__bit))

;; "patience__state__numelts__position_axiom"
(assert (<= 0 patience__state__numelts__position))

(declare-const patience__state__values__first__bit Int)

(declare-const patience__state__values__last__bit Int)

(declare-const patience__state__values__position Int)

;; "patience__state__values__first__bit_axiom"
(assert (<= 0 patience__state__values__first__bit))

;; "patience__state__values__last__bit_axiom"
(assert
  (< patience__state__values__first__bit patience__state__values__last__bit))

;; "patience__state__values__position_axiom"
(assert (<= 0 patience__state__values__position))

(declare-const patience__state__numstacks__first__bit Int)

(declare-const patience__state__numstacks__last__bit Int)

(declare-const patience__state__numstacks__position Int)

;; "patience__state__numstacks__first__bit_axiom"
(assert (<= 0 patience__state__numstacks__first__bit))

;; "patience__state__numstacks__last__bit_axiom"
(assert
  (< patience__state__numstacks__first__bit patience__state__numstacks__last__bit))

;; "patience__state__numstacks__position_axiom"
(assert (<= 0 patience__state__numstacks__position))

(declare-const patience__state__stacksizes__first__bit Int)

(declare-const patience__state__stacksizes__last__bit Int)

(declare-const patience__state__stacksizes__position Int)

;; "patience__state__stacksizes__first__bit_axiom"
(assert (<= 0 patience__state__stacksizes__first__bit))

;; "patience__state__stacksizes__last__bit_axiom"
(assert
  (< patience__state__stacksizes__first__bit patience__state__stacksizes__last__bit))

;; "patience__state__stacksizes__position_axiom"
(assert (<= 0 patience__state__stacksizes__position))

(declare-const patience__state__stacks__first__bit Int)

(declare-const patience__state__stacks__last__bit Int)

(declare-const patience__state__stacks__position Int)

;; "patience__state__stacks__first__bit_axiom"
(assert (<= 0 patience__state__stacks__first__bit))

;; "patience__state__stacks__last__bit_axiom"
(assert
  (< patience__state__stacks__first__bit patience__state__stacks__last__bit))

;; "patience__state__stacks__position_axiom"
(assert (<= 0 patience__state__stacks__position))

(declare-const patience__state__posstack__first__bit Int)

(declare-const patience__state__posstack__last__bit Int)

(declare-const patience__state__posstack__position Int)

;; "patience__state__posstack__first__bit_axiom"
(assert (<= 0 patience__state__posstack__first__bit))

;; "patience__state__posstack__last__bit_axiom"
(assert
  (< patience__state__posstack__first__bit patience__state__posstack__last__bit))

;; "patience__state__posstack__position_axiom"
(assert (<= 0 patience__state__posstack__position))

(declare-const patience__state__posheight__first__bit Int)

(declare-const patience__state__posheight__last__bit Int)

(declare-const patience__state__posheight__position Int)

;; "patience__state__posheight__first__bit_axiom"
(assert (<= 0 patience__state__posheight__first__bit))

;; "patience__state__posheight__last__bit_axiom"
(assert
  (< patience__state__posheight__first__bit patience__state__posheight__last__bit))

;; "patience__state__posheight__position_axiom"
(assert (<= 0 patience__state__posheight__position))

(declare-const patience__state__preds__first__bit Int)

(declare-const patience__state__preds__last__bit Int)

(declare-const patience__state__preds__position Int)

;; "patience__state__preds__first__bit_axiom"
(assert (<= 0 patience__state__preds__first__bit))

;; "patience__state__preds__last__bit_axiom"
(assert
  (< patience__state__preds__first__bit patience__state__preds__last__bit))

;; "patience__state__preds__position_axiom"
(assert (<= 0 patience__state__preds__position))

(declare-const dummy us_rep)

;; "inv"
(define-fun inv ((param__s us_rep)) Bool
  (and (and (and (and (and (and (and (and (and (<= 0 (to_rep
                                                       (rec__patience__state__numstacks
                                                         (us_split_fields1
                                                           param__s)))) (<= 
  (to_rep
    (rec__patience__state__numstacks (us_split_fields1 param__s))) (to_rep
                                                                    (rec__patience__state__numelts
                                                                    (us_split_fields1
                                                                    param__s))))) (<= 
  (to_rep
    (rec__patience__state__numelts (us_split_fields1 param__s))) 100)) (or (= 
  (to_rep
    (rec__patience__state__numelts (us_split_fields1 param__s))) 0) (> 
  (to_rep
    (rec__patience__state__numstacks (us_split_fields1 param__s))) 0))) 
  (ite (forall ((i Int))
         (=>
           (and
             (<= 0 i)
             (<= i (- (to_rep
                        (rec__patience__state__numstacks
                          (us_split_fields1 param__s))) 1)))
           (and
             (and
               (<= 1 (to_rep
                       (let ((temp___221 (rec__patience__state__stacksizes
                                           (us_split_fields1 param__s))))
                         (select temp___221 i))))
               (<= (to_rep
                     (let ((temp___222 (rec__patience__state__stacksizes
                                         (us_split_fields1 param__s))))
                       (select temp___222 i))) (to_rep
                                                 (rec__patience__state__numelts
                                                   (us_split_fields1
                                                     param__s)))))
             (forall ((j Int))
               (=>
                 (and
                   (<= 0 j)
                   (<= j (- (to_rep
                              (let ((temp___223 (rec__patience__state__stacksizes
                                                  (us_split_fields1 param__s))))
                                (select temp___223 i))) 1)))
                 (and
                   (<= 0 (to_rep
                           (let ((temp___225 (let ((temp___224 (rec__patience__state__stacks
                                                                 (us_split_fields1
                                                                   param__s))))
                                               (select temp___224 i))))
                             (select temp___225 j))))
                   (< (to_rep
                        (let ((temp___227 (let ((temp___226 (rec__patience__state__stacks
                                                              (us_split_fields1
                                                                param__s))))
                                            (select temp___226 i))))
                          (select temp___227 j))) (to_rep
                                                    (rec__patience__state__numelts
                                                      (us_split_fields1
                                                        param__s))))))))))
    true
    false)) (ite (forall ((i Int))
                   (=>
                     (and
                       (<= 0 i)
                       (<= i (- (to_rep
                                  (rec__patience__state__numelts
                                    (us_split_fields1 param__s))) 1)))
                     (and
                       (and
                         (let ((temp___230 (to_rep
                                             (let ((temp___228 (rec__patience__state__posstack
                                                                 (us_split_fields1
                                                                   param__s))))
                                               (select temp___228 i)))))
                           (and
                             (<= 0 temp___230)
                             (<= temp___230 (- (to_rep
                                                 (rec__patience__state__numstacks
                                                   (us_split_fields1
                                                     param__s))) 1))))
                         (let ((temp___233 (to_rep
                                             (let ((temp___231 (rec__patience__state__posheight
                                                                 (us_split_fields1
                                                                   param__s))))
                                               (select temp___231 i)))))
                           (and
                             (<= 0 temp___233)
                             (<= temp___233 (- (to_rep
                                                 (let ((temp___234 (rec__patience__state__stacksizes
                                                                    (us_split_fields1
                                                                    param__s))))
                                                   (select temp___234 
                                                   (to_rep
                                                     (let ((temp___235 
                                                       (rec__patience__state__posstack
                                                         (us_split_fields1
                                                           param__s))))
                                                       (select temp___235 i)))))) 1)))))
                       (= (to_rep
                            (let ((temp___238 (let ((temp___236 (rec__patience__state__stacks
                                                                  (us_split_fields1
                                                                    param__s))))
                                                (select temp___236 (to_rep
                                                                    (let ((temp___237 
                                                                    (rec__patience__state__posstack
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___237 i)))))))
                              (select temp___238 (to_rep
                                                   (let ((temp___239 
                                                     (rec__patience__state__posheight
                                                       (us_split_fields1
                                                         param__s))))
                                                     (select temp___239 i)))))) i))))
              true
              false)) (ite (forall ((ist Int))
                             (=>
                               (and
                                 (<= 0 ist)
                                 (<= ist (- (to_rep
                                              (rec__patience__state__numstacks
                                                (us_split_fields1 param__s))) 1)))
                               (forall ((ip Int))
                                 (=>
                                   (and
                                     (<= 0 ip)
                                     (<= ip (- (to_rep
                                                 (let ((temp___240 (rec__patience__state__stacksizes
                                                                    (us_split_fields1
                                                                    param__s))))
                                                   (select temp___240 ist))) 1)))
                                   (and
                                     (= ist (to_rep
                                              (let ((temp___241 (rec__patience__state__posstack
                                                                  (us_split_fields1
                                                                    param__s))))
                                                (select temp___241 (to_rep
                                                                    (let ((temp___243 
                                                                    (let ((temp___242 
                                                                    (rec__patience__state__stacks
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___242 ist))))
                                                                    (select temp___243 ip)))))))
                                     (= ip (to_rep
                                             (let ((temp___244 (rec__patience__state__posheight
                                                                 (us_split_fields1
                                                                   param__s))))
                                               (select temp___244 (to_rep
                                                                    (let ((temp___246 
                                                                    (let ((temp___245 
                                                                    (rec__patience__state__stacks
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___245 ist))))
                                                                    (select temp___246 ip))))))))))))
                        true
                        false)) (ite (forall ((i Int))
                                       (=>
                                         (and
                                           (<= 0 i)
                                           (<= i (- (to_rep
                                                      (rec__patience__state__numstacks
                                                        (us_split_fields1
                                                          param__s))) 1)))
                                         (forall ((j Int))
                                           (=>
                                             (and
                                               (<= 0 j)
                                               (<= j (- (to_rep
                                                          (let ((temp___247 
                                                            (rec__patience__state__stacksizes
                                                              (us_split_fields1
                                                                param__s))))
                                                            (select temp___247 i))) 2)))
                                             (forall ((k Int))
                                               (=>
                                                 (and
                                                   (<= (+ j 1) k)
                                                   (<= k (- (to_rep
                                                              (let ((temp___248 
                                                                (rec__patience__state__stacksizes
                                                                  (us_split_fields1
                                                                    param__s))))
                                                                (select temp___248 i))) 1)))
                                                 (< (to_rep
                                                      (let ((temp___250 
                                                        (let ((temp___249 
                                                          (rec__patience__state__stacks
                                                            (us_split_fields1
                                                              param__s))))
                                                          (select temp___249 i))))
                                                        (select temp___250 j))) 
                                                 (to_rep
                                                   (let ((temp___252 
                                                     (let ((temp___251 
                                                       (rec__patience__state__stacks
                                                         (us_split_fields1
                                                           param__s))))
                                                       (select temp___251 i))))
                                                     (select temp___252 k))))))))))
                                  true
                                  false)) (ite (forall ((i Int))
                                                 (=>
                                                   (and
                                                     (<= 0 i)
                                                     (<= i (- (to_rep
                                                                (rec__patience__state__numstacks
                                                                  (us_split_fields1
                                                                    param__s))) 1)))
                                                   (forall ((j Int))
                                                     (=>
                                                       (and
                                                         (<= 0 j)
                                                         (<= j (- (to_rep
                                                                    (let ((temp___253 
                                                                    (rec__patience__state__stacksizes
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___253 i))) 2)))
                                                       (forall ((k Int))
                                                         (=>
                                                           (and
                                                             (<= (+ j 1) k)
                                                             (<= k (- 
                                                             (to_rep
                                                               (let ((temp___254 
                                                                 (rec__patience__state__stacksizes
                                                                   (us_split_fields1
                                                                    param__s))))
                                                                 (select temp___254 i))) 1)))
                                                           (<= (to_rep1
                                                                 (let ((temp___258 
                                                                   (rec__patience__state__values
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                   (select temp___258 
                                                                   (to_rep
                                                                    (let ((temp___260 
                                                                    (let ((temp___259 
                                                                    (rec__patience__state__stacks
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___259 i))))
                                                                    (select temp___260 k)))))) 
                                                           (to_rep1
                                                             (let ((temp___255 
                                                               (rec__patience__state__values
                                                                 (us_split_fields1
                                                                   param__s))))
                                                               (select temp___255 
                                                               (to_rep
                                                                 (let ((temp___257 
                                                                   (let ((temp___256 
                                                                    (rec__patience__state__stacks
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___256 i))))
                                                                   (select temp___257 j)))))))))))))
                                            true
                                            false)) (ite (forall ((i Int))
                                                           (=>
                                                             (and
                                                               (<= 0 i)
                                                               (<= i (- 
                                                               (to_rep
                                                                 (rec__patience__state__numelts
                                                                   (us_split_fields1
                                                                    param__s))) 1)))
                                                             (and
                                                               (and
                                                                 (let ((temp___263 
                                                                   (to_rep
                                                                    (let ((temp___261 
                                                                    (rec__patience__state__preds
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___261 i)))))
                                                                   (and
                                                                    (<= (- 1) temp___263)
                                                                    (<= temp___263 (- 
                                                                    (to_rep
                                                                    (rec__patience__state__numelts
                                                                    (us_split_fields1
                                                                    param__s))) 1))))
                                                                 (< (to_rep
                                                                    (let ((temp___264 
                                                                    (rec__patience__state__preds
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___264 i))) i))
                                                               (ite (< 
                                                                 (to_rep
                                                                   (let ((temp___273 
                                                                    (rec__patience__state__preds
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___273 i))) 0)
                                                                 (= (to_rep
                                                                    (let ((temp___265 
                                                                    (rec__patience__state__posstack
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___265 i))) 0)
                                                                 (and
                                                                   (and
                                                                    (< 
                                                                    (to_rep1
                                                                    (let ((temp___266 
                                                                    (rec__patience__state__values
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___266 
                                                                    (to_rep
                                                                    (let ((temp___267 
                                                                    (rec__patience__state__preds
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___267 i)))))) 
                                                                    (to_rep1
                                                                    (let ((temp___268 
                                                                    (rec__patience__state__values
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___268 i))))
                                                                    (< 0 
                                                                    (to_rep
                                                                    (let ((temp___269 
                                                                    (rec__patience__state__posstack
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___269 i)))))
                                                                   (= 
                                                                   (to_rep
                                                                    (let ((temp___270 
                                                                    (rec__patience__state__posstack
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___270 
                                                                    (to_rep
                                                                    (let ((temp___271 
                                                                    (rec__patience__state__preds
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___271 i)))))) (- 
                                                                   (to_rep
                                                                    (let ((temp___272 
                                                                    (rec__patience__state__posstack
                                                                    (us_split_fields1
                                                                    param__s))))
                                                                    (select temp___272 i))) 1)))))))
                                                      true
                                                      false)))

(declare-const c Int)

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_332 us_rep) (temp___is_init_328 Bool) (temp___skip_constant_329 Bool) (temp___do_toplevel_330 Bool) (temp___do_typ_inv_331 Bool)) Bool
  true)

(declare-const s__split_fields us_split_fields)

(declare-const idx Int)

(declare-const pred Int)

(declare-const i Int)

(declare-const stackisize Int)

(declare-const topstacki Int)

;; "topstacki'unused"
(define-fun topstackiqtunused () int__ref
  (int__refqtmk topstacki))

;; "stackisize'unused"
(define-fun stackisizeqtunused () int__ref
  (int__refqtmk stackisize))

;; "i'unused"
(define-fun iqtunused () int__ref
  (int__refqtmk i))

;; "pred'unused"
(define-fun predqtunused () int__ref
  (int__refqtmk pred))

;; "idx'unused"
(define-fun idxqtunused () int__ref
  (int__refqtmk idx))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused1 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields))

;; "Assume"
(assert (in_range2 c))

;; "Assume"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields) true false true true))

;; "Assume"
(assert
  (and
    (= (inv (us_repqtmk s__split_fields)) true)
    (< (to_rep (rec__patience__state__numelts s__split_fields)) 100)))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused () us_rep
  (us_repqtmk s__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused () us_split_fields
  s__split_fields)

;; "o"
(define-fun o () cardindex
  (rec__patience__state__numelts s__split_fields))

;; "rec__patience__state__numelts'result'unused"
(define-fun rec__patience__state__numeltsqtresultqtunused () cardindex
  o)

(declare-const temp___old_989 Int)

;; "Ensures"
(assert (= (to_rep o) temp___old_989))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused () Int
  temp___old_989)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused1 () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused1 () us_rep
  (us_repqtmk s__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused1 () us_split_fields
  s__split_fields)

;; "o"
(define-fun o1 () cardindex
  (rec__patience__state__numelts s__split_fields))

;; "rec__patience__state__numelts'result'unused"
(define-fun rec__patience__state__numeltsqtresultqtunused1 () cardindex
  o1)

(declare-const temp___old_988 Int)

;; "Ensures"
(assert (= (to_rep o1) temp___old_988))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused1 () Int
  temp___old_988)

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range idx))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range pred))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range i))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range1 stackisize))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range1 topstacki))

(declare-const pred1 Int)

;; "pred'unused"
(define-fun predqtunused1 () int__ref
  (int__refqtmk pred1))

;; "H"
(assert (= pred1 (- 1)))

(declare-const i1 Int)

;; "i'unused"
(define-fun iqtunused1 () int__ref
  (int__refqtmk i1))

;; "H"
(assert (= i1 0))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused2 () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused2 () us_rep
  (us_repqtmk s__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused2 () us_split_fields
  s__split_fields)

;; "o"
(define-fun o2 () cardindex
  (rec__patience__state__numstacks s__split_fields))

;; "rec__patience__state__numstacks'result'unused"
(define-fun rec__patience__state__numstacksqtresultqtunused () cardindex
  o2)

(declare-const o3 Int)

;; "Ensures"
(assert (= (to_rep o2) o3))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused2 () Int
  o3)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  i1)

;; "infix <'result'unused"
(define-fun infix_lsqtresultqtunused () Bool
  (ite (< i1 o3) true false))

;; "H"
(assert (< i1 o3))

;; "temp___loop_entry_680'unused"
(define-fun temp___loop_entry_680qtunused () Int
  i1)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  i1)

;; "temp___loop_entry_679'unused"
(define-fun temp___loop_entry_679qtunused () Int
  pred1)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused2 () Int
  pred1)

;; "temp___loop_entry_678'unused"
(define-fun temp___loop_entry_678qtunused () Int
  topstacki)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  topstacki)

;; "temp___loop_entry_677'unused"
(define-fun temp___loop_entry_677qtunused () Int
  stackisize)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused4 () Int
  stackisize)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused3 () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused3 () us_rep
  (us_repqtmk s__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused3 () us_split_fields
  s__split_fields)

;; "o"
(define-fun o4 () cardindex
  (rec__patience__state__numstacks s__split_fields))

;; "rec__patience__state__numstacks'result'unused"
(define-fun rec__patience__state__numstacksqtresultqtunused1 () cardindex
  o4)

(declare-const o5 Int)

;; "Ensures"
(assert (= (to_rep o4) o5))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused3 () Int
  o5)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused5 () Int
  i1)

;; "o"
(define-fun o6 () Bool
  (ite (<= i1 o5) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused () Bool
  o6)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused6 () Int
  i1)

;; "o"
(define-fun o7 () Bool
  (ite (<= 0 i1) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused1 () Bool
  o7)

;; "andb'result'unused"
(define-fun andbqtresultqtunused () Bool
  (and o7 o6))

(declare-const pred2 Int)

(declare-const i2 Int)

(declare-const stackisize1 Int)

(declare-const topstacki1 Int)

;; "i'unused"
(define-fun iqtunused2 () int__ref
  (int__refqtmk i2))

;; "pred'unused"
(define-fun predqtunused2 () int__ref
  (int__refqtmk pred2))

;; "LoopInvariant"
(assert
  (and
    (<= 0 i2)
    (<= i2 (to_rep (rec__patience__state__numstacks s__split_fields)))))

;; "LoopInvariant"
(assert
  (ite (= i2 0)
    (= pred2 (- 1))
    (and
      (and
        (and
          (and
            (<= 0 pred2)
            (<= pred2 (- (to_rep
                           (rec__patience__state__numelts s__split_fields)) 1)))
          (= pred2 (to_rep
                     (select (select (rec__patience__state__stacks
                                       s__split_fields) (- i2 1)) (- 
                     (to_rep
                       (select (rec__patience__state__stacksizes
                                 s__split_fields) (- i2 1))) 1)))))
        (< (to_rep1
             (select (rec__patience__state__values s__split_fields) pred2)) 
        c))
      (= (to_rep
           (select (rec__patience__state__posstack s__split_fields) pred2)) (- 
      i2 1)))))

;; "loop_var___35291'unused"
(define-fun loop_var___35291qtunused () Int
  i2)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused7 () Int
  i2)

;; "Assume"
(assert
  (= (and (ite (and
                 (and
                   (and (in_range1 stackisize1) (in_range1 topstacki1))
                   (in_range pred2))
                 (in_range i2))
            true
            false) (ite (< i2 (to_rep
                                (rec__patience__state__numstacks
                                  s__split_fields)))
                     true
                     false)) true))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused4 () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused4 () us_rep
  (us_repqtmk s__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused4 () us_split_fields
  s__split_fields)

;; "temp___642"
(define-fun temp___642 () (Array Int cardindex)
  (rec__patience__state__stacksizes s__split_fields))

;; "rec__patience__state__stacksizes'result'unused"
(define-fun rec__patience__state__stacksizesqtresultqtunused () (Array Int cardindex)
  temp___642)

;; "Assert"
(assert (and (<= 0 i2) (<= i2 99)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused8 () Int
  i2)

;; "o"
(define-fun o8 () cardindex
  (select temp___642 i2))

;; "get'result'unused"
(define-fun getqtresultqtunused () cardindex
  o8)

(declare-const o9 Int)

;; "Ensures"
(assert (= (to_rep o8) o9))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused4 () Int
  o9)

(declare-const stackisize2 Int)

;; "stackisize'unused"
(define-fun stackisizeqtunused1 () int__ref
  (int__refqtmk stackisize2))

;; "H"
(assert (= stackisize2 o9))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused5 () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused5 () us_rep
  (us_repqtmk s__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused5 () us_split_fields
  s__split_fields)

;; "temp___644"
(define-fun temp___644 () (Array Int (Array Int cardindex))
  (rec__patience__state__stacks s__split_fields))

;; "rec__patience__state__stacks'result'unused"
(define-fun rec__patience__state__stacksqtresultqtunused () (Array Int (Array Int cardindex))
  temp___644)

;; "Assert"
(assert (and (<= 0 i2) (<= i2 99)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused9 () Int
  i2)

;; "temp___645"
(define-fun temp___645 () (Array Int cardindex)
  (select temp___644 i2))

;; "get'result'unused"
(define-fun getqtresultqtunused1 () (Array Int cardindex)
  temp___645)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused10 () Int
  stackisize2)

;; "temp___646"
(define-fun temp___646 () Int
  (- stackisize2 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused () Int
  temp___646)

;; "Assert"
(assert (and (<= 0 temp___646) (<= temp___646 99)))

;; "o"
(define-fun o10 () cardindex
  (select temp___645 temp___646))

;; "get'result'unused"
(define-fun getqtresultqtunused2 () cardindex
  o10)

(declare-const o11 Int)

;; "Ensures"
(assert (= (to_rep o10) o11))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused5 () Int
  o11)

(declare-const topstacki2 Int)

;; "topstacki'unused"
(define-fun topstackiqtunused1 () int__ref
  (int__refqtmk topstacki2))

;; "H"
(assert (= topstacki2 o11))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused6 () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused6 () us_rep
  (us_repqtmk s__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused6 () us_split_fields
  s__split_fields)

;; "temp___647"
(define-fun temp___647 () (Array Int card1)
  (rec__patience__state__values s__split_fields))

;; "rec__patience__state__values'result'unused"
(define-fun rec__patience__state__valuesqtresultqtunused () (Array Int card1)
  temp___647)

;; "Assert"
(assert (and (<= 0 topstacki2) (<= topstacki2 99)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused11 () Int
  topstacki2)

;; "o"
(define-fun o12 () card1
  (select temp___647 topstacki2))

;; "get'result'unused"
(define-fun getqtresultqtunused3 () card1
  o12)

(declare-const o13 Int)

;; "Ensures"
(assert (= (to_rep1 o12) o13))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused6 () Int
  o13)

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused2 () Bool
  (ite (<= c o13) true false))

;; "H"
(assert (not (<= c o13)))

;; "Assert"
(assert
  (and
    (<= 0 topstacki2)
    (< topstacki2 (to_rep (rec__patience__state__numelts s__split_fields)))))

;; Goal "def'vc"
;; File "patience.ads", line 122, characters 0-0
(assert
  (not
  (= (to_rep
       (select (rec__patience__state__posheight s__split_fields) topstacki2)) (- 
  stackisize2 1))))

(check-sat)
