;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun __cdiv ((x Int) (y Int)) Int (ite (>= x 0) (div x y) (- (div (- x) y))))
(define-fun __cmod ((x Int) (y Int)) Int (ite (>= x 0) (mod x y) (- (mod (- x) y))))
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

;; "mod"
(define-fun mod1 ((x Int) (y Int)) Int
  (ite (<= 0 y) (mod x y) (- (mod (- x) y))))

;; "min"
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

;; "divides"
(define-fun divides ((param__a Int) (param__b Int)) Bool
  (ite (exists ((c Int))
         (and (and (<= 1 c) (<= c 2147483647)) (= (* param__a c) param__b)))
    true
    false))

(declare-const a Int)

(declare-const b Int)

;; "Assume"
(assert (in_range a))

;; "Assume"
(assert (in_range b))

;; "o"
(define-fun o () Int
  (min a b))

;; "int_min'result'unused"
(define-fun int_minqtresultqtunused () Int
  o)

;; "Ensures"
(assert (in_range o))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused () Int
  o)

(declare-const c Int)

;; "c'unused"
(define-fun cqtunused () int__ref
  (int__refqtmk c))

;; "H"
(assert (= c o))

;; "Assume"
(assert (in_range c))

(declare-const c1 Int)

;; "c'unused"
(define-fun cqtunused1 () int__ref
  (int__refqtmk c1))

(declare-const int__contentqtresultqtunused Int)

;; "H"
(assert (= int__contentqtresultqtunused c))

(declare-const infix_gtqtresultqtunused Bool)

;; "H"
(assert (= infix_gtqtresultqtunused (ite (< 1 c) true false)))

(declare-const temp___loop_entry_171qtunused Int)

(declare-const int__contentqtresultqtunused1 Int)

(declare-const int__contentqtresultqtunused2 Int)

(declare-const o1 Int)

(declare-const mod_qtresultqtunused Int)

(declare-const o2 Bool)

(declare-const infix_eqqtresultqtunused Bool)

(declare-const int__contentqtresultqtunused3 Int)

(declare-const o3 Int)

(declare-const mod_qtresultqtunused1 Int)

(declare-const o4 Bool)

(declare-const infix_eqqtresultqtunused1 Bool)

(declare-const o5 Bool)

(declare-const andbqtresultqtunused Bool)

(declare-const spark__branch Bool)

(declare-const spark__branchqtunused bool__ref)

(declare-const c2 Int)

(declare-const cqtunused2 int__ref)

(declare-const loop_var___1836qtunused Int)

(declare-const int__contentqtresultqtunused4 Int)

(declare-const int__contentqtresultqtunused5 Int)

(declare-const o6 Int)

(declare-const infix_mnqtresultqtunused Int)

(declare-const range_check_qtresultqtunused1 Int)

(declare-const int__contentqtresultqtunused6 Int)

(declare-const infix_gtqtresultqtunused1 Bool)

(declare-const int__contentqtresultqtunused7 Int)

(declare-const o7 Int)

(declare-const mod_qtresultqtunused2 Int)

(declare-const o8 Bool)

(declare-const infix_eqqtresultqtunused2 Bool)

(declare-const int__contentqtresultqtunused8 Int)

(declare-const o9 Int)

(declare-const mod_qtresultqtunused3 Int)

(declare-const o10 Bool)

(declare-const infix_eqqtresultqtunused3 Bool)

(declare-const o11 Bool)

(declare-const andbqtresultqtunused1 Bool)

(declare-const int__contentqtresultqtunused9 Int)

(declare-const infix_gtqtresultqtunused2 Bool)

(declare-const usfqtunused Bool)

(declare-const anyqtresultqtunused Bool)

(declare-const usf Int)

(declare-const anyqtresultqtunused1 Int)

(declare-const xqtunused Int)

(declare-const o12 Int)

(declare-const int_minqtresultqtunused1 Int)

(declare-const o13 Bool)

(declare-const infix_lseqqtresultqtunused Bool)

(declare-const int__contentqtresultqtunused10 Int)

(declare-const o14 Bool)

(declare-const infix_lseqqtresultqtunused1 Bool)

(declare-const andbqtresultqtunused2 Bool)

(declare-const int__contentqtresultqtunused11 Int)

(declare-const o15 Int)

(declare-const mod_qtresultqtunused4 Int)

(declare-const infix_eqqtresultqtunused4 Bool)

(declare-const bool__contentqtresultqtunused Bool)

(declare-const int__contentqtresultqtunused12 Int)

(declare-const int__contentqtresultqtunused13 Int)

;; "H"
(assert
  (ite (< 1 c)
    (and
      (= temp___loop_entry_171qtunused c)
      (and
        (= int__contentqtresultqtunused1 c)
        (and
          (= int__contentqtresultqtunused2 c)
          (and
            (= o1 (mod1 b c))
            (and
              (= mod_qtresultqtunused o1)
              (and
                (= o2 (ite (= o1 0) true false))
                (and
                  (= infix_eqqtresultqtunused o2)
                  (and
                    (= int__contentqtresultqtunused3 c)
                    (and
                      (= o3 (mod1 a c))
                      (and
                        (= mod_qtresultqtunused1 o3)
                        (and
                          (= o4 (ite (= o3 0) true false))
                          (and
                            (= infix_eqqtresultqtunused1 o4)
                            (and
                              (= o5 (and o4 o2))
                              (and
                                (= andbqtresultqtunused o5)
                                (ite (= o5 true)
                                  (= c1 c)
                                  (and
                                    (= spark__branchqtunused (bool__refqtmk
                                                               spark__branch))
                                    (and
                                      (and
                                        (= int__contentqtresultqtunused11 
                                        c)
                                        (and
                                          (= o15 (mod1 a c))
                                          (and
                                            (= mod_qtresultqtunused4 
                                            o15)
                                            (and
                                              (= infix_eqqtresultqtunused4 
                                              (ite (= o15 0)
                                                true
                                                false))
                                              (and
                                                (= spark__branch (ite (= 
                                                                   o15 0)
                                                                   false
                                                                   true))
                                                (and
                                                  (= bool__contentqtresultqtunused 
                                                  spark__branch)
                                                  (ite (= spark__branch true)
                                                    (and
                                                      (= int__contentqtresultqtunused13 
                                                      c)
                                                      (not
                                                        (= (divides c a) true)))
                                                    (and
                                                      (= int__contentqtresultqtunused12 
                                                      c)
                                                      (not
                                                        (= (divides c b) true))))))))))
                                      (and
                                        (and
                                          (= int__contentqtresultqtunused9 
                                          c)
                                          (and
                                            (= infix_gtqtresultqtunused2 
                                            (ite (< 1 c)
                                              true
                                              false))
                                            (=>
                                              (< 1 c)
                                              (and
                                                (and
                                                  (= anyqtresultqtunused1 
                                                  usf)
                                                  (and
                                                    (= xqtunused usf)
                                                    (and
                                                      (= o12 (min a b))
                                                      (and
                                                        (= int_minqtresultqtunused1 
                                                        o12)
                                                        (and
                                                          (= o13 (ite (<= 
                                                                   usf 
                                                                   o12)
                                                                   true
                                                                   false))
                                                          (and
                                                            (= infix_lseqqtresultqtunused 
                                                            o13)
                                                            (and
                                                              (= int__contentqtresultqtunused10 
                                                              c)
                                                              (and
                                                                (= o14 
                                                                (ite (<= 
                                                                  c usf)
                                                                  true
                                                                  false))
                                                                (and
                                                                  (= 
                                                                  infix_lseqqtresultqtunused1 
                                                                  o14)
                                                                  (= 
                                                                  andbqtresultqtunused2 (and 
                                                                  o14 
                                                                  o13)))))))))))
                                                (and
                                                  (= usfqtunused (ite 
                                                                   (forall 
                                                                    ((x Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    c x)
                                                                    (<= x 
                                                                    (min
                                                                    a
                                                                    b)))
                                                                    (not
                                                                    (and
                                                                    (= 
                                                                    (divides
                                                                    x
                                                                    a) true)
                                                                    (= 
                                                                    (divides
                                                                    x
                                                                    b) true)))))
                                                                   true
                                                                   false))
                                                  (= anyqtresultqtunused 
                                                  (ite (forall ((x Int))
                                                         (=>
                                                           (and
                                                             (<= c x)
                                                             (<= x (min a b)))
                                                           (not
                                                             (and
                                                               (= (divides
                                                                    x
                                                                    a) true)
                                                               (= (divides
                                                                    x
                                                                    b) true)))))
                                                    true
                                                    false)))))))
                                        (and
                                          (= cqtunused2 (int__refqtmk c2))
                                          (and
                                            (and
                                              (< 1 c2)
                                              (forall ((x Int))
                                                (=>
                                                  (and
                                                    (<= c2 x)
                                                    (<= x (min a b)))
                                                  (not
                                                    (and
                                                      (= (divides x a) true)
                                                      (= (divides x b) true))))))
                                            (and
                                              (= loop_var___1836qtunused 
                                              c2)
                                              (and
                                                (= int__contentqtresultqtunused4 
                                                c2)
                                                (and
                                                  (in_range c2)
                                                  (and
                                                    (= int__contentqtresultqtunused5 
                                                    c2)
                                                    (and
                                                      (= o6 (- c2 1))
                                                      (and
                                                        (= infix_mnqtresultqtunused 
                                                        o6)
                                                        (and
                                                          (in_range o6)
                                                          (and
                                                            (= range_check_qtresultqtunused1 
                                                            o6)
                                                            (and
                                                              (= c1 o6)
                                                              (and
                                                                (= int__contentqtresultqtunused6 
                                                                c1)
                                                                (and
                                                                  (= 
                                                                  infix_gtqtresultqtunused1 
                                                                  (ite (< 1 
                                                                    c1)
                                                                    true
                                                                    false))
                                                                  (=>
                                                                    (< 1 
                                                                    c1)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused7 
                                                                    c1)
                                                                    (and
                                                                    (= 
                                                                    o7 
                                                                    (mod1
                                                                    b
                                                                    c1))
                                                                    (and
                                                                    (= 
                                                                    mod_qtresultqtunused2 
                                                                    o7)
                                                                    (and
                                                                    (= 
                                                                    o8 
                                                                    (ite (= 
                                                                    o7 0)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused2 
                                                                    o8)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused8 
                                                                    c1)
                                                                    (and
                                                                    (= 
                                                                    o9 
                                                                    (mod1
                                                                    a
                                                                    c1))
                                                                    (and
                                                                    (= 
                                                                    mod_qtresultqtunused3 
                                                                    o9)
                                                                    (and
                                                                    (= 
                                                                    o10 
                                                                    (ite (= 
                                                                    o9 0)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused3 
                                                                    o10)
                                                                    (and
                                                                    (= 
                                                                    o11 (and 
                                                                    o10 
                                                                    o8))
                                                                    (and
                                                                    (= 
                                                                    andbqtresultqtunused1 
                                                                    o11)
                                                                    (= 
                                                                    o11 true)))))))))))))))))))))))))))))))))))))))))))))
    (= c1 c)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused14 () Int
  c1)

;; "o"
(define-fun o16 () Int
  a)

;; "H"
(assert (= (divides c1 o16) true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert true)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused15 () Int
  c1)

;; "o"
(define-fun o17 () Int
  b)

;; "H"
(assert (= (divides c1 o17) true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert true)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused16 () Int
  c1)

(declare-const math_simple_abstract__gcd__result Int)

;; "math_simple_abstract__gcd__result'unused"
(define-fun math_simple_abstract__gcd__resultqtunused () int__ref
  (int__refqtmk math_simple_abstract__gcd__result))

;; "H"
(assert (= math_simple_abstract__gcd__result c1))

;; "result'unused"
(define-fun resultqtunused () Int
  math_simple_abstract__gcd__result)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused17 () Int
  math_simple_abstract__gcd__result)

(declare-const x Int)

;; "H"
(assert (<= (+ math_simple_abstract__gcd__result 1) x))

;; "H"
(assert (<= x (min a b)))

;; Goal "def'vc"
;; File "math_simple_abstract.ads", line 7, characters 0-0
(assert
  (not (not (and (= (divides x a) true) (= (divides x b) true)))))

(check-sat)
