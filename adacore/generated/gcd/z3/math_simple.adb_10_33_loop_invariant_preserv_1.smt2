;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun __cdiv ((x Int) (y Int)) Int (ite (>= x 0) (div x y) (- (div (- x) y))))
(define-fun __cmod ((x Int) (y Int)) Int (ite (>= x 0) (mod x y) (- (mod (- x) y))))
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

;; "mod"
(define-fun mod1 ((x Int) (y Int)) Int
  (ite (<= 0 y) (mod x y) (- (mod (- x) y))))

;; "min"
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

;; "divides"
(define-fun divides ((param__a Int) (param__b Int)) Bool
  (= (mod1 param__b param__a) 0))

(declare-const a Int)

(declare-const b Int)

;; "Assume"
(assert (in_range a))

;; "Assume"
(assert (in_range b))

;; "o"
(define-fun o () Int
  (min a b))

;; "int_min'result'unused"
(define-fun int_minqtresultqtunused () Int
  o)

;; "Ensures"
(assert (in_range o))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused () Int
  o)

(declare-const c Int)

;; "c'unused"
(define-fun cqtunused () int__ref
  (int__refqtmk c))

;; "H"
(assert (= c o))

;; "Assume"
(assert (in_range c))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  c)

;; "infix >'result'unused"
(define-fun infix_gtqtresultqtunused () Bool
  (ite (< 1 c) true false))

;; "H"
(assert (< 1 c))

;; "temp___loop_entry_171'unused"
(define-fun temp___loop_entry_171qtunused () Int
  c)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  c)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused2 () Int
  c)

;; "o"
(define-fun o1 () Int
  (mod1 b c))

;; "mod_'result'unused"
(define-fun mod_qtresultqtunused () Int
  o1)

;; "o"
(define-fun o2 () Bool
  (ite (= o1 0) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused () Bool
  o2)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  c)

;; "o"
(define-fun o3 () Int
  (mod1 a c))

;; "mod_'result'unused"
(define-fun mod_qtresultqtunused1 () Int
  o3)

;; "o"
(define-fun o4 () Bool
  (ite (= o3 0) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused1 () Bool
  o4)

;; "o"
(define-fun o5 () Bool
  (and o4 o2))

;; "andb'result'unused"
(define-fun andbqtresultqtunused () Bool
  o5)

;; "H"
(assert (not (= o5 true)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused4 () Int
  c)

;; "infix >'result'unused"
(define-fun infix_gtqtresultqtunused1 () Bool
  (ite (< 1 c) true false))

(declare-const c1 Int)

;; "c'unused"
(define-fun cqtunused1 () int__ref
  (int__refqtmk c1))

;; "LoopInvariant"
(assert (< 1 c1))

;; "LoopInvariant"
(assert
  (forall ((x Int))
    (=>
      (and (<= c1 x) (<= x (min a b)))
      (not (and (= (divides x a) true) (= (divides x b) true))))))

;; "loop_var___1856'unused"
(define-fun loop_var___1856qtunused () Int
  c1)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused5 () Int
  c1)

;; "Assume"
(assert (in_range c1))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused6 () Int
  c1)

;; "o"
(define-fun o6 () Int
  (- c1 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused () Int
  o6)

;; "Ensures"
(assert (in_range o6))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused1 () Int
  o6)

(declare-const c2 Int)

;; "c'unused"
(define-fun cqtunused2 () int__ref
  (int__refqtmk c2))

;; "H"
(assert (= c2 o6))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused7 () Int
  c2)

;; "infix >'result'unused"
(define-fun infix_gtqtresultqtunused2 () Bool
  (ite (< 1 c2) true false))

;; "H"
(assert (< 1 c2))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused8 () Int
  c2)

;; "o"
(define-fun o7 () Int
  (mod1 b c2))

;; "mod_'result'unused"
(define-fun mod_qtresultqtunused2 () Int
  o7)

;; "o"
(define-fun o8 () Bool
  (ite (= o7 0) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused2 () Bool
  o8)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused9 () Int
  c2)

;; "o"
(define-fun o9 () Int
  (mod1 a c2))

;; "mod_'result'unused"
(define-fun mod_qtresultqtunused3 () Int
  o9)

;; "o"
(define-fun o10 () Bool
  (ite (= o9 0) true false))

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused3 () Bool
  o10)

;; "o"
(define-fun o11 () Bool
  (and o10 o8))

;; "andb'result'unused"
(define-fun andbqtresultqtunused1 () Bool
  o11)

;; "H"
(assert (not (= o11 true)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused10 () Int
  c2)

;; "infix >'result'unused"
(define-fun infix_gtqtresultqtunused3 () Bool
  (ite (< 1 c2) true false))

;; "loop_var_new___1856'unused"
(define-fun loop_var_new___1856qtunused () Int
  c2)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused11 () Int
  c2)

;; "H"
(assert (< c2 c1))

;; "LoopInvariant"
(assert (< 1 c2))

(declare-const x Int)

;; "H"
(assert (<= c2 x))

;; "H"
(assert (<= x (min a b)))

;; Goal "def'vc"
;; File "math_simple.ads", line 5, characters 0-0
(assert
  (not (not (and (= (divides x a) true) (= (divides x b) true)))))

(check-sat)
