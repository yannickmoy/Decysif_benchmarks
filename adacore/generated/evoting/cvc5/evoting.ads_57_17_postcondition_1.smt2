;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0))
  (((Tuple0))))

(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

(declare-sort character 0)

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

(declare-datatypes ((character__init_wrapper 0))
  (((character__init_wrapperqtmk (rec__value character)(us_attr__init Bool)))))

(declare-const dummy character__init_wrapper)

;; "dummy__def"
(assert (= (us_attr__init dummy) false))

;; "to_rep"
(declare-fun to_rep (character) Int)

;; "of_rep"
(declare-fun of_rep (Int) character)

;; "inversion_axiom"
(assert
  (forall ((x character))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

;; "slide"
(declare-fun slide ((Array Int character__init_wrapper)
  Int
  Int) (Array Int character__init_wrapper))

;; "slide_eq"
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((first Int))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; "slide_def"
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

;; "convert"
(declare-fun convert ((Array Int character__init_wrapper)) (Array Int character))

;; "convert__def"
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((temp___106 Int))
      (= (to_rep (of_rep (to_rep (rec__value (select a temp___106))))) 
      (to_rep
        (select (convert a) temp___106))))))

;; "to_rep"
(define-fun to_rep1 ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                 (of_rep1 x))) )))

(declare-datatypes ((t 0))
  (((tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep1 (rec__first (mk f l))) f)
             (= (to_rep1 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

(declare-datatypes ((us_t 0))
  (((us_tqtmk (elts (Array Int character))(rt t)))))

;; "of_array"
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const no_vote_entry (Array Int character))

(declare-const program_phase Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const candidates_filename (Array Int character))

(declare-sort us_rep 0)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const dummy1 us_rep)

;; "is_open"
(declare-fun is_open (us_rep) Bool)

;; "mode"
(declare-fun mode (us_rep) Int)

;; "end_of_file"
(declare-fun end_of_file (us_rep
  us_private
  us_private
  us_private
  us_private
  us_private
  us_private
  us_private) Bool)

;; "length"
(define-fun length ((x Int) (y Int)) Int
  (ite (<= x y) (+ (- y x) 1) 0))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const component__size3 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const component__size4 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "component__size_axiom"
(assert (<= 0 component__size4))

;; "alignment_axiom"
(assert (<= 0 alignment5))

;; "temp___String_Literal_174"
(declare-fun temp___String_Literal_174 (tuple0) (Array Int character))

;; "temp___String_Literal_174__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_174 us_void_param) 1)) 78)
           (= (to_rep (select (temp___String_Literal_174 us_void_param) 2)) 111))
         (and
           (and
             (and
               (= (to_rep
                    (select (temp___String_Literal_174 us_void_param) 3)) 32)
               (= (to_rep
                    (select (temp___String_Literal_174 us_void_param) 4)) 118))
             (= (to_rep (select (temp___String_Literal_174 us_void_param) 5)) 111))
           (and
             (= (to_rep (select (temp___String_Literal_174 us_void_param) 6)) 116)
             (= (to_rep (select (temp___String_Literal_174 us_void_param) 7)) 101)))) :pattern (
    (temp___String_Literal_174
      us_void_param)) )))

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 20)))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const component__size5 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "component__size_axiom"
(assert (<= 0 component__size5))

;; "alignment_axiom"
(assert (<= 0 alignment6))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_257 (Array Int (Array Int character))) (temp___is_init_253 Bool) (temp___skip_constant_254 Bool) (temp___do_toplevel_255 Bool) (temp___do_typ_inv_256 Bool)) Bool
  true)

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const component__size6 Int)

(declare-const alignment7 Int)

;; "value__size_axiom"
(assert (<= 0 value__size7))

;; "object__size_axiom"
(assert (<= 0 object__size7))

;; "component__size_axiom"
(assert (<= 0 component__size6))

;; "alignment_axiom"
(assert (<= 0 alignment7))

;; "temp___String_Literal_189"
(declare-fun temp___String_Literal_189 (tuple0) (Array Int character))

;; "temp___String_Literal_189__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_189 us_void_param) 1)) 99)
           (= (to_rep (select (temp___String_Literal_189 us_void_param) 2)) 97))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 3)) 110)
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 4)) 100))
               (= (to_rep
                    (select (temp___String_Literal_189 us_void_param) 5)) 105))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 6)) 100)
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 7)) 97))
               (= (to_rep
                    (select (temp___String_Literal_189 us_void_param) 8)) 116)))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 9)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 10)) 115))
               (= (to_rep
                    (select (temp___String_Literal_189 us_void_param) 11)) 46))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 12)) 116)
                 (= (to_rep
                      (select (temp___String_Literal_189 us_void_param) 13)) 120))
               (= (to_rep
                    (select (temp___String_Literal_189 us_void_param) 14)) 116))))) :pattern (
    (temp___String_Literal_189
      us_void_param)) )))

;; "default_initial_assumption"
(define-fun default_initial_assumption ((temp___expr_331 us_rep) (temp___skip_top_level_332 Bool)) Bool
  (=>
    (not (= temp___skip_top_level_332 true))
    (not (= (is_open temp___expr_331) true))))

(declare-const value__size8 Int)

(declare-const object__size8 Int)

(declare-const component__size7 Int)

(declare-const alignment8 Int)

;; "value__size_axiom"
(assert (<= 0 value__size8))

;; "object__size_axiom"
(assert (<= 0 object__size8))

;; "component__size_axiom"
(assert (<= 0 component__size7))

;; "alignment_axiom"
(assert (<= 0 alignment8))

;; "temp_____aggregate_def_404"
(declare-fun temp_____aggregate_def_404 ((Array Int character)) (Array Int (Array Int character)))

(declare-const value__size9 Int)

(declare-const object__size9 Int)

(declare-const component__size8 Int)

(declare-const alignment9 Int)

;; "value__size_axiom"
(assert (<= 0 value__size9))

;; "object__size_axiom"
(assert (<= 0 object__size9))

;; "component__size_axiom"
(assert (<= 0 component__size8))

;; "alignment_axiom"
(assert (<= 0 alignment9))

;; "temp_____aggregate_def_409"
(declare-fun temp_____aggregate_def_409 (Int) (Array Int character))

;; "no_vote_entry__def_axiom"
(assert
  (= no_vote_entry (let ((temp___175qtunused (temp___String_Literal_174
                                               Tuple0)))
                     (temp___String_Literal_174 Tuple0))))

;; "candidates_filename__def_axiom"
(assert
  (= candidates_filename (let ((temp___190qtunused (temp___String_Literal_189
                                                     Tuple0)))
                           (temp___String_Literal_189 Tuple0))))

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "is_open__post_axiom"
(assert true)

;; "mode__post_axiom"
(assert
  (forall ((param__file us_rep))
    (! (=> (= (is_open param__file) true) (in_range5 (mode param__file))) :pattern (
    (mode
      param__file)) )))

;; Goal "def'vc"
;; File "evoting.ads", line 51, characters 0-0
(assert
  (not
  (forall ((candidates (Array Int (Array Int character))) (last_candidate Int) (file us_rep) (last Int))
    (=>
      (= (temp___String_Literal_189 Tuple0) candidates_filename)
      (=>
        (= (temp___String_Literal_174 Tuple0) no_vote_entry)
        (=>
          (in_range3 program_phase)
          (=>
            (dynamic_invariant candidates false false true true)
            (=>
              (in_range4 last_candidate)
              (=>
                (= program_phase 0)
                (=>
                  (default_initial_assumption file false)
                  (forall ((current_candidate Int))
                    (=>
                      (= current_candidate 0)
                      (=>
                        (in_range4 current_candidate)
                        (=>
                          (in_range1 last)
                          (forall ((temp___413 (Array Int character)))
                            (=>
                              (and
                                (forall ((temp___412 Int))
                                  (! (=>
                                       (and
                                         (<= 1 temp___412)
                                         (<= temp___412 70))
                                       (=>
                                         (in_range2 32)
                                         (= (to_rep
                                              (select temp___413 temp___412)) 32))) :pattern ((select temp___413 temp___412)) ))
                                (= temp___413 (temp_____aggregate_def_409 32)))
                              (forall ((temp___415 (Array Int (Array Int character))))
                                (=>
                                  (and
                                    (forall ((temp___407 Int))
                                      (! (=>
                                           (and
                                             (<= 0 temp___407)
                                             (<= temp___407 20))
                                           (= (select temp___415 temp___407) temp___413)) :pattern ((select temp___415 temp___407)) ))
                                    (= temp___415 (temp_____aggregate_def_404
                                                    temp___413)))
                                  (forall ((candidates1 (Array Int (Array Int character))))
                                    (=>
                                      (= candidates1 temp___415)
                                      (forall ((usf (Array Int character)))
                                        (=>
                                          (forall ((temp___422 Int))
                                            (ite (and
                                                   (<= 1 temp___422)
                                                   (<= temp___422 7))
                                              (= (select usf temp___422) (select 
                                              no_vote_entry temp___422))
                                              (= (select usf temp___422) (select (select candidates1 0) temp___422))))
                                          (forall ((candidates2 (Array Int (Array Int character))))
                                            (=>
                                              (= candidates2 (store candidates1 0 usf))
                                              (forall ((file_system us_private) (standard_in us_private) (standard_out us_private) (standard_err us_private) (current_in us_private) (current_out us_private) (current_err us_private) (param__file us_rep))
                                                (=>
                                                  (and
                                                    (= (is_open param__file) true)
                                                    (= (mode param__file) 0))
                                                  (forall ((file1 us_rep))
                                                    (=>
                                                      (= file1 param__file)
                                                      (forall ((candidates3 (Array Int (Array Int character))) (current_candidate1 Int))
                                                        (=>
                                                          (ite (= (and 
                                                            (ite (= (end_of_file
                                                                    file1
                                                                    file_system
                                                                    standard_in
                                                                    standard_out
                                                                    standard_err
                                                                    current_in
                                                                    current_out
                                                                    current_err) true)
                                                              false
                                                              true) (ite (< current_candidate 20)
                                                                    true
                                                                    false)) true)
                                                            (let ((o (+ current_candidate 1)))
                                                              (and
                                                                (in_range4 o)
                                                                (exists 
                                                                  ((current_candidate2 Int))
                                                                  (and
                                                                    (= current_candidate2 o)
                                                                    (exists 
                                                                    ((candidates4 (Array Int (Array Int character))) (last1 Int))
                                                                    (and
                                                                    (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= current_candidate1 i)
                                                                    (<= i 20))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j 70))
                                                                    (= 
                                                                    (to_rep
                                                                    (select (select candidates4 i) j)) 32)))))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (in_range4
                                                                    current_candidate1)
                                                                    (in_range1
                                                                    last1))
                                                                    (dynamic_invariant
                                                                    candidates4
                                                                    false
                                                                    true
                                                                    true
                                                                    true))
                                                                    (forall 
                                                                    ((temp___471 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 0 temp___471)
                                                                    (<= temp___471 20))
                                                                    (forall 
                                                                    ((temp___472 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 temp___472)
                                                                    (<= temp___472 70))
                                                                    (=>
                                                                    (< temp___472 1)
                                                                    (= (select (select candidates4 temp___471) temp___472) (select (select candidates2 temp___471) temp___472))))))))
                                                                    (exists 
                                                                    ((o1 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o1) 70)
                                                                    (exists 
                                                                    ((o2 integer))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o2) 1)
                                                                    (exists 
                                                                    ((file_system1 us_private) (standard_in1 us_private) (standard_out1 us_private) (standard_err1 us_private) (current_in1 us_private) (current_out1 us_private) (current_err1 us_private) (param__item (Array Int character__init_wrapper)) (param__last Int))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (ite (< 0 
                                                                    (length
                                                                    (to_rep1
                                                                    o2)
                                                                    (to_rep1
                                                                    o1)))
                                                                    (and
                                                                    (<= (- 
                                                                    (to_rep1
                                                                    o2) 1) param__last)
                                                                    (<= param__last 
                                                                    (to_rep1
                                                                    o1)))
                                                                    (= param__last (- 
                                                                    (to_rep1
                                                                    o2) 1)))
                                                                    (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    (to_rep1
                                                                    o2) i)
                                                                    (<= i param__last))
                                                                    (= 
                                                                    (us_attr__init
                                                                    (select param__item i)) true))))
                                                                    (in_range1
                                                                    param__last))
                                                                    (exists 
                                                                    ((item (Array Int character__init_wrapper)))
                                                                    (and
                                                                    (= item 
                                                                    (slide
                                                                    param__item
                                                                    1
                                                                    1))
                                                                    (exists 
                                                                    ((last2 Int))
                                                                    (and
                                                                    (= last2 param__last)
                                                                    (and
                                                                    (=>
                                                                    (<= 1 last2)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 70))
                                                                    (and
                                                                    (<= 1 last2)
                                                                    (<= last2 70))))
                                                                    (and
                                                                    (forall 
                                                                    ((temp___449 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 temp___449)
                                                                    (<= temp___449 last2))
                                                                    (= 
                                                                    (us_attr__init
                                                                    (select item temp___449)) true)))
                                                                    (and
                                                                    (ite (<= 1 last2)
                                                                    (<= 1 last2)
                                                                    (< last2 1))
                                                                    (and
                                                                    (=>
                                                                    (<= 1 last2)
                                                                    (and
                                                                    (and
                                                                    (<= 1 1)
                                                                    (<= 1 70))
                                                                    (and
                                                                    (<= 1 last2)
                                                                    (<= last2 70))))
                                                                    (and
                                                                    (ite (<= 1 last2)
                                                                    (<= 1 last2)
                                                                    (< last2 1))
                                                                    (exists 
                                                                    ((usf1 (Array Int character)))
                                                                    (and
                                                                    (forall 
                                                                    ((temp___462 Int))
                                                                    (ite 
                                                                    (and
                                                                    (<= 1 temp___462)
                                                                    (<= temp___462 last2))
                                                                    (= (select usf1 temp___462) (select 
                                                                    (convert
                                                                    item) temp___462))
                                                                    (= (select usf1 temp___462) (select (select candidates4 current_candidate1) temp___462))))
                                                                    (and
                                                                    (= candidates3 (store candidates4 current_candidate1 usf1))
                                                                    (not
                                                                    (= (and 
                                                                    (ite (= 
                                                                    (end_of_file
                                                                    file1
                                                                    file_system1
                                                                    standard_in1
                                                                    standard_out1
                                                                    standard_err1
                                                                    current_in1
                                                                    current_out1
                                                                    current_err1) true)
                                                                    false
                                                                    true) 
                                                                    (ite (< current_candidate1 20)
                                                                    true
                                                                    false)) true)))))))))))))))))))))))))))
                                                            (and
                                                              (= candidates3 candidates2)
                                                              (= current_candidate1 current_candidate)))
                                                          (forall ((file2 us_rep))
                                                            (=>
                                                              (not
                                                                (= (is_open
                                                                    file2) true))
                                                              (forall 
                                                                ((last_candidate1 Int))
                                                                (=>
                                                                  (= last_candidate1 current_candidate1)
                                                                  (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= (+ last_candidate1 1) i)
                                                                    (<= i 20))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j 70))
                                                                    (= 
                                                                    (to_rep
                                                                    (select (select candidates3 i) j)) 32)))))))))))))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
