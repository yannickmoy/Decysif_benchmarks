;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0))
  (((Tuple0))))

(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-sort us_image 0)

(declare-datatypes ((us_private__ref 0))
  (((us_private__refqtmk (us_private__content us_private)))))

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

(declare-sort character 0)

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

;; "to_rep"
(declare-fun to_rep (character) Int)

;; "of_rep"
(declare-fun of_rep (Int) character)

;; "inversion_axiom"
(assert
  (forall ((x character))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

;; "to_rep"
(define-fun to_rep1 ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                 (of_rep1 x))) )))

(declare-datatypes ((t 0))
  (((tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep1 (rec__first (mk f l))) f)
             (= (to_rep1 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range low)
    (and
      (in_range high)
      (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes ((us_t 0))
  (((us_tqtmk (elts (Array Int character))(rt t)))))

;; "of_array"
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

;; "from_string"
(declare-fun from_string (us_t) us_image)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

(declare-datatypes ((character__init_wrapper 0))
  (((character__init_wrapperqtmk (rec__value character)(us_attr__init Bool)))))

(declare-const dummy character__init_wrapper)

;; "dummy__def"
(assert (= (us_attr__init dummy) false))

;; "slide"
(declare-fun slide ((Array Int character__init_wrapper)
  Int
  Int) (Array Int character__init_wrapper))

;; "slide_eq"
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((first Int))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; "slide_def"
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

;; "convert"
(declare-fun convert ((Array Int character__init_wrapper)) (Array Int character))

;; "convert__def"
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((temp___106 Int))
      (= (to_rep (of_rep (to_rep (rec__value (select a temp___106))))) 
      (to_rep
        (select (convert a) temp___106))))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const program_phase Int)

(declare-const candidates (Array Int (Array Int character)))

(declare-const last_candidate Int)

;; "line_length"
(declare-fun line_length (us_private
  us_private
  us_private
  us_private
  us_private
  us_private
  us_private) Int)

;; "page_length"
(declare-fun page_length (us_private
  us_private
  us_private
  us_private
  us_private
  us_private
  us_private) Int)

;; "length"
(define-fun length ((x Int) (y Int)) Int
  (ite (<= x y) (+ (- y x) 1) 0))

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 20)))

;; "attr__ATTRIBUTE_IMAGE"
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

;; "attr__ATTRIBUTE_VALUE__pre_check"
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_257 (Array Int (Array Int character))) (temp___is_init_253 Bool) (temp___skip_constant_254 Bool) (temp___do_toplevel_255 Bool) (temp___do_typ_inv_256 Bool)) Bool
  true)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const component__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "component__size_axiom"
(assert (<= 0 component__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

;; "temp___String_Literal_536"
(declare-fun temp___String_Literal_536 (tuple0) (Array Int character))

;; "temp___String_Literal_536__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_536 us_void_param) 1)) 67)
           (= (to_rep (select (temp___String_Literal_536 us_void_param) 2)) 104))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 3)) 111)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 4)) 115))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 5)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 6)) 32)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 7)) 97)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 8)) 32))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 9)) 99)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 10)) 97))))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 11)) 110)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 12)) 100))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 13)) 105)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 14)) 100)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 15)) 97)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 16)) 116))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 17)) 101)
                 (= (to_rep
                      (select (temp___String_Literal_536 us_void_param) 18)) 58)))))) :pattern (
    (temp___String_Literal_536
      us_void_param)) )))

;; "temp___String_Literal_539"
(declare-fun temp___String_Literal_539 (tuple0) (Array Int character))

;; "temp___String_Literal_539__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (and
         (and
           (= (to_rep (select (temp___String_Literal_539 us_void_param) 1)) 89)
           (= (to_rep (select (temp___String_Literal_539 us_void_param) 2)) 111))
         (and
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 3)) 117)
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 4)) 114))
               (and
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 5)) 32)
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 6)) 99)))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 7)) 104)
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 8)) 111))
               (= (to_rep
                    (select (temp___String_Literal_539 us_void_param) 9)) 105)))
           (and
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 10)) 99)
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 11)) 101))
               (= (to_rep
                    (select (temp___String_Literal_539 us_void_param) 12)) 32))
             (and
               (and
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 13)) 40)
                 (= (to_rep
                      (select (temp___String_Literal_539 us_void_param) 14)) 48))
               (= (to_rep
                    (select (temp___String_Literal_539 us_void_param) 15)) 45))))) :pattern (
    (temp___String_Literal_539
      us_void_param)) )))

;; "temp___String_Literal_542"
(declare-fun temp___String_Literal_542 (tuple0) (Array Int character))

;; "temp___String_Literal_542__def_axiom"
(assert
  (forall ((us_void_param tuple0))
    (! (= (to_rep (select (temp___String_Literal_542 us_void_param) 1)) 41) :pattern (
    (temp___String_Literal_542
      us_void_param)) )))

;; "in_range"
(define-fun in_range6 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "line_length__post_axiom"
(assert
  (forall ((Ada___ada__text_io__file_system___file_system___ us_private) (Ada___ada__text_io__standard_in___standard_in___ us_private) (Ada___ada__text_io__standard_out___standard_out___ us_private) (Ada___ada__text_io__standard_err___standard_err___ us_private) (Ada___ada__text_io__current_in___current_in___ us_private) (Ada___ada__text_io__current_out___current_out___ us_private) (Ada___ada__text_io__current_err___current_err___ us_private))
    (! (in_range6
         (line_length
           Ada___ada__text_io__file_system___file_system___
           Ada___ada__text_io__standard_in___standard_in___
           Ada___ada__text_io__standard_out___standard_out___
           Ada___ada__text_io__standard_err___standard_err___
           Ada___ada__text_io__current_in___current_in___
           Ada___ada__text_io__current_out___current_out___
           Ada___ada__text_io__current_err___current_err___)) :pattern (
    (line_length
      Ada___ada__text_io__file_system___file_system___
      Ada___ada__text_io__standard_in___standard_in___
      Ada___ada__text_io__standard_out___standard_out___
      Ada___ada__text_io__standard_err___standard_err___
      Ada___ada__text_io__current_in___current_in___
      Ada___ada__text_io__current_out___current_out___
      Ada___ada__text_io__current_err___current_err___)) )))

;; "page_length__post_axiom"
(assert
  (forall ((Ada___ada__text_io__file_system___file_system___ us_private) (Ada___ada__text_io__standard_in___standard_in___ us_private) (Ada___ada__text_io__standard_out___standard_out___ us_private) (Ada___ada__text_io__standard_err___standard_err___ us_private) (Ada___ada__text_io__current_in___current_in___ us_private) (Ada___ada__text_io__current_out___current_out___ us_private) (Ada___ada__text_io__current_err___current_err___ us_private))
    (! (in_range6
         (page_length
           Ada___ada__text_io__file_system___file_system___
           Ada___ada__text_io__standard_in___standard_in___
           Ada___ada__text_io__standard_out___standard_out___
           Ada___ada__text_io__standard_err___standard_err___
           Ada___ada__text_io__current_in___current_in___
           Ada___ada__text_io__current_out___current_out___
           Ada___ada__text_io__current_err___current_err___)) :pattern (
    (page_length
      Ada___ada__text_io__file_system___file_system___
      Ada___ada__text_io__standard_in___standard_in___
      Ada___ada__text_io__standard_out___standard_out___
      Ada___ada__text_io__standard_err___standard_err___
      Ada___ada__text_io__current_in___current_in___
      Ada___ada__text_io__current_out___current_out___
      Ada___ada__text_io__current_err___current_err___)) )))

;; Goal "def'vc"
;; File "evoting.ads", line 77, characters 0-0
(assert
  (not
  (forall ((chosen_vote Int) (last Int) (choice Int))
    (=>
      (in_range4 program_phase)
      (=>
        (dynamic_invariant candidates true false true true)
        (=>
          (in_range5 last_candidate)
          (=>
            (in_range5 chosen_vote)
            (=>
              (= program_phase 1)
              (=>
                (in_range3 last)
                (=>
                  (in_range5 choice)
                  (forall ((file_system us_private) (standard_in us_private) (standard_out us_private) (standard_err us_private) (current_in us_private) (current_out us_private) (current_err us_private) (chosen_vote1 Int) (last1 Int) (choice1 Int))
                    (=>
                      (and
                        (and (in_range3 last1) (in_range5 choice1))
                        (= chosen_vote1 chosen_vote))
                      (forall ((file_system1 us_private) (standard_in1 us_private) (standard_out1 us_private) (standard_err1 us_private) (current_in1 us_private) (current_out1 us_private) (current_err1 us_private))
                        (=>
                          (and
                            (= (line_length
                                 file_system
                                 standard_in
                                 standard_out
                                 standard_err
                                 current_in
                                 current_out
                                 current_err) (line_length
                                                file_system1
                                                standard_in1
                                                standard_out1
                                                standard_err1
                                                current_in1
                                                current_out1
                                                current_err1))
                            (= (page_length
                                 file_system
                                 standard_in
                                 standard_out
                                 standard_err
                                 current_in
                                 current_out
                                 current_err) (page_length
                                                file_system1
                                                standard_in1
                                                standard_out1
                                                standard_err1
                                                current_in1
                                                current_out1
                                                current_err1)))
                          (forall ((file_system2 us_private) (standard_in2 us_private) (standard_out2 us_private) (standard_err2 us_private) (current_in2 us_private) (current_out2 us_private) (current_err2 us_private))
                            (forall ((file_system3 us_private) (standard_in3 us_private) (standard_out3 us_private) (standard_err3 us_private) (current_in3 us_private) (current_out3 us_private) (current_err3 us_private))
                              (=>
                                (and
                                  (= (line_length
                                       file_system2
                                       standard_in2
                                       standard_out2
                                       standard_err2
                                       current_in2
                                       current_out2
                                       current_err2) (line_length
                                                       file_system3
                                                       standard_in3
                                                       standard_out3
                                                       standard_err3
                                                       current_in3
                                                       current_out3
                                                       current_err3))
                                  (= (page_length
                                       file_system2
                                       standard_in2
                                       standard_out2
                                       standard_err2
                                       current_in2
                                       current_out2
                                       current_err2) (page_length
                                                       file_system3
                                                       standard_in3
                                                       standard_out3
                                                       standard_err3
                                                       current_in3
                                                       current_out3
                                                       current_err3)))
                                (forall ((file_system4 us_private) (standard_in4 us_private) (standard_out4 us_private) (standard_err4 us_private) (current_in4 us_private) (current_out4 us_private) (current_err4 us_private))
                                  (=>
                                    (and
                                      (= (line_length
                                           file_system3
                                           standard_in3
                                           standard_out3
                                           standard_err3
                                           current_in3
                                           current_out3
                                           current_err3) (line_length
                                                           file_system4
                                                           standard_in4
                                                           standard_out4
                                                           standard_err4
                                                           current_in4
                                                           current_out4
                                                           current_err4))
                                      (= (page_length
                                           file_system3
                                           standard_in3
                                           standard_out3
                                           standard_err3
                                           current_in3
                                           current_out3
                                           current_err3) (page_length
                                                           file_system4
                                                           standard_in4
                                                           standard_out4
                                                           standard_err4
                                                           current_in4
                                                           current_out4
                                                           current_err4)))
                                    (forall ((file_system5 us_private) (standard_in5 us_private) (standard_out5 us_private) (standard_err5 us_private) (current_in5 us_private) (current_out5 us_private) (current_err5 us_private))
                                      (=>
                                        (and
                                          (= (line_length
                                               file_system4
                                               standard_in4
                                               standard_out4
                                               standard_err4
                                               current_in4
                                               current_out4
                                               current_err4) (line_length
                                                               file_system5
                                                               standard_in5
                                                               standard_out5
                                                               standard_err5
                                                               current_in5
                                                               current_out5
                                                               current_err5))
                                          (= (page_length
                                               file_system4
                                               standard_in4
                                               standard_out4
                                               standard_err4
                                               current_in4
                                               current_out4
                                               current_err4) (page_length
                                                               file_system5
                                                               standard_in5
                                                               standard_out5
                                                               standard_err5
                                                               current_in5
                                                               current_out5
                                                               current_err5)))
                                        (forall ((o integer))
                                          (=>
                                            (= (to_rep1 o) 10)
                                            (forall ((o1 integer))
                                              (=>
                                                (= (to_rep1 o1) 1)
                                                (forall ((file_system6 us_private) (standard_in6 us_private) (standard_out6 us_private) (standard_err6 us_private) (current_in6 us_private) (current_out6 us_private) (current_err6 us_private) (param__item (Array Int character__init_wrapper)) (param__last Int))
                                                  (=>
                                                    (and
                                                      (and
                                                        (and
                                                          (and
                                                            (= (line_length
                                                                 file_system5
                                                                 standard_in5
                                                                 standard_out5
                                                                 standard_err5
                                                                 current_in5
                                                                 current_out5
                                                                 current_err5) 
                                                            (line_length
                                                              file_system6
                                                              standard_in6
                                                              standard_out6
                                                              standard_err6
                                                              current_in6
                                                              current_out6
                                                              current_err6))
                                                            (= (page_length
                                                                 file_system5
                                                                 standard_in5
                                                                 standard_out5
                                                                 standard_err5
                                                                 current_in5
                                                                 current_out5
                                                                 current_err5) 
                                                            (page_length
                                                              file_system6
                                                              standard_in6
                                                              standard_out6
                                                              standard_err6
                                                              current_in6
                                                              current_out6
                                                              current_err6)))
                                                          (ite (< 0 (length
                                                                    (to_rep1
                                                                    o1)
                                                                    (to_rep1
                                                                    o)))
                                                            (and
                                                              (<= (- 
                                                              (to_rep1
                                                                o1) 1) param__last)
                                                              (<= param__last 
                                                              (to_rep1
                                                                o)))
                                                            (= param__last (- 
                                                            (to_rep1
                                                              o1) 1))))
                                                        (forall ((i Int))
                                                          (=>
                                                            (and
                                                              (<= (to_rep1
                                                                    o1) i)
                                                              (<= i param__last))
                                                            (= (us_attr__init
                                                                 (select param__item i)) true))))
                                                      (in_range3 param__last))
                                                    (forall ((buf (Array Int character__init_wrapper)))
                                                      (=>
                                                        (= buf (slide
                                                                 param__item
                                                                 1
                                                                 1))
                                                        (forall ((last2 Int))
                                                          (=>
                                                            (= last2 param__last)
                                                            (=>
                                                              (=>
                                                                (<= 1 last2)
                                                                (and
                                                                  (and
                                                                    (<= 1 1)
                                                                    (<= 1 10))
                                                                  (and
                                                                    (<= 1 last2)
                                                                    (<= last2 10))))
                                                              (=>
                                                                (forall 
                                                                  ((temp___562 Int))
                                                                  (=>
                                                                    (and
                                                                    (<= 1 temp___562)
                                                                    (<= temp___562 last2))
                                                                    (= 
                                                                    (us_attr__init
                                                                    (select buf temp___562)) true)))
                                                                (=>
                                                                  (dynamic_property
                                                                    1
                                                                    2147483647
                                                                    1
                                                                    last2)
                                                                  (attr__ATTRIBUTE_VALUE__pre_check
                                                                    (from_string
                                                                    (of_array
                                                                    (convert
                                                                    buf)
                                                                    1
                                                                    last2)))))))))))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
