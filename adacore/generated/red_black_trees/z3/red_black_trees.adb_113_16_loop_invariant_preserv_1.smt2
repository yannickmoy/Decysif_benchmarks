;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

;; "max"
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (or (= x 0) (= x 1)))

(declare-sort extended_index_type 0)

;; "extended_index_type'int"
(declare-fun extended_index_typeqtint (extended_index_type) Int)

;; "extended_index_type'axiom"
(assert
  (forall ((i extended_index_type))
    (and
      (<= 0 (extended_index_typeqtint i))
      (<= (extended_index_typeqtint i) 100))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 100)))

;; "to_rep"
(define-fun to_rep ((x extended_index_type)) Int
  (extended_index_typeqtint x))

;; "of_rep"
(declare-fun of_rep (Int) extended_index_type)

;; "inversion_axiom"
(assert
  (forall ((x extended_index_type))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x extended_index_type))
    (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-sort position_type 0)

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "to_rep"
(declare-fun to_rep1 (position_type) Int)

;; "of_rep"
(declare-fun of_rep1 (Int) position_type)

;; "inversion_axiom"
(assert
  (forall ((x position_type))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x position_type))
    (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__binary_trees__cell__left extended_index_type)(rec__binary_trees__cell__right extended_index_type)(rec__binary_trees__cell__parent extended_index_type)(rec__binary_trees__cell__position position_type)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const binary_trees__cell__left__first__bit Int)

(declare-const binary_trees__cell__left__last__bit Int)

(declare-const binary_trees__cell__left__position Int)

;; "binary_trees__cell__left__first__bit_axiom"
(assert (<= 0 binary_trees__cell__left__first__bit))

;; "binary_trees__cell__left__last__bit_axiom"
(assert
  (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))

;; "binary_trees__cell__left__position_axiom"
(assert (<= 0 binary_trees__cell__left__position))

(declare-const binary_trees__cell__right__first__bit Int)

(declare-const binary_trees__cell__right__last__bit Int)

(declare-const binary_trees__cell__right__position Int)

;; "binary_trees__cell__right__first__bit_axiom"
(assert (<= 0 binary_trees__cell__right__first__bit))

;; "binary_trees__cell__right__last__bit_axiom"
(assert
  (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))

;; "binary_trees__cell__right__position_axiom"
(assert (<= 0 binary_trees__cell__right__position))

(declare-const binary_trees__cell__parent__first__bit Int)

(declare-const binary_trees__cell__parent__last__bit Int)

(declare-const binary_trees__cell__parent__position Int)

;; "binary_trees__cell__parent__first__bit_axiom"
(assert (<= 0 binary_trees__cell__parent__first__bit))

;; "binary_trees__cell__parent__last__bit_axiom"
(assert
  (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))

;; "binary_trees__cell__parent__position_axiom"
(assert (<= 0 binary_trees__cell__parent__position))

(declare-const binary_trees__cell__position__first__bit Int)

(declare-const binary_trees__cell__position__last__bit Int)

(declare-const binary_trees__cell__position__position Int)

;; "binary_trees__cell__position__first__bit_axiom"
(assert (<= 0 binary_trees__cell__position__first__bit))

;; "binary_trees__cell__position__last__bit_axiom"
(assert
  (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))

;; "binary_trees__cell__position__position_axiom"
(assert (<= 0 binary_trees__cell__position__position))

(declare-const dummy us_rep)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-datatypes ()
  ((us_split_fields2
   (us_split_fieldsqtmk1
   (rec__binary_trees__forest__s extended_index_type)(rec__binary_trees__forest__c (Array Int us_rep))))))

(declare-datatypes ()
  ((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const binary_trees__forest__s__first__bit Int)

(declare-const binary_trees__forest__s__last__bit Int)

(declare-const binary_trees__forest__s__position Int)

;; "binary_trees__forest__s__first__bit_axiom"
(assert (<= 0 binary_trees__forest__s__first__bit))

;; "binary_trees__forest__s__last__bit_axiom"
(assert
  (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))

;; "binary_trees__forest__s__position_axiom"
(assert (<= 0 binary_trees__forest__s__position))

(declare-const binary_trees__forest__c__first__bit Int)

(declare-const binary_trees__forest__c__last__bit Int)

(declare-const binary_trees__forest__c__position Int)

;; "binary_trees__forest__c__first__bit_axiom"
(assert (<= 0 binary_trees__forest__c__first__bit))

;; "binary_trees__forest__c__last__bit_axiom"
(assert
  (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))

;; "binary_trees__forest__c__position_axiom"
(assert (<= 0 binary_trees__forest__c__position))

(declare-const dummy1 us_rep1)

(declare-sort natural 0)

;; "natural'int"
(declare-fun naturalqtint (natural) Int)

;; "natural'axiom"
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep2 ((x natural)) Int
  (naturalqtint x))

;; "of_rep"
(declare-fun of_rep2 (Int) natural)

;; "inversion_axiom"
(assert
  (forall ((x natural))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x natural)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-datatypes ()
  ((us_split_fields4
   (us_split_fieldsqtmk2
   (rec__search_trees__search_tree__root extended_index_type)(rec__search_trees__search_tree__struct us_rep1)(rec__search_trees__search_tree__values (Array Int natural))))))

(declare-datatypes ()
  ((us_rep2 (us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const search_trees__search_tree__root__first__bit Int)

(declare-const search_trees__search_tree__root__last__bit Int)

(declare-const search_trees__search_tree__root__position Int)

;; "search_trees__search_tree__root__first__bit_axiom"
(assert (<= 0 search_trees__search_tree__root__first__bit))

;; "search_trees__search_tree__root__last__bit_axiom"
(assert
  (< search_trees__search_tree__root__first__bit search_trees__search_tree__root__last__bit))

;; "search_trees__search_tree__root__position_axiom"
(assert (<= 0 search_trees__search_tree__root__position))

(declare-const search_trees__search_tree__struct__first__bit Int)

(declare-const search_trees__search_tree__struct__last__bit Int)

(declare-const search_trees__search_tree__struct__position Int)

;; "search_trees__search_tree__struct__first__bit_axiom"
(assert (<= 0 search_trees__search_tree__struct__first__bit))

;; "search_trees__search_tree__struct__last__bit_axiom"
(assert
  (< search_trees__search_tree__struct__first__bit search_trees__search_tree__struct__last__bit))

;; "search_trees__search_tree__struct__position_axiom"
(assert (<= 0 search_trees__search_tree__struct__position))

(declare-const search_trees__search_tree__values__first__bit Int)

(declare-const search_trees__search_tree__values__last__bit Int)

(declare-const search_trees__search_tree__values__position Int)

;; "search_trees__search_tree__values__first__bit_axiom"
(assert (<= 0 search_trees__search_tree__values__first__bit))

;; "search_trees__search_tree__values__last__bit_axiom"
(assert
  (< search_trees__search_tree__values__first__bit search_trees__search_tree__values__last__bit))

;; "search_trees__search_tree__values__position_axiom"
(assert (<= 0 search_trees__search_tree__values__position))

(declare-const dummy2 us_rep2)

(declare-sort color_type 0)

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

;; "to_rep"
(declare-fun to_rep3 (color_type) Int)

;; "of_rep"
(declare-fun of_rep3 (Int) color_type)

;; "inversion_axiom"
(assert
  (forall ((x color_type))
    (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; "range_axiom"
(assert
  (forall ((x color_type))
    (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                                  (of_rep3 x))) )))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const component__size2 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-datatypes ()
  ((us_split_fields6
   (us_split_fieldsqtmk3
   (rec__red_black_trees__rbt__struct us_rep2)(rec__red_black_trees__rbt__color (Array Int color_type))))))

(declare-datatypes ()
  ((us_rep3 (us_repqtmk3 (us_split_fields7 us_split_fields6)))))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "alignment_axiom"
(assert (<= 0 alignment6))

(declare-const red_black_trees__rbt__struct__first__bit Int)

(declare-const red_black_trees__rbt__struct__last__bit Int)

(declare-const red_black_trees__rbt__struct__position Int)

;; "red_black_trees__rbt__struct__first__bit_axiom"
(assert (<= 0 red_black_trees__rbt__struct__first__bit))

;; "red_black_trees__rbt__struct__last__bit_axiom"
(assert
  (< red_black_trees__rbt__struct__first__bit red_black_trees__rbt__struct__last__bit))

;; "red_black_trees__rbt__struct__position_axiom"
(assert (<= 0 red_black_trees__rbt__struct__position))

(declare-const red_black_trees__rbt__color__first__bit Int)

(declare-const red_black_trees__rbt__color__last__bit Int)

(declare-const red_black_trees__rbt__color__position Int)

;; "red_black_trees__rbt__color__first__bit_axiom"
(assert (<= 0 red_black_trees__rbt__color__first__bit))

;; "red_black_trees__rbt__color__last__bit_axiom"
(assert
  (< red_black_trees__rbt__color__first__bit red_black_trees__rbt__color__last__bit))

;; "red_black_trees__rbt__color__position_axiom"
(assert (<= 0 red_black_trees__rbt__color__position))

(declare-const dummy3 us_rep3)

;; "size"
(declare-fun size (us_rep2) Int)

;; "size"
(declare-fun size1 (us_rep1) Int)

;; "valid_root"
(declare-fun valid_root (us_rep1
  Int) Bool)

;; "tree_structure"
(declare-fun tree_structure (us_rep1) Bool)

;; "ordered_leafs"
(declare-fun ordered_leafs (us_rep1
  Int
  (Array Int natural)) Bool)

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_344 us_rep3) (temp___is_init_340 Bool) (temp___skip_constant_341 Bool) (temp___do_toplevel_342 Bool) (temp___do_typ_inv_343 Bool)) Bool
  (and
    (=>
      (= temp___do_typ_inv_343 true)
      (let ((temp___345 (rec__red_black_trees__rbt__struct
                          (us_split_fields7 temp___expr_344))))
        (ite (= (size1
                  (rec__search_trees__search_tree__struct
                    (us_split_fields5 temp___345))) 0)
          (= (to_rep
               (rec__search_trees__search_tree__root
                 (us_split_fields5 temp___345))) 0)
          (and
            (and
              (not
                (= (to_rep
                     (rec__search_trees__search_tree__root
                       (us_split_fields5 temp___345))) 0))
              (= (valid_root
                   (rec__search_trees__search_tree__struct
                     (us_split_fields5 temp___345))
                   (to_rep
                     (rec__search_trees__search_tree__root
                       (us_split_fields5 temp___345)))) true))
            (= (ordered_leafs
                 (rec__search_trees__search_tree__struct
                   (us_split_fields5 temp___345))
                 (to_rep
                   (rec__search_trees__search_tree__root
                     (us_split_fields5 temp___345)))
                 (rec__search_trees__search_tree__values
                   (us_split_fields5 temp___345))) true)))))
    (=>
      (= temp___do_typ_inv_343 true)
      (= (tree_structure
           (rec__search_trees__search_tree__struct
             (us_split_fields5
               (rec__red_black_trees__rbt__struct
                 (us_split_fields7 temp___expr_344))))) true))))

(declare-sort us_rep4 0)

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; "value__size_axiom"
(assert (<= 0 value__size7))

;; "object__size_axiom"
(assert (<= 0 object__size7))

;; "alignment_axiom"
(assert (<= 0 alignment7))

(declare-const dummy4 us_rep4)

;; "last"
(declare-fun last (us_rep4) Int)

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

(declare-datatypes ()
  ((us_split_fields8
   (us_split_fieldsqtmk4
   (rec__tree_model__path_type__a us_rep4)(rec__tree_model__path_type__k Bool)))))

(declare-datatypes ()
  ((us_rep5 (us_repqtmk4 (us_split_fields9 us_split_fields8)))))

(declare-const value__size8 Int)

(declare-const object__size8 Int)

(declare-const alignment8 Int)

;; "value__size_axiom"
(assert (<= 0 value__size8))

;; "object__size_axiom"
(assert (<= 0 object__size8))

;; "alignment_axiom"
(assert (<= 0 alignment8))

(declare-const tree_model__path_type__a__first__bit Int)

(declare-const tree_model__path_type__a__last__bit Int)

(declare-const tree_model__path_type__a__position Int)

;; "tree_model__path_type__a__first__bit_axiom"
(assert (<= 0 tree_model__path_type__a__first__bit))

;; "tree_model__path_type__a__last__bit_axiom"
(assert
  (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))

;; "tree_model__path_type__a__position_axiom"
(assert (<= 0 tree_model__path_type__a__position))

(declare-const tree_model__path_type__k__first__bit Int)

(declare-const tree_model__path_type__k__last__bit Int)

(declare-const tree_model__path_type__k__position Int)

;; "tree_model__path_type__k__first__bit_axiom"
(assert (<= 0 tree_model__path_type__k__first__bit))

;; "tree_model__path_type__k__last__bit_axiom"
(assert
  (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))

;; "tree_model__path_type__k__position_axiom"
(assert (<= 0 tree_model__path_type__k__position))

(declare-const dummy5 us_rep5)

;; "model"
(declare-fun model1 (us_rep2) (Array Int us_rep5))

;; "model"
(declare-fun model2 (us_rep1
  Int) (Array Int us_rep5))

(declare-const value__size9 Int)

(declare-const object__size9 Int)

(declare-const alignment9 Int)

;; "value__size_axiom"
(assert (<= 0 value__size9))

;; "object__size_axiom"
(assert (<= 0 object__size9))

;; "alignment_axiom"
(assert (<= 0 alignment9))

(declare-const dummy6 Int)

;; "length"
(define-fun length ((param__container us_rep4)) Int
  (- (+ (last param__container) 1) 1))

;; "in_range"
(define-fun in_range6 ((x Int)) Bool
  (and (<= 1 x) (<= x 100)))

(declare-const value__size10 Int)

(declare-const object__size10 Int)

(declare-const component__size3 Int)

(declare-const alignment10 Int)

;; "value__size_axiom"
(assert (<= 0 value__size10))

;; "object__size_axiom"
(assert (<= 0 object__size10))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment10))

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_497 (Array Int us_rep5)) (temp___is_init_493 Bool) (temp___skip_constant_494 Bool) (temp___do_toplevel_495 Bool) (temp___do_typ_inv_496 Bool)) Bool
  (forall ((temp___498 Int))
    (=>
      (and (<= 1 temp___498) (<= temp___498 100))
      (< (length
           (rec__tree_model__path_type__a
             (us_split_fields9 (select temp___expr_497 temp___498)))) 100))))

(declare-const t us_rep3)

;; "peek"
(declare-fun peek (us_rep2
  Int
  Int) Int)

;; "peek"
(declare-fun peek1 (us_rep1
  Int
  Int) Int)

(declare-datatypes ()
  ((us_split_fields10
   (us_split_fieldsqtmk5
   (rec__red_black_trees__black_count__status Bool)(rec__red_black_trees__black_count__depth extended_index_type)(rec__red_black_trees__black_count__count extended_index_type)))))

(declare-datatypes ()
  ((us_rep6 (us_repqtmk5 (us_split_fields11 us_split_fields10)))))

;; "bool_eq"
(define-fun bool_eq ((a us_rep6) (b us_rep6)) Bool
  (ite (and
         (= (ite (rec__red_black_trees__black_count__status
                   (us_split_fields11 a)) 1 0) (ite (rec__red_black_trees__black_count__status
                                                      (us_split_fields11 b)) 1 0))
         (and
           (= (to_rep
                (rec__red_black_trees__black_count__depth
                  (us_split_fields11 a))) (to_rep
                                            (rec__red_black_trees__black_count__depth
                                              (us_split_fields11 b))))
           (= (to_rep
                (rec__red_black_trees__black_count__count
                  (us_split_fields11 a))) (to_rep
                                            (rec__red_black_trees__black_count__count
                                              (us_split_fields11 b))))))
    true
    false))

(declare-const value__size11 Int)

(declare-const object__size11 Int)

(declare-const alignment11 Int)

;; "value__size_axiom"
(assert (<= 0 value__size11))

;; "object__size_axiom"
(assert (<= 0 object__size11))

;; "alignment_axiom"
(assert (<= 0 alignment11))

(declare-const red_black_trees__black_count__status__first__bit Int)

(declare-const red_black_trees__black_count__status__last__bit Int)

(declare-const red_black_trees__black_count__status__position Int)

;; "red_black_trees__black_count__status__first__bit_axiom"
(assert (<= 0 red_black_trees__black_count__status__first__bit))

;; "red_black_trees__black_count__status__last__bit_axiom"
(assert
  (< red_black_trees__black_count__status__first__bit red_black_trees__black_count__status__last__bit))

;; "red_black_trees__black_count__status__position_axiom"
(assert (<= 0 red_black_trees__black_count__status__position))

(declare-const red_black_trees__black_count__depth__first__bit Int)

(declare-const red_black_trees__black_count__depth__last__bit Int)

(declare-const red_black_trees__black_count__depth__position Int)

;; "red_black_trees__black_count__depth__first__bit_axiom"
(assert (<= 0 red_black_trees__black_count__depth__first__bit))

;; "red_black_trees__black_count__depth__last__bit_axiom"
(assert
  (< red_black_trees__black_count__depth__first__bit red_black_trees__black_count__depth__last__bit))

;; "red_black_trees__black_count__depth__position_axiom"
(assert (<= 0 red_black_trees__black_count__depth__position))

(declare-const red_black_trees__black_count__count__first__bit Int)

(declare-const red_black_trees__black_count__count__last__bit Int)

(declare-const red_black_trees__black_count__count__position Int)

;; "red_black_trees__black_count__count__first__bit_axiom"
(assert (<= 0 red_black_trees__black_count__count__first__bit))

;; "red_black_trees__black_count__count__last__bit_axiom"
(assert
  (< red_black_trees__black_count__count__first__bit red_black_trees__black_count__count__last__bit))

;; "red_black_trees__black_count__count__position_axiom"
(assert (<= 0 red_black_trees__black_count__count__position))

(declare-const dummy7 us_rep6)

(declare-datatypes ()
  ((map__ref (map__refqtmk (map__content (Array Int us_rep6))))))

(declare-const m (Array Int us_rep5))

(declare-const count_r us_rep6)

(declare-const count_l us_rep6)

(declare-const value__size12 Int)

(declare-const object__size12 Int)

(declare-const component__size4 Int)

(declare-const alignment12 Int)

;; "value__size_axiom"
(assert (<= 0 value__size12))

;; "object__size_axiom"
(assert (<= 0 object__size12))

;; "component__size_axiom"
(assert (<= 0 component__size4))

;; "alignment_axiom"
(assert (<= 0 alignment12))

(declare-const value__size13 Int)

(declare-const object__size13 Int)

(declare-const component__size5 Int)

(declare-const alignment13 Int)

;; "value__size_axiom"
(assert (<= 0 value__size13))

;; "object__size_axiom"
(assert (<= 0 object__size13))

;; "component__size_axiom"
(assert (<= 0 component__size5))

;; "alignment_axiom"
(assert (<= 0 alignment13))

;; "red_black_trees__nb_blacks__res__aggregate_def"
(declare-fun red_black_trees__nb_blacks__res__aggregate_def (us_rep6
  us_rep6) (Array Int us_rep6))

;; "get"
(declare-fun get (us_rep4
  Int) Int)

;; "oeq"
(define-fun oeq ((param__left us_rep4) (param__right us_rep4)) Bool
  (and (= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "parent"
(declare-fun parent (us_rep1
  Int) Int)

;; "olt"
(define-fun olt ((param__left us_rep4) (param__right us_rep4)) Bool
  (and (< (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "is_add"
(declare-fun is_add (us_rep4
  Int
  us_rep4) Bool)

;; "position"
(declare-fun position (us_rep1
  Int) Int)

;; "dynamic_invariant"
(define-fun dynamic_invariant2 ((temp___expr_301 us_rep2) (temp___is_init_297 Bool) (temp___skip_constant_298 Bool) (temp___do_toplevel_299 Bool) (temp___do_typ_inv_300 Bool)) Bool
  (and
    (=>
      (= temp___do_typ_inv_300 true)
      (ite (= (size1
                (rec__search_trees__search_tree__struct
                  (us_split_fields5 temp___expr_301))) 0)
        (= (to_rep
             (rec__search_trees__search_tree__root
               (us_split_fields5 temp___expr_301))) 0)
        (and
          (and
            (not
              (= (to_rep
                   (rec__search_trees__search_tree__root
                     (us_split_fields5 temp___expr_301))) 0))
            (= (valid_root
                 (rec__search_trees__search_tree__struct
                   (us_split_fields5 temp___expr_301))
                 (to_rep
                   (rec__search_trees__search_tree__root
                     (us_split_fields5 temp___expr_301)))) true))
          (= (ordered_leafs
               (rec__search_trees__search_tree__struct
                 (us_split_fields5 temp___expr_301))
               (to_rep
                 (rec__search_trees__search_tree__root
                   (us_split_fields5 temp___expr_301)))
               (rec__search_trees__search_tree__values
                 (us_split_fields5 temp___expr_301))) true))))
    (=>
      (= temp___do_typ_inv_300 true)
      (= (tree_structure
           (rec__search_trees__search_tree__struct
             (us_split_fields5 temp___expr_301))) true))))

;; "dynamic_invariant"
(define-fun dynamic_invariant3 ((temp___expr_276 us_rep1) (temp___is_init_272 Bool) (temp___skip_constant_273 Bool) (temp___do_toplevel_274 Bool) (temp___do_typ_inv_275 Bool)) Bool
  (=>
    (= temp___do_typ_inv_275 true)
    (= (tree_structure temp___expr_276) true)))

;; "in_range"
(define-fun in_range7 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

;; "size__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (! (=>
         (dynamic_invariant3 param__f true false true true)
         (in_range1 (size1 param__f))) :pattern ((size1 param__f)) )))

;; "size__post_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (=>
         (dynamic_invariant2 param__t true false true true)
         (in_range1 (size param__t))) :pattern ((size param__t)) )))

;; "size__def_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (= (size param__t) (size1
                            (rec__search_trees__search_tree__struct
                              (us_split_fields5 param__t)))) :pattern (
    (size
      param__t)) )))

;; "last__post_axiom"
(assert
  (forall ((param__container us_rep4))
    (! (in_range5 (last param__container)) :pattern ((last param__container)) )))

;; "get__post_axiom"
(assert
  (forall ((param__container us_rep4))
    (forall ((param__position Int))
      (! (=>
           (and
             (in_range5 param__position)
             (and
               (<= 1 param__position)
               (<= param__position (last param__container))))
           (in_range7 (get param__container param__position))) :pattern (
      (get
        param__container
        param__position)) ))))

;; "valid_root__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant3 param__f true false true true)
             (in_range6 param__i))
           (=>
             (< (size1 param__f) param__i)
             (not (= (valid_root param__f param__i) true)))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "parent__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant3 param__f true false true true)
             (in_range6 param__i))
           (let ((result (parent param__f param__i)))
             (and
               (and
                 (=> (= (valid_root param__f param__i) true) (= result 0))
                 (=> (= (size1 param__f) 0) (= result 0)))
               (in_range1 result)))) :pattern ((parent param__f param__i)) ))))

;; "is_add__post_axiom"
(assert true)

;; "is_add__def_axiom"
(assert
  (forall ((param__s1 us_rep4) (param__s2 us_rep4))
    (forall ((param__d Int))
      (! (=
           (= (is_add param__s1 param__d param__s2) true)
           (and
             (and
               (= (- (length param__s2) 1) (length param__s1))
               (= (olt param__s1 param__s2) true))
             (= (get param__s2 (last param__s2)) param__d))) :pattern (
      (is_add
        param__s1
        param__d
        param__s2)) ))))

;; "position__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (and
               (dynamic_invariant3 param__f true false true true)
               (in_range6 param__i))
             (not (= (parent param__f param__i) 0)))
           (in_range7 (position param__f param__i))) :pattern ((position
                                                                 param__f
                                                                 param__i)) ))))

;; "model__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (! (=>
           (and
             (and
               (dynamic_invariant3 param__f true false true true)
               (in_range6 param__root))
             (= (valid_root param__f param__root) true))
           (let ((result (model2 param__f param__root)))
             (and
               (and
                 (and
                   (and
                     (and
                       (= (rec__tree_model__path_type__k
                            (us_split_fields9 (select result param__root))) true)
                       (= (last
                            (rec__tree_model__path_type__a
                              (us_split_fields9 (select result param__root)))) 0))
                     (forall ((i Int))
                       (=>
                         (and (<= 1 i) (<= i 100))
                         (=>
                           (not (= i param__root))
                           (ite (and
                                  (not (= (parent param__f i) 0))
                                  (= (rec__tree_model__path_type__k
                                       (us_split_fields9
                                         (select result (parent param__f i)))) true))
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields9 (select result i))) true)
                             (not
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields9 (select result i))) true)))))))
                   (forall ((i Int))
                     (=>
                       (and (<= 1 i) (<= i 100))
                       (ite (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields9 (select result i))) true)
                              (not (= i param__root)))
                         (= (is_add
                              (rec__tree_model__path_type__a
                                (us_split_fields9
                                  (select result (parent param__f i))))
                              (position param__f i)
                              (rec__tree_model__path_type__a
                                (us_split_fields9 (select result i)))) true)
                         (= (last
                              (rec__tree_model__path_type__a
                                (us_split_fields9 (select result i)))) 0)))))
                 (forall ((i Int))
                   (=>
                     (and (<= 1 i) (<= i 100))
                     (=>
                       (= (rec__tree_model__path_type__k
                            (us_split_fields9 (select result i))) true)
                       (forall ((j Int))
                         (=>
                           (and (<= 1 j) (<= j 100))
                           (=>
                             (and
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields9 (select result j))) true)
                               (= (oeq
                                    (rec__tree_model__path_type__a
                                      (us_split_fields9 (select result i)))
                                    (rec__tree_model__path_type__a
                                      (us_split_fields9 (select result j)))) true))
                             (= j i))))))))
               (dynamic_invariant1 result true false true true)))) :pattern (
      (model2
        param__f
        param__root)) ))))

;; "model__post_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (=>
         (and
           (dynamic_invariant2 param__t true false true true)
           (not (= (size param__t) 0)))
         (dynamic_invariant1 (model1 param__t) true false true true)) :pattern (
    (model1
      param__t)) )))

;; "model__def_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (= (model1 param__t) (model2
                              (rec__search_trees__search_tree__struct
                                (us_split_fields5 param__t))
                              (to_rep
                                (rec__search_trees__search_tree__root
                                  (us_split_fields5 param__t))))) :pattern (
    (model1
      param__t)) )))

;; "peek__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int) (param__d Int))
      (! (=>
           (and
             (and
               (dynamic_invariant3 param__f true false true true)
               (in_range6 param__i))
             (in_range7 param__d))
           (let ((result (peek1 param__f param__i param__d)))
             (and
               (and
                 (ite (not (= result 0))
                   (and
                     (= (position param__f result) param__d)
                     (= (parent param__f result) param__i))
                   (forall ((j Int))
                     (=>
                       (and (<= 1 j) (<= j 100))
                       (=>
                         (= (parent param__f j) param__i)
                         (not (= (position param__f j) param__d))))))
                 (forall ((j Int))
                   (=>
                     (and (<= 1 j) (<= j 100))
                     (=>
                       (and
                         (= (parent param__f j) param__i)
                         (= (position param__f j) param__d))
                       (= result j)))))
               (in_range1 result)))) :pattern ((peek1
                                                 param__f
                                                 param__i
                                                 param__d)) ))))

;; "peek__post_axiom"
(assert
  (forall ((param__t us_rep2))
    (forall ((param__i Int) (param__d Int))
      (! (=>
           (and
             (and
               (and
                 (dynamic_invariant2 param__t true false true true)
                 (in_range6 param__i))
               (in_range7 param__d))
             (and
               (not (= (size param__t) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields9
                      (let ((temp___550 (model1 param__t)))
                        (select temp___550 param__i)))) true)))
           (in_range1 (peek param__t param__i param__d))) :pattern ((peek
                                                                    param__t
                                                                    param__i
                                                                    param__d)) ))))

;; "peek__def_axiom"
(assert
  (forall ((param__t us_rep2))
    (forall ((param__i Int) (param__d Int))
      (! (= (peek param__t param__i param__d) (peek1
                                                (rec__search_trees__search_tree__struct
                                                  (us_split_fields5 param__t))
                                                param__i
                                                param__d)) :pattern (
      (peek
        param__t
        param__i
        param__d)) ))))

;; "tree_structure__post_axiom"
(assert true)

;; "ordered_leafs__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (forall ((param__values (Array Int natural)))
        (! (=>
             (and
               (and
                 (dynamic_invariant3 param__f true false true true)
                 (in_range6 param__root))
               (= (valid_root param__f param__root) true))
             (in_range
               (ite (ordered_leafs param__f param__root param__values) 1 0))) :pattern (
        (ordered_leafs
          param__f
          param__root
          param__values)) )))))

(declare-const rliteral extended_index_type)

;; "rliteral_axiom"
(assert (= (extended_index_typeqtint rliteral) 100))

(declare-const rliteral1 extended_index_type)

;; "rliteral_axiom"
(assert (= (extended_index_typeqtint rliteral1) 0))

;; "Assume"
(assert (dynamic_invariant t true false true true))

;; "Assume"
(assert
  (not (= (size (rec__red_black_trees__rbt__struct (us_split_fields7 t))) 0)))

;; "o"
(define-fun o () Bool
  (distinct 0 0))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused () Bool
  o)

;; "o"
(define-fun o1 () us_split_fields10
  (us_split_fieldsqtmk5 o rliteral rliteral))

;; "__split_fields'mk'result'unused"
(define-fun us_split_fieldsqtmkqtresultqtunused () us_split_fields10
  o1)

;; "o"
(define-fun o2 () us_rep6
  (us_repqtmk5 o1))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused () us_rep6
  o2)

;; "o"
(define-fun o3 () Bool
  (distinct 1 0))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused1 () Bool
  o3)

;; "o"
(define-fun o4 () us_split_fields10
  (us_split_fieldsqtmk5 o3 rliteral1 rliteral1))

;; "__split_fields'mk'result'unused"
(define-fun us_split_fieldsqtmkqtresultqtunused1 () us_split_fields10
  o4)

;; "o"
(define-fun o5 () us_rep6
  (us_repqtmk5 o4))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused1 () us_rep6
  o5)

(declare-const temp___917 (Array Int us_rep6))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (= (select temp___917 0) o5))

;; "H"
(assert
  (forall ((temp___916 Int))
    (! (=>
         (and
           (not (= temp___916 0))
           (and (<= 0 temp___916) (<= temp___916 100)))
         (= (select temp___917 temp___916) o2)) :pattern ((select temp___917 temp___916)) )))

;; "H"
(assert
  (= temp___917 (red_black_trees__nb_blacks__res__aggregate_def o5 o2)))

;; "red_black_trees__nb_blacks__res__aggregate_def'result'unused"
(define-fun red_black_trees__nb_blacks__res__aggregate_defqtresultqtunused 
  () (Array Int us_rep6)
  temp___917)

(declare-const res (Array Int us_rep6))

;; "res'unused"
(define-fun resqtunused () map__ref
  (map__refqtmk res))

;; "H"
(assert (= res temp___917))

;; "Assume"
(assert true)

;; "o"
(define-fun o6 () us_split_fields6
  (us_split_fields7 t))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused () us_split_fields6
  o6)

;; "o"
(define-fun o7 () us_rep2
  (rec__red_black_trees__rbt__struct o6))

;; "rec__red_black_trees__rbt__struct'result'unused"
(define-fun rec__red_black_trees__rbt__structqtresultqtunused () us_rep2
  o7)

;; "red_black_trees__nb_blacks__m__assume"
(define-fun red_black_trees__nb_blacks__m__assume () (Array Int us_rep5)
  (model1 o7))

;; "H"
(assert
  (dynamic_invariant1
    red_black_trees__nb_blacks__m__assume
    true
    false
    true
    true))

;; "H"
(assert
  (= red_black_trees__nb_blacks__m__assume (model2
                                             (rec__search_trees__search_tree__struct
                                               (us_split_fields5 o7))
                                             (to_rep
                                               (rec__search_trees__search_tree__root
                                                 (us_split_fields5 o7))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused () (Array Int us_rep5)
  red_black_trees__nb_blacks__m__assume)

;; "Assume"
(assert (= red_black_trees__nb_blacks__m__assume m))

;; "Assume"
(assert (dynamic_invariant1 m true false true true))

(declare-const n Int)

;; "n'unused"
(define-fun nqtunused () int__ref
  (int__refqtmk n))

;; "H"
(assert (= n 0))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  n)

;; "o"
(define-fun o8 () Bool
  (ite (<= n 99) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused () Bool
  o8)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  n)

;; "o"
(define-fun o9 () Bool
  (ite (<= 0 n) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused1 () Bool
  o9)

;; "o"
(define-fun o10 () Bool
  (and o9 o8))

;; "andb'result'unused"
(define-fun andbqtresultqtunused () Bool
  o10)

;; "H"
(assert (= o10 true))

;; "temp___loop_entry_954'unused"
(define-fun temp___loop_entry_954qtunused () (Array Int us_rep6)
  res)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused () (Array Int us_rep6)
  res)

;; "o"
(define-fun o11 () Bool
  (distinct 1 0))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused2 () Bool
  o11)

;; "o"
(define-fun o12 () us_split_fields10
  (us_split_fieldsqtmk5 o11 rliteral1 rliteral1))

;; "__split_fields'mk'result'unused"
(define-fun us_split_fieldsqtmkqtresultqtunused2 () us_split_fields10
  o12)

;; "o"
(define-fun o13 () us_rep6
  (us_repqtmk5 o12))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused2 () us_rep6
  o13)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused1 () (Array Int us_rep6)
  res)

;; "o"
(define-fun o14 () us_rep6
  (select res 0))

;; "get'result'unused"
(define-fun getqtresultqtunused () us_rep6
  o14)

;; "bool_eq'result'unused"
(define-fun bool_eqqtresultqtunused () Bool
  (bool_eq o14 o13))

(declare-const res1 (Array Int us_rep6))

(declare-const n1 Int)

;; "n'unused"
(define-fun nqtunused1 () int__ref
  (int__refqtmk n1))

;; "res'unused"
(define-fun resqtunused1 () map__ref
  (map__refqtmk res1))

;; "LoopInvariant"
(assert
  (= (bool_eq
       (select res1 0)
       (us_repqtmk5
         (us_split_fieldsqtmk5 (distinct 1 0) rliteral1 rliteral1))) true))

;; "LoopInvariant"
(assert
  (forall ((i Int))
    (=>
      (and (<= 1 i) (<= i 100))
      (<= (to_rep
            (rec__red_black_trees__black_count__count
              (us_split_fields11 (select res1 i)))) (to_rep
                                                      (rec__red_black_trees__black_count__depth
                                                        (us_split_fields11
                                                          (select res1 i))))))))

;; "LoopInvariant"
(assert
  (forall ((i Int))
    (=>
      (and (<= 1 i) (<= i 100))
      (or
        (= (to_rep
             (rec__red_black_trees__black_count__depth
               (us_split_fields11 (select res1 i)))) 100)
        (<= (to_rep
              (rec__red_black_trees__black_count__depth
                (us_split_fields11 (select res1 i)))) n1)))))

;; "LoopInvariant"
(assert
  (forall ((i Int))
    (=>
      (and (<= 1 i) (<= i 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields9 (select m i))) true)
             (< n1 (to_rep
                     (rec__red_black_trees__black_count__depth
                       (us_split_fields11 (select res1 i))))))
        (< (last
             (rec__tree_model__path_type__a (us_split_fields9 (select m i)))) (- 100 
        n1))
        (=>
          (= (rec__tree_model__path_type__k (us_split_fields9 (select m i))) true)
          (and
            (and
              (and
                (<= (to_rep
                      (rec__red_black_trees__black_count__depth
                        (us_split_fields11 (select res1 i)))) n1)
                (=
                  (= (rec__red_black_trees__black_count__status
                       (us_split_fields11 (select res1 i))) true)
                  (= (to_rep
                       (rec__red_black_trees__black_count__count
                         (us_split_fields11
                           (select res1 (peek
                                          (rec__red_black_trees__rbt__struct
                                            (us_split_fields7 t))
                                          i
                                          0))))) (to_rep
                                                   (rec__red_black_trees__black_count__count
                                                     (us_split_fields11
                                                       (select res1 (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    1))))))))
              (= (to_rep
                   (rec__red_black_trees__black_count__depth
                     (us_split_fields11 (select res1 i)))) (+ 1 (max
                                                                  (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select 
                                                                    res1 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    0)))))
                                                                  (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select 
                                                                    res1 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    1)))))))))
            (= (to_rep
                 (rec__red_black_trees__black_count__count
                   (us_split_fields11 (select res1 i)))) (+ (ite (= (to_rep3
                                                                    (select 
                                                                    (rec__red_black_trees__rbt__color
                                                                    (us_split_fields7
                                                                    t)) i)) 0)
                                                              1
                                                              0) (to_rep
                                                                   (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select 
                                                                    res1 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    0)))))))))))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j 100))
      (=>
        (and
          (and
            (= (rec__tree_model__path_type__k
                 (us_split_fields9 (select m j))) true)
            (< (to_rep
                 (rec__red_black_trees__black_count__depth
                   (us_split_fields11
                     (select res1 (peek
                                    (rec__red_black_trees__rbt__struct
                                      (us_split_fields7 t))
                                    j
                                    0))))) n1))
          (< (to_rep
               (rec__red_black_trees__black_count__depth
                 (us_split_fields11
                   (select res1 (peek
                                  (rec__red_black_trees__rbt__struct
                                    (us_split_fields7 t))
                                  j
                                  1))))) n1))
        (<= (to_rep
              (rec__red_black_trees__black_count__depth
                (us_split_fields11 (select res1 j)))) n1)))))

;; "Assume"
(assert
  (= (and (ite true true false) (ite (and (<= 0 n1) (<= n1 99)) true false)) true))

(declare-const i Int)

;; "i'unused"
(define-fun iqtunused () int__ref
  (int__refqtmk i))

;; "H"
(assert (= i 1))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused2 () Int
  i)

;; "o"
(define-fun o15 () Bool
  (ite (<= i 100) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused2 () Bool
  o15)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  i)

;; "o"
(define-fun o16 () Bool
  (ite (<= 1 i) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused3 () Bool
  o16)

;; "o"
(define-fun o17 () Bool
  (and o16 o15))

;; "andb'result'unused"
(define-fun andbqtresultqtunused1 () Bool
  o17)

;; "H"
(assert (= o17 true))

;; "temp___loop_entry_936'unused"
(define-fun temp___loop_entry_936qtunused () (Array Int us_rep6)
  res1)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused2 () (Array Int us_rep6)
  res1)

;; "o"
(define-fun o18 () Bool
  (distinct 1 0))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused3 () Bool
  o18)

;; "o"
(define-fun o19 () us_split_fields10
  (us_split_fieldsqtmk5 o18 rliteral1 rliteral1))

;; "__split_fields'mk'result'unused"
(define-fun us_split_fieldsqtmkqtresultqtunused3 () us_split_fields10
  o19)

;; "o"
(define-fun o20 () us_rep6
  (us_repqtmk5 o19))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused3 () us_rep6
  o20)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused3 () (Array Int us_rep6)
  res1)

;; "o"
(define-fun o21 () us_rep6
  (select res1 0))

;; "get'result'unused"
(define-fun getqtresultqtunused1 () us_rep6
  o21)

;; "bool_eq'result'unused"
(define-fun bool_eqqtresultqtunused1 () Bool
  (bool_eq o21 o20))

(declare-const res2 (Array Int us_rep6))

(declare-const i1 Int)

;; "i'unused"
(define-fun iqtunused1 () int__ref
  (int__refqtmk i1))

;; "res'unused"
(define-fun resqtunused2 () map__ref
  (map__refqtmk res2))

;; "LoopInvariant"
(assert
  (= (bool_eq
       (select res2 0)
       (us_repqtmk5
         (us_split_fieldsqtmk5 (distinct 1 0) rliteral1 rliteral1))) true))

;; "LoopInvariant"
(assert
  (forall ((i2 Int))
    (=>
      (and (<= 1 i2) (<= i2 100))
      (<= (to_rep
            (rec__red_black_trees__black_count__count
              (us_split_fields11 (select res2 i2)))) (to_rep
                                                       (rec__red_black_trees__black_count__depth
                                                         (us_split_fields11
                                                           (select res2 i2))))))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j (- i1 1)))
      (or
        (= (to_rep
             (rec__red_black_trees__black_count__depth
               (us_split_fields11 (select res2 j)))) 100)
        (<= (to_rep
              (rec__red_black_trees__black_count__depth
                (us_split_fields11 (select res2 j)))) (+ n1 1))))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= i1 j) (<= j 100))
      (or
        (= (to_rep
             (rec__red_black_trees__black_count__depth
               (us_split_fields11 (select res2 j)))) 100)
        (<= (to_rep
              (rec__red_black_trees__black_count__depth
                (us_split_fields11 (select res2 j)))) n1)))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j 100))
      (=>
        (and
          (= (rec__tree_model__path_type__k (us_split_fields9 (select m j))) true)
          (< n1 (to_rep
                  (rec__red_black_trees__black_count__depth
                    (us_split_fields11 (select res2 j))))))
        (< (last
             (rec__tree_model__path_type__a (us_split_fields9 (select m j)))) (- 100 
        n1))))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j (- i1 1)))
      (=>
        (and
          (= (rec__tree_model__path_type__k (us_split_fields9 (select m j))) true)
          (< (+ n1 1) (to_rep
                        (rec__red_black_trees__black_count__depth
                          (us_split_fields11 (select res2 j))))))
        (< (last
             (rec__tree_model__path_type__a (us_split_fields9 (select m j)))) (- 100 (+ 
        n1 1)))))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j 100))
      (=>
        (and
          (= (rec__tree_model__path_type__k (us_split_fields9 (select m j))) true)
          (or
            (<= (to_rep
                  (rec__red_black_trees__black_count__depth
                    (us_split_fields11 (select res2 j)))) n1)
            (and
              (< j i1)
              (= (to_rep
                   (rec__red_black_trees__black_count__depth
                     (us_split_fields11 (select res2 j)))) (+ n1 1)))))
        (and
          (and
            (=
              (= (rec__red_black_trees__black_count__status
                   (us_split_fields11 (select res2 j))) true)
              (= (to_rep
                   (rec__red_black_trees__black_count__count
                     (us_split_fields11
                       (select res2 (peek
                                      (rec__red_black_trees__rbt__struct
                                        (us_split_fields7 t))
                                      j
                                      0))))) (to_rep
                                               (rec__red_black_trees__black_count__count
                                                 (us_split_fields11
                                                   (select res2 (peek
                                                                  (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                  j
                                                                  1)))))))
            (= (to_rep
                 (rec__red_black_trees__black_count__depth
                   (us_split_fields11 (select res2 j)))) (+ 1 (max
                                                                (to_rep
                                                                  (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select 
                                                                    res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0)))))
                                                                (to_rep
                                                                  (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select 
                                                                    res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1)))))))))
          (= (to_rep
               (rec__red_black_trees__black_count__count
                 (us_split_fields11 (select res2 j)))) (+ (ite (= (to_rep3
                                                                    (select 
                                                                    (rec__red_black_trees__rbt__color
                                                                    (us_split_fields7
                                                                    t)) j)) 0)
                                                            1
                                                            0) (to_rep
                                                                 (rec__red_black_trees__black_count__count
                                                                   (us_split_fields11
                                                                    (select 
                                                                    res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0))))))))))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j 100))
      (=>
        (and
          (and
            (= (rec__tree_model__path_type__k
                 (us_split_fields9 (select m j))) true)
            (< (to_rep
                 (rec__red_black_trees__black_count__depth
                   (us_split_fields11
                     (select res2 (peek
                                    (rec__red_black_trees__rbt__struct
                                      (us_split_fields7 t))
                                    j
                                    0))))) n1))
          (< (to_rep
               (rec__red_black_trees__black_count__depth
                 (us_split_fields11
                   (select res2 (peek
                                  (rec__red_black_trees__rbt__struct
                                    (us_split_fields7 t))
                                  j
                                  1))))) n1))
        (<= (to_rep
              (rec__red_black_trees__black_count__depth
                (us_split_fields11 (select res2 j)))) n1)))))

;; "LoopInvariant"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j (- i1 1)))
      (=>
        (and
          (and
            (= (rec__tree_model__path_type__k
                 (us_split_fields9 (select m j))) true)
            (<= (to_rep
                  (rec__red_black_trees__black_count__depth
                    (us_split_fields11
                      (select res2 (peek
                                     (rec__red_black_trees__rbt__struct
                                       (us_split_fields7 t))
                                     j
                                     0))))) n1))
          (<= (to_rep
                (rec__red_black_trees__black_count__depth
                  (us_split_fields11
                    (select res2 (peek
                                   (rec__red_black_trees__rbt__struct
                                     (us_split_fields7 t))
                                   j
                                   1))))) n1))
        (<= (to_rep
              (rec__red_black_trees__black_count__depth
                (us_split_fields11 (select res2 j)))) (+ n1 1))))))

;; "Assume"
(assert
  (= (and (ite (forall ((temp___937 Int))
                 (=>
                   (and (<= 0 temp___937) (<= temp___937 100))
                   (=>
                     (or
                       (< 100 temp___937)
                       (or (< temp___937 1) (<= i1 temp___937)))
                     (= (select res2 temp___937) (select res1 temp___937)))))
            true
            false) (ite (and (<= 1 i1) (<= i1 100)) true false)) true))

(declare-const res3 (Array Int us_rep6))

;; "res'unused"
(define-fun resqtunused3 () map__ref
  (map__refqtmk res3))

(declare-const int__contentqtresultqtunused4 Int)

;; "H"
(assert (= int__contentqtresultqtunused4 i1))

(declare-const o22 us_rep5)

;; "H"
(assert (= o22 (select m i1)))

(declare-const getqtresultqtunused2 us_rep5)

;; "H"
(assert (= getqtresultqtunused2 o22))

(declare-const o23 us_split_fields8)

;; "H"
(assert (= o23 (us_split_fields9 o22)))

(declare-const us_split_fieldsqtresultqtunused1 us_split_fields8)

;; "H"
(assert (= us_split_fieldsqtresultqtunused1 o23))

(declare-const o24 Bool)

;; "H"
(assert (= o24 (rec__tree_model__path_type__k o23)))

(declare-const rec__tree_model__path_type__kqtresultqtunused Bool)

;; "H"
(assert (= rec__tree_model__path_type__kqtresultqtunused o24))

(declare-const spark__branch Bool)

(declare-const spark__branchqtunused bool__ref)

;; "H"
(assert (= spark__branchqtunused (bool__refqtmk spark__branch)))

;; "H"
(assert (= spark__branch o24))

(declare-const bool__contentqtresultqtunused Bool)

;; "H"
(assert (= bool__contentqtresultqtunused spark__branch))

(declare-const int__contentqtresultqtunused5 Int)

(declare-const o25 us_split_fields6)

(declare-const us_split_fieldsqtresultqtunused2 us_split_fields6)

(declare-const o26 us_rep2)

(declare-const rec__red_black_trees__rbt__structqtresultqtunused1 us_rep2)

(declare-const o27 Int)

(declare-const peekqtresultqtunused Int)

(declare-const map__contentqtresultqtunused4 (Array Int us_rep6))

(declare-const red_black_trees__nb_blacks__B_3__count_r__assume us_rep6)

(declare-const getqtresultqtunused3 us_rep6)

(declare-const int__contentqtresultqtunused6 Int)

(declare-const o28 us_split_fields6)

(declare-const us_split_fieldsqtresultqtunused3 us_split_fields6)

(declare-const o29 us_rep2)

(declare-const rec__red_black_trees__rbt__structqtresultqtunused2 us_rep2)

(declare-const o30 Int)

(declare-const peekqtresultqtunused1 Int)

(declare-const map__contentqtresultqtunused5 (Array Int us_rep6))

(declare-const red_black_trees__nb_blacks__B_3__count_l__assume us_rep6)

(declare-const getqtresultqtunused4 us_rep6)

(declare-const int__contentqtresultqtunused7 Int)

(declare-const o31 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused4 us_split_fields10)

(declare-const o32 extended_index_type)

(declare-const rec__red_black_trees__black_count__depthqtresultqtunused extended_index_type)

(declare-const o33 Int)

(declare-const to_repqtresultqtunused Int)

(declare-const o34 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused5 us_split_fields10)

(declare-const o35 extended_index_type)

(declare-const rec__red_black_trees__black_count__depthqtresultqtunused1 extended_index_type)

(declare-const o36 Int)

(declare-const to_repqtresultqtunused1 Int)

(declare-const o37 Int)

(declare-const int_maxqtresultqtunused Int)

(declare-const o38 Bool)

(declare-const infix_eqqtresultqtunused Bool)

(declare-const spark__branch1 Bool)

(declare-const spark__branchqtunused1 bool__ref)

(declare-const bool__contentqtresultqtunused1 Bool)

(declare-const int__contentqtresultqtunused8 Int)

(declare-const map__contentqtresultqtunused6 (Array Int us_rep6))

(declare-const temp___924 us_rep6)

(declare-const getqtresultqtunused5 us_rep6)

(declare-const usq_ us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused6 us_split_fields10)

(declare-const o39 extended_index_type)

(declare-const rec__red_black_trees__black_count__countqtresultqtunused extended_index_type)

(declare-const int__contentqtresultqtunused9 Int)

(declare-const o40 Int)

(declare-const infix_plqtresultqtunused Int)

(declare-const o41 extended_index_type)

(declare-const of_repqtresultqtunused extended_index_type)

(declare-const o42 Bool)

(declare-const rec__red_black_trees__black_count__statusqtresultqtunused Bool)

(declare-const o43 us_split_fields10)

(declare-const us_split_fieldsqtmkqtresultqtunused4 us_split_fields10)

(declare-const o44 us_rep6)

(declare-const us_repqtmkqtresultqtunused4 us_rep6)

(declare-const int__contentqtresultqtunused10 Int)

(declare-const map__contentqtresultqtunused7 (Array Int us_rep6))

(declare-const o45 (Array Int us_rep6))

(declare-const setqtresultqtunused (Array Int us_rep6))

(declare-const res4 (Array Int us_rep6))

(declare-const resqtunused4 map__ref)

(declare-const int__contentqtresultqtunused11 Int)

(declare-const map__contentqtresultqtunused8 (Array Int us_rep6))

(declare-const temp___927 us_rep6)

(declare-const getqtresultqtunused6 us_rep6)

(declare-const usq_1 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused7 us_split_fields10)

(declare-const o46 extended_index_type)

(declare-const rec__red_black_trees__black_count__countqtresultqtunused1 extended_index_type)

(declare-const o47 extended_index_type)

(declare-const rec__red_black_trees__black_count__depthqtresultqtunused2 extended_index_type)

(declare-const o48 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused8 us_split_fields10)

(declare-const o49 extended_index_type)

(declare-const rec__red_black_trees__black_count__countqtresultqtunused2 extended_index_type)

(declare-const o50 Int)

(declare-const to_repqtresultqtunused2 Int)

(declare-const o51 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused9 us_split_fields10)

(declare-const o52 extended_index_type)

(declare-const rec__red_black_trees__black_count__countqtresultqtunused3 extended_index_type)

(declare-const o53 Int)

(declare-const to_repqtresultqtunused3 Int)

(declare-const o54 Bool)

(declare-const infix_eqqtresultqtunused1 Bool)

(declare-const o55 us_split_fields10)

(declare-const us_split_fieldsqtmkqtresultqtunused5 us_split_fields10)

(declare-const o56 us_rep6)

(declare-const us_repqtmkqtresultqtunused5 us_rep6)

(declare-const int__contentqtresultqtunused12 Int)

(declare-const map__contentqtresultqtunused9 (Array Int us_rep6))

(declare-const o57 (Array Int us_rep6))

(declare-const setqtresultqtunused1 (Array Int us_rep6))

(declare-const res5 (Array Int us_rep6))

(declare-const resqtunused5 map__ref)

(declare-const o58 us_split_fields6)

(declare-const us_split_fieldsqtresultqtunused10 us_split_fields6)

(declare-const temp___935 (Array Int color_type))

(declare-const rec__red_black_trees__rbt__colorqtresultqtunused (Array Int color_type))

(declare-const int__contentqtresultqtunused13 Int)

(declare-const o59 color_type)

(declare-const getqtresultqtunused7 color_type)

(declare-const o60 Int)

(declare-const to_repqtresultqtunused4 Int)

(declare-const o61 Bool)

(declare-const infix_eqqtresultqtunused2 Bool)

(declare-const spark__branch2 Bool)

(declare-const spark__branchqtunused2 bool__ref)

(declare-const bool__contentqtresultqtunused2 Bool)

(declare-const int__contentqtresultqtunused14 Int)

(declare-const map__contentqtresultqtunused10 (Array Int us_rep6))

(declare-const temp___933 us_rep6)

(declare-const getqtresultqtunused8 us_rep6)

(declare-const usq_2 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused11 us_split_fields10)

(declare-const o62 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused12 us_split_fields10)

(declare-const o63 extended_index_type)

(declare-const rec__red_black_trees__black_count__countqtresultqtunused4 extended_index_type)

(declare-const o64 Int)

(declare-const to_repqtresultqtunused5 Int)

(declare-const o65 extended_index_type)

(declare-const of_repqtresultqtunused1 extended_index_type)

(declare-const o66 extended_index_type)

(declare-const rec__red_black_trees__black_count__depthqtresultqtunused3 extended_index_type)

(declare-const o67 Bool)

(declare-const rec__red_black_trees__black_count__statusqtresultqtunused1 Bool)

(declare-const o68 us_split_fields10)

(declare-const us_split_fieldsqtmkqtresultqtunused6 us_split_fields10)

(declare-const o69 us_rep6)

(declare-const us_repqtmkqtresultqtunused6 us_rep6)

(declare-const int__contentqtresultqtunused15 Int)

(declare-const map__contentqtresultqtunused11 (Array Int us_rep6))

(declare-const o70 (Array Int us_rep6))

(declare-const setqtresultqtunused2 (Array Int us_rep6))

(declare-const int__contentqtresultqtunused16 Int)

(declare-const map__contentqtresultqtunused12 (Array Int us_rep6))

(declare-const temp___930 us_rep6)

(declare-const getqtresultqtunused9 us_rep6)

(declare-const usq_3 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused13 us_split_fields10)

(declare-const o71 us_split_fields10)

(declare-const us_split_fieldsqtresultqtunused14 us_split_fields10)

(declare-const o72 extended_index_type)

(declare-const rec__red_black_trees__black_count__countqtresultqtunused5 extended_index_type)

(declare-const o73 Int)

(declare-const to_repqtresultqtunused6 Int)

(declare-const o74 Int)

(declare-const infix_plqtresultqtunused1 Int)

(declare-const range_check_qtresultqtunused Int)

(declare-const o75 extended_index_type)

(declare-const of_repqtresultqtunused2 extended_index_type)

(declare-const o76 extended_index_type)

(declare-const rec__red_black_trees__black_count__depthqtresultqtunused4 extended_index_type)

(declare-const o77 Bool)

(declare-const rec__red_black_trees__black_count__statusqtresultqtunused2 Bool)

(declare-const o78 us_split_fields10)

(declare-const us_split_fieldsqtmkqtresultqtunused7 us_split_fields10)

(declare-const o79 us_rep6)

(declare-const us_repqtmkqtresultqtunused7 us_rep6)

(declare-const int__contentqtresultqtunused17 Int)

(declare-const map__contentqtresultqtunused13 (Array Int us_rep6))

(declare-const o80 (Array Int us_rep6))

(declare-const setqtresultqtunused3 (Array Int us_rep6))

;; "H"
(assert
  (ite (= spark__branch true)
    (and
      (= int__contentqtresultqtunused5 i1)
      (and
        (= o25 (us_split_fields7 t))
        (and
          (= us_split_fieldsqtresultqtunused2 o25)
          (and
            (= o26 (rec__red_black_trees__rbt__struct o25))
            (and
              (= rec__red_black_trees__rbt__structqtresultqtunused1 o26)
              (and
                (= o27 (peek o26 i1 1))
                (and
                  (and
                    (in_range1 o27)
                    (= o27 (peek1
                             (rec__search_trees__search_tree__struct
                               (us_split_fields5 o26))
                             i1
                             1)))
                  (and
                    (= peekqtresultqtunused o27)
                    (and
                      (= map__contentqtresultqtunused4 res2)
                      (and
                        (= red_black_trees__nb_blacks__B_3__count_r__assume (select 
                        res2 o27))
                        (and
                          (= getqtresultqtunused3 red_black_trees__nb_blacks__B_3__count_r__assume)
                          (and
                            (= red_black_trees__nb_blacks__B_3__count_r__assume 
                            count_r)
                            (and
                              (= int__contentqtresultqtunused6 i1)
                              (and
                                (= o28 (us_split_fields7 t))
                                (and
                                  (= us_split_fieldsqtresultqtunused3 
                                  o28)
                                  (and
                                    (= o29 (rec__red_black_trees__rbt__struct
                                             o28))
                                    (and
                                      (= rec__red_black_trees__rbt__structqtresultqtunused2 
                                      o29)
                                      (and
                                        (= o30 (peek o29 i1 0))
                                        (and
                                          (and
                                            (in_range1 o30)
                                            (= o30 (peek1
                                                     (rec__search_trees__search_tree__struct
                                                       (us_split_fields5 o29))
                                                     i1
                                                     0)))
                                          (and
                                            (= peekqtresultqtunused1 
                                            o30)
                                            (and
                                              (= map__contentqtresultqtunused5 
                                              res2)
                                              (and
                                                (= red_black_trees__nb_blacks__B_3__count_l__assume (select 
                                                res2 o30))
                                                (and
                                                  (= getqtresultqtunused4 
                                                  red_black_trees__nb_blacks__B_3__count_l__assume)
                                                  (and
                                                    (= red_black_trees__nb_blacks__B_3__count_l__assume 
                                                    count_l)
                                                    (and
                                                      (= int__contentqtresultqtunused7 
                                                      n1)
                                                      (and
                                                        (= o31 (us_split_fields11
                                                                 count_l))
                                                        (and
                                                          (= us_split_fieldsqtresultqtunused4 
                                                          o31)
                                                          (and
                                                            (= o32 (rec__red_black_trees__black_count__depth
                                                                    o31))
                                                            (and
                                                              (= rec__red_black_trees__black_count__depthqtresultqtunused 
                                                              o32)
                                                              (and
                                                                (= (to_rep
                                                                    o32) 
                                                                o33)
                                                                (and
                                                                  (= 
                                                                  to_repqtresultqtunused 
                                                                  o33)
                                                                  (and
                                                                    (= 
                                                                    o34 
                                                                    (us_split_fields11
                                                                    count_r))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused5 
                                                                    o34)
                                                                    (and
                                                                    (= 
                                                                    o35 
                                                                    (rec__red_black_trees__black_count__depth
                                                                    o34))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__depthqtresultqtunused1 
                                                                    o35)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o35) 
                                                                    o36)
                                                                    (and
                                                                    (= 
                                                                    to_repqtresultqtunused1 
                                                                    o36)
                                                                    (and
                                                                    (= 
                                                                    o37 
                                                                    (max
                                                                    o36
                                                                    o33))
                                                                    (and
                                                                    (= 
                                                                    int_maxqtresultqtunused 
                                                                    o37)
                                                                    (and
                                                                    (= 
                                                                    o38 
                                                                    (ite (= 
                                                                    o37 
                                                                    n1)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused 
                                                                    o38)
                                                                    (and
                                                                    (= 
                                                                    spark__branchqtunused1 
                                                                    (bool__refqtmk
                                                                    spark__branch1))
                                                                    (and
                                                                    (= 
                                                                    spark__branch1 
                                                                    o38)
                                                                    (and
                                                                    (= 
                                                                    bool__contentqtresultqtunused1 
                                                                    spark__branch1)
                                                                    (ite (= 
                                                                    spark__branch1 true)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused8 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused6 
                                                                    res2)
                                                                    (and
                                                                    (= 
                                                                    temp___924 (select 
                                                                    res2 
                                                                    i1))
                                                                    (and
                                                                    (= 
                                                                    getqtresultqtunused5 
                                                                    temp___924)
                                                                    (and
                                                                    (= 
                                                                    usq_ 
                                                                    (us_split_fields11
                                                                    temp___924))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused6 
                                                                    usq_)
                                                                    (and
                                                                    (= 
                                                                    o39 
                                                                    (rec__red_black_trees__black_count__count
                                                                    usq_))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__countqtresultqtunused 
                                                                    o39)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused9 
                                                                    n1)
                                                                    (and
                                                                    (= 
                                                                    o40 (+ 
                                                                    n1 1))
                                                                    (and
                                                                    (= 
                                                                    infix_plqtresultqtunused 
                                                                    o40)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o41) 
                                                                    o40)
                                                                    (and
                                                                    (= 
                                                                    of_repqtresultqtunused 
                                                                    o41)
                                                                    (and
                                                                    (= 
                                                                    o42 
                                                                    (rec__red_black_trees__black_count__status
                                                                    usq_))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__statusqtresultqtunused 
                                                                    o42)
                                                                    (and
                                                                    (= 
                                                                    o43 
                                                                    (us_split_fieldsqtmk5
                                                                    o42
                                                                    o41
                                                                    o39))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused4 
                                                                    o43)
                                                                    (and
                                                                    (= 
                                                                    o44 
                                                                    (us_repqtmk5
                                                                    o43))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused4 
                                                                    o44)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused10 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused7 
                                                                    res2)
                                                                    (and
                                                                    (= 
                                                                    o45 (store 
                                                                    res2 
                                                                    i1 
                                                                    o44))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused 
                                                                    o45)
                                                                    (and
                                                                    (= 
                                                                    resqtunused4 
                                                                    (map__refqtmk
                                                                    res4))
                                                                    (and
                                                                    (= 
                                                                    res4 
                                                                    o45)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused11 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused8 
                                                                    res4)
                                                                    (and
                                                                    (= 
                                                                    temp___927 (select 
                                                                    res4 
                                                                    i1))
                                                                    (and
                                                                    (= 
                                                                    getqtresultqtunused6 
                                                                    temp___927)
                                                                    (and
                                                                    (= 
                                                                    usq_1 
                                                                    (us_split_fields11
                                                                    temp___927))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused7 
                                                                    usq_1)
                                                                    (and
                                                                    (= 
                                                                    o46 
                                                                    (rec__red_black_trees__black_count__count
                                                                    usq_1))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__countqtresultqtunused1 
                                                                    o46)
                                                                    (and
                                                                    (= 
                                                                    o47 
                                                                    (rec__red_black_trees__black_count__depth
                                                                    usq_1))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__depthqtresultqtunused2 
                                                                    o47)
                                                                    (and
                                                                    (= 
                                                                    o48 
                                                                    (us_split_fields11
                                                                    count_l))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused8 
                                                                    o48)
                                                                    (and
                                                                    (= 
                                                                    o49 
                                                                    (rec__red_black_trees__black_count__count
                                                                    o48))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__countqtresultqtunused2 
                                                                    o49)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o49) 
                                                                    o50)
                                                                    (and
                                                                    (= 
                                                                    to_repqtresultqtunused2 
                                                                    o50)
                                                                    (and
                                                                    (= 
                                                                    o51 
                                                                    (us_split_fields11
                                                                    count_r))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused9 
                                                                    o51)
                                                                    (and
                                                                    (= 
                                                                    o52 
                                                                    (rec__red_black_trees__black_count__count
                                                                    o51))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__countqtresultqtunused3 
                                                                    o52)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o52) 
                                                                    o53)
                                                                    (and
                                                                    (= 
                                                                    to_repqtresultqtunused3 
                                                                    o53)
                                                                    (and
                                                                    (= 
                                                                    o54 
                                                                    (ite (= 
                                                                    o53 
                                                                    o50)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused1 
                                                                    o54)
                                                                    (and
                                                                    (= 
                                                                    o55 
                                                                    (us_split_fieldsqtmk5
                                                                    o54
                                                                    o47
                                                                    o46))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused5 
                                                                    o55)
                                                                    (and
                                                                    (= 
                                                                    o56 
                                                                    (us_repqtmk5
                                                                    o55))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused5 
                                                                    o56)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused12 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused9 
                                                                    res4)
                                                                    (and
                                                                    (= 
                                                                    o57 (store 
                                                                    res4 
                                                                    i1 
                                                                    o56))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused1 
                                                                    o57)
                                                                    (and
                                                                    (= 
                                                                    resqtunused5 
                                                                    (map__refqtmk
                                                                    res5))
                                                                    (and
                                                                    (= 
                                                                    res5 
                                                                    o57)
                                                                    (and
                                                                    (= 
                                                                    o58 
                                                                    (us_split_fields7
                                                                    t))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused10 
                                                                    o58)
                                                                    (and
                                                                    (= 
                                                                    temp___935 
                                                                    (rec__red_black_trees__rbt__color
                                                                    o58))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__rbt__colorqtresultqtunused 
                                                                    temp___935)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused13 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    o59 (select 
                                                                    temp___935 
                                                                    i1))
                                                                    (and
                                                                    (= 
                                                                    getqtresultqtunused7 
                                                                    o59)
                                                                    (and
                                                                    (= 
                                                                    (to_rep3
                                                                    o59) 
                                                                    o60)
                                                                    (and
                                                                    (= 
                                                                    to_repqtresultqtunused4 
                                                                    o60)
                                                                    (and
                                                                    (= 
                                                                    o61 
                                                                    (ite (= 
                                                                    o60 0)
                                                                    true
                                                                    false))
                                                                    (and
                                                                    (= 
                                                                    infix_eqqtresultqtunused2 
                                                                    o61)
                                                                    (and
                                                                    (= 
                                                                    spark__branchqtunused2 
                                                                    (bool__refqtmk
                                                                    spark__branch2))
                                                                    (and
                                                                    (= 
                                                                    spark__branch2 
                                                                    o61)
                                                                    (and
                                                                    (= 
                                                                    bool__contentqtresultqtunused2 
                                                                    spark__branch2)
                                                                    (ite (= 
                                                                    spark__branch2 true)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused16 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused12 
                                                                    res5)
                                                                    (and
                                                                    (= 
                                                                    temp___930 (select 
                                                                    res5 
                                                                    i1))
                                                                    (and
                                                                    (= 
                                                                    getqtresultqtunused9 
                                                                    temp___930)
                                                                    (and
                                                                    (= 
                                                                    usq_3 
                                                                    (us_split_fields11
                                                                    temp___930))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused13 
                                                                    usq_3)
                                                                    (and
                                                                    (= 
                                                                    o71 
                                                                    (us_split_fields11
                                                                    count_l))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused14 
                                                                    o71)
                                                                    (and
                                                                    (= 
                                                                    o72 
                                                                    (rec__red_black_trees__black_count__count
                                                                    o71))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__countqtresultqtunused5 
                                                                    o72)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o72) 
                                                                    o73)
                                                                    (and
                                                                    (= 
                                                                    to_repqtresultqtunused6 
                                                                    o73)
                                                                    (and
                                                                    (= 
                                                                    o74 (+ 
                                                                    o73 1))
                                                                    (and
                                                                    (= 
                                                                    infix_plqtresultqtunused1 
                                                                    o74)
                                                                    (and
                                                                    (in_range1
                                                                    o74)
                                                                    (and
                                                                    (= 
                                                                    range_check_qtresultqtunused 
                                                                    o74)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o75) 
                                                                    o74)
                                                                    (and
                                                                    (= 
                                                                    of_repqtresultqtunused2 
                                                                    o75)
                                                                    (and
                                                                    (= 
                                                                    o76 
                                                                    (rec__red_black_trees__black_count__depth
                                                                    usq_3))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__depthqtresultqtunused4 
                                                                    o76)
                                                                    (and
                                                                    (= 
                                                                    o77 
                                                                    (rec__red_black_trees__black_count__status
                                                                    usq_3))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__statusqtresultqtunused2 
                                                                    o77)
                                                                    (and
                                                                    (= 
                                                                    o78 
                                                                    (us_split_fieldsqtmk5
                                                                    o77
                                                                    o76
                                                                    o75))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused7 
                                                                    o78)
                                                                    (and
                                                                    (= 
                                                                    o79 
                                                                    (us_repqtmk5
                                                                    o78))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused7 
                                                                    o79)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused17 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused13 
                                                                    res5)
                                                                    (and
                                                                    (= 
                                                                    o80 (store 
                                                                    res5 
                                                                    i1 
                                                                    o79))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused3 
                                                                    o80)
                                                                    (= 
                                                                    res3 
                                                                    o80)))))))))))))))))))))))))))))))
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused14 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused10 
                                                                    res5)
                                                                    (and
                                                                    (= 
                                                                    temp___933 (select 
                                                                    res5 
                                                                    i1))
                                                                    (and
                                                                    (= 
                                                                    getqtresultqtunused8 
                                                                    temp___933)
                                                                    (and
                                                                    (= 
                                                                    usq_2 
                                                                    (us_split_fields11
                                                                    temp___933))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused11 
                                                                    usq_2)
                                                                    (and
                                                                    (= 
                                                                    o62 
                                                                    (us_split_fields11
                                                                    count_l))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused12 
                                                                    o62)
                                                                    (and
                                                                    (= 
                                                                    o63 
                                                                    (rec__red_black_trees__black_count__count
                                                                    o62))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__countqtresultqtunused4 
                                                                    o63)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o63) 
                                                                    o64)
                                                                    (and
                                                                    (= 
                                                                    to_repqtresultqtunused5 
                                                                    o64)
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o65) 
                                                                    o64)
                                                                    (and
                                                                    (= 
                                                                    of_repqtresultqtunused1 
                                                                    o65)
                                                                    (and
                                                                    (= 
                                                                    o66 
                                                                    (rec__red_black_trees__black_count__depth
                                                                    usq_2))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__depthqtresultqtunused3 
                                                                    o66)
                                                                    (and
                                                                    (= 
                                                                    o67 
                                                                    (rec__red_black_trees__black_count__status
                                                                    usq_2))
                                                                    (and
                                                                    (= 
                                                                    rec__red_black_trees__black_count__statusqtresultqtunused1 
                                                                    o67)
                                                                    (and
                                                                    (= 
                                                                    o68 
                                                                    (us_split_fieldsqtmk5
                                                                    o67
                                                                    o66
                                                                    o65))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused6 
                                                                    o68)
                                                                    (and
                                                                    (= 
                                                                    o69 
                                                                    (us_repqtmk5
                                                                    o68))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused6 
                                                                    o69)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused15 
                                                                    i1)
                                                                    (and
                                                                    (= 
                                                                    map__contentqtresultqtunused11 
                                                                    res5)
                                                                    (and
                                                                    (= 
                                                                    o70 (store 
                                                                    res5 
                                                                    i1 
                                                                    o69))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused2 
                                                                    o70)
                                                                    (= 
                                                                    res3 
                                                                    o70)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                    (= 
                                                                    res3 
                                                                    res2))))))))))))))))))))))))))))))))))))))))))))))
    (= res3 res2)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused18 () Int
  i1)

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused3 () Bool
  (ite (= i1 100) true false))

;; "H"
(assert (not (= i1 100)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused19 () Int
  i1)

;; "o"
(define-fun o81 () Int
  (+ i1 1))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused2 () Int
  o81)

(declare-const i2 Int)

;; "i'unused"
(define-fun iqtunused2 () int__ref
  (int__refqtmk i2))

;; "H"
(assert (= i2 o81))

;; "o"
(define-fun o82 () Bool
  (distinct 1 0))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused4 () Bool
  o82)

;; "o"
(define-fun o83 () us_split_fields10
  (us_split_fieldsqtmk5 o82 rliteral1 rliteral1))

;; "__split_fields'mk'result'unused"
(define-fun us_split_fieldsqtmkqtresultqtunused8 () us_split_fields10
  o83)

;; "o"
(define-fun o84 () us_rep6
  (us_repqtmk5 o83))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused8 () us_rep6
  o84)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused14 () (Array Int us_rep6)
  res3)

;; "o"
(define-fun o85 () us_rep6
  (select res3 0))

;; "get'result'unused"
(define-fun getqtresultqtunused10 () us_rep6
  o85)

;; "bool_eq'result'unused"
(define-fun bool_eqqtresultqtunused2 () Bool
  (bool_eq o85 o84))

;; "LoopInvariant"
(assert
  (= (bool_eq
       (select res3 0)
       (us_repqtmk5
         (us_split_fieldsqtmk5 (distinct 1 0) rliteral1 rliteral1))) true))

(declare-const i3 Int)

;; "H"
(assert (<= 1 i3))

;; "H"
(assert (<= i3 100))

;; Goal "def'vc"
;; File "red_black_trees.adb", line 23, characters 0-0
(assert
  (not
  (<= (to_rep
        (rec__red_black_trees__black_count__count
          (us_split_fields11 (select res3 i3)))) (to_rep
                                                   (rec__red_black_trees__black_count__depth
                                                     (us_split_fields11
                                                       (select res3 i3)))))))

(check-sat)
