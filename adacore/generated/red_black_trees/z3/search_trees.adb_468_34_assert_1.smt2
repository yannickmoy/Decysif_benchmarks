;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (or (= x 0) (= x 1)))

(declare-sort extended_index_type 0)

;; "extended_index_type'int"
(declare-fun extended_index_typeqtint (extended_index_type) Int)

;; "extended_index_type'axiom"
(assert
  (forall ((i extended_index_type))
    (and
      (<= 0 (extended_index_typeqtint i))
      (<= (extended_index_typeqtint i) 100))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 100)))

;; "to_rep"
(define-fun to_rep ((x extended_index_type)) Int
  (extended_index_typeqtint x))

;; "of_rep"
(declare-fun of_rep (Int) extended_index_type)

;; "inversion_axiom"
(assert
  (forall ((x extended_index_type))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x extended_index_type))
    (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-sort position_type 0)

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "to_rep"
(declare-fun to_rep1 (position_type) Int)

;; "of_rep"
(declare-fun of_rep1 (Int) position_type)

;; "inversion_axiom"
(assert
  (forall ((x position_type))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x position_type))
    (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__binary_trees__cell__left extended_index_type)(rec__binary_trees__cell__right extended_index_type)(rec__binary_trees__cell__parent extended_index_type)(rec__binary_trees__cell__position position_type)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const binary_trees__cell__left__first__bit Int)

(declare-const binary_trees__cell__left__last__bit Int)

(declare-const binary_trees__cell__left__position Int)

;; "binary_trees__cell__left__first__bit_axiom"
(assert (<= 0 binary_trees__cell__left__first__bit))

;; "binary_trees__cell__left__last__bit_axiom"
(assert
  (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))

;; "binary_trees__cell__left__position_axiom"
(assert (<= 0 binary_trees__cell__left__position))

(declare-const binary_trees__cell__right__first__bit Int)

(declare-const binary_trees__cell__right__last__bit Int)

(declare-const binary_trees__cell__right__position Int)

;; "binary_trees__cell__right__first__bit_axiom"
(assert (<= 0 binary_trees__cell__right__first__bit))

;; "binary_trees__cell__right__last__bit_axiom"
(assert
  (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))

;; "binary_trees__cell__right__position_axiom"
(assert (<= 0 binary_trees__cell__right__position))

(declare-const binary_trees__cell__parent__first__bit Int)

(declare-const binary_trees__cell__parent__last__bit Int)

(declare-const binary_trees__cell__parent__position Int)

;; "binary_trees__cell__parent__first__bit_axiom"
(assert (<= 0 binary_trees__cell__parent__first__bit))

;; "binary_trees__cell__parent__last__bit_axiom"
(assert
  (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))

;; "binary_trees__cell__parent__position_axiom"
(assert (<= 0 binary_trees__cell__parent__position))

(declare-const binary_trees__cell__position__first__bit Int)

(declare-const binary_trees__cell__position__last__bit Int)

(declare-const binary_trees__cell__position__position Int)

;; "binary_trees__cell__position__first__bit_axiom"
(assert (<= 0 binary_trees__cell__position__first__bit))

;; "binary_trees__cell__position__last__bit_axiom"
(assert
  (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))

;; "binary_trees__cell__position__position_axiom"
(assert (<= 0 binary_trees__cell__position__position))

(declare-const dummy us_rep)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-datatypes ()
  ((us_split_fields2
   (us_split_fieldsqtmk1
   (rec__binary_trees__forest__s extended_index_type)(rec__binary_trees__forest__c (Array Int us_rep))))))

(declare-datatypes ()
  ((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const binary_trees__forest__s__first__bit Int)

(declare-const binary_trees__forest__s__last__bit Int)

(declare-const binary_trees__forest__s__position Int)

;; "binary_trees__forest__s__first__bit_axiom"
(assert (<= 0 binary_trees__forest__s__first__bit))

;; "binary_trees__forest__s__last__bit_axiom"
(assert
  (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))

;; "binary_trees__forest__s__position_axiom"
(assert (<= 0 binary_trees__forest__s__position))

(declare-const binary_trees__forest__c__first__bit Int)

(declare-const binary_trees__forest__c__last__bit Int)

(declare-const binary_trees__forest__c__position Int)

;; "binary_trees__forest__c__first__bit_axiom"
(assert (<= 0 binary_trees__forest__c__first__bit))

;; "binary_trees__forest__c__last__bit_axiom"
(assert
  (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))

;; "binary_trees__forest__c__position_axiom"
(assert (<= 0 binary_trees__forest__c__position))

(declare-const dummy1 us_rep1)

;; "valid_root"
(declare-fun valid_root (us_rep1
  Int) Bool)

;; "size"
(declare-fun size (us_rep1) Int)

(declare-sort us_rep2 0)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const dummy2 us_rep2)

;; "last"
(declare-fun last (us_rep2) Int)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "get"
(declare-fun get (us_rep2
  Int) Int)

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const dummy3 Int)

;; "length"
(define-fun length ((param__container us_rep2)) Int
  (- (+ (last param__container) 1) 1))

;; "oeq"
(define-fun oeq ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "olt"
(define-fun olt ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (< (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

(declare-datatypes ()
  ((us_split_fields4
   (us_split_fieldsqtmk2
   (rec__tree_model__path_type__a us_rep2)(rec__tree_model__path_type__k Bool)))))

(declare-datatypes ()
  ((us_rep3 (us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-const tree_model__path_type__a__first__bit Int)

(declare-const tree_model__path_type__a__last__bit Int)

(declare-const tree_model__path_type__a__position Int)

;; "tree_model__path_type__a__first__bit_axiom"
(assert (<= 0 tree_model__path_type__a__first__bit))

;; "tree_model__path_type__a__last__bit_axiom"
(assert
  (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))

;; "tree_model__path_type__a__position_axiom"
(assert (<= 0 tree_model__path_type__a__position))

(declare-const tree_model__path_type__k__first__bit Int)

(declare-const tree_model__path_type__k__last__bit Int)

(declare-const tree_model__path_type__k__position Int)

;; "tree_model__path_type__k__first__bit_axiom"
(assert (<= 0 tree_model__path_type__k__first__bit))

;; "tree_model__path_type__k__last__bit_axiom"
(assert
  (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))

;; "tree_model__path_type__k__position_axiom"
(assert (<= 0 tree_model__path_type__k__position))

(declare-const dummy4 us_rep3)

;; "model"
(declare-fun model1 (us_rep1
  Int) (Array Int us_rep3))

;; "parent"
(declare-fun parent (us_rep1
  Int) Int)

;; "position"
(declare-fun position (us_rep1
  Int) Int)

;; "is_add"
(declare-fun is_add (us_rep2
  Int
  us_rep2) Bool)

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 1 x) (<= x 100)))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const component__size1 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment6))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_403 (Array Int us_rep3)) (temp___is_init_399 Bool) (temp___skip_constant_400 Bool) (temp___do_toplevel_401 Bool) (temp___do_typ_inv_402 Bool)) Bool
  (forall ((temp___404 Int))
    (=>
      (and (<= 1 temp___404) (<= temp___404 100))
      (< (length
           (rec__tree_model__path_type__a
             (us_split_fields5 (select temp___expr_403 temp___404)))) 100))))

(declare-sort natural 0)

;; "natural'int"
(declare-fun naturalqtint (natural) Int)

;; "natural'axiom"
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; "in_range"
(define-fun in_range6 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep2 ((x natural)) Int
  (naturalqtint x))

;; "of_rep"
(declare-fun of_rep2 (Int) natural)

;; "inversion_axiom"
(assert
  (forall ((x natural))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x natural)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

;; "ordered_prefix"
(declare-fun ordered_prefix ((Array Int us_rep3)
  (Array Int natural)
  Int
  Int) Bool)

;; "ordered_leafs"
(declare-fun ordered_leafs (us_rep1
  Int
  (Array Int natural)) Bool)

;; "correct_place"
(declare-fun correct_place (us_rep1
  us_rep2
  Int
  Int
  (Array Int natural)) Bool)

;; "all_less_than"
(declare-fun all_less_than (us_rep1
  Int
  (Array Int natural)
  Int) Bool)

;; "all_more_than"
(declare-fun all_more_than (us_rep1
  Int
  (Array Int natural)
  Int) Bool)

;; "ole"
(define-fun ole ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (<= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                              (=>
                                                                (and
                                                                  (<= 1 n)
                                                                  (<= n 
                                                                  (last
                                                                    param__left)))
                                                                (= (get
                                                                    param__left
                                                                    n) 
                                                                (get
                                                                  param__right
                                                                  n))))
                                                         true
                                                         false)))

;; "is_concat"
(declare-fun is_concat (us_rep2
  us_rep2
  us_rep2) Bool)

(declare-const f us_rep1)

(declare-const f_old us_rep1)

(declare-const root Int)

(declare-const v Int)

(declare-const values (Array Int natural))

;; "tree_structure"
(declare-fun tree_structure (us_rep1) Bool)

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_274 us_rep1) (temp___is_init_270 Bool) (temp___skip_constant_271 Bool) (temp___do_toplevel_272 Bool) (temp___do_typ_inv_273 Bool)) Bool
  (=>
    (= temp___do_typ_inv_273 true)
    (= (tree_structure temp___expr_274) true)))

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const component__size2 Int)

(declare-const alignment7 Int)

;; "value__size_axiom"
(assert (<= 0 value__size7))

;; "object__size_axiom"
(assert (<= 0 object__size7))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment7))

;; "size__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (! (=>
         (dynamic_invariant1 param__f true false true true)
         (in_range1 (size param__f))) :pattern ((size param__f)) )))

;; "valid_root__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant1 param__f true false true true)
             (in_range5 param__i))
           (=>
             (< (size param__f) param__i)
             (not (= (valid_root param__f param__i) true)))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "parent__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant1 param__f true false true true)
             (in_range5 param__i))
           (let ((result (parent param__f param__i)))
             (and
               (and
                 (=> (= (valid_root param__f param__i) true) (= result 0))
                 (=> (= (size param__f) 0) (= result 0)))
               (in_range1 result)))) :pattern ((parent param__f param__i)) ))))

;; "position__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (and
               (dynamic_invariant1 param__f true false true true)
               (in_range5 param__i))
             (not (= (parent param__f param__i) 0)))
           (in_range4 (position param__f param__i))) :pattern ((position
                                                                 param__f
                                                                 param__i)) ))))

;; "last__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (! (in_range3 (last param__container)) :pattern ((last param__container)) )))

;; "get__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (forall ((param__position Int))
      (! (=>
           (and
             (in_range3 param__position)
             (and
               (<= 1 param__position)
               (<= param__position (last param__container))))
           (in_range4 (get param__container param__position))) :pattern (
      (get
        param__container
        param__position)) ))))

;; "is_add__post_axiom"
(assert true)

;; "is_add__def_axiom"
(assert
  (forall ((param__s1 us_rep2) (param__s2 us_rep2))
    (forall ((param__d Int))
      (! (=
           (= (is_add param__s1 param__d param__s2) true)
           (and
             (and
               (= (- (length param__s2) 1) (length param__s1))
               (= (olt param__s1 param__s2) true))
             (= (get param__s2 (last param__s2)) param__d))) :pattern (
      (is_add
        param__s1
        param__d
        param__s2)) ))))

;; "model__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (! (=>
           (and
             (and
               (dynamic_invariant1 param__f true false true true)
               (in_range5 param__root))
             (= (valid_root param__f param__root) true))
           (let ((result (model1 param__f param__root)))
             (and
               (and
                 (and
                   (and
                     (and
                       (= (rec__tree_model__path_type__k
                            (us_split_fields5 (select result param__root))) true)
                       (= (last
                            (rec__tree_model__path_type__a
                              (us_split_fields5 (select result param__root)))) 0))
                     (forall ((i Int))
                       (=>
                         (and (<= 1 i) (<= i 100))
                         (=>
                           (not (= i param__root))
                           (ite (and
                                  (not (= (parent param__f i) 0))
                                  (= (rec__tree_model__path_type__k
                                       (us_split_fields5
                                         (select result (parent param__f i)))) true))
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields5 (select result i))) true)
                             (not
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields5 (select result i))) true)))))))
                   (forall ((i Int))
                     (=>
                       (and (<= 1 i) (<= i 100))
                       (ite (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select result i))) true)
                              (not (= i param__root)))
                         (= (is_add
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (select result (parent param__f i))))
                              (position param__f i)
                              (rec__tree_model__path_type__a
                                (us_split_fields5 (select result i)))) true)
                         (= (last
                              (rec__tree_model__path_type__a
                                (us_split_fields5 (select result i)))) 0)))))
                 (forall ((i Int))
                   (=>
                     (and (<= 1 i) (<= i 100))
                     (=>
                       (= (rec__tree_model__path_type__k
                            (us_split_fields5 (select result i))) true)
                       (forall ((j Int))
                         (=>
                           (and (<= 1 j) (<= j 100))
                           (=>
                             (and
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields5 (select result j))) true)
                               (= (oeq
                                    (rec__tree_model__path_type__a
                                      (us_split_fields5 (select result i)))
                                    (rec__tree_model__path_type__a
                                      (us_split_fields5 (select result j)))) true))
                             (= j i))))))))
               (dynamic_invariant result true false true true)))) :pattern (
      (model1
        param__f
        param__root)) ))))

;; "ordered_prefix__post_axiom"
(assert
  (forall ((param__model (Array Int us_rep3)))
    (forall ((param__values (Array Int natural)))
      (forall ((param__i Int) (param__j Int))
        (! (=>
             (and
               (and
                 (and
                   (dynamic_invariant param__model true false true true)
                   (in_range5 param__i))
                 (in_range5 param__j))
               (and
                 (and
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5 (select param__model param__i))) true)
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5 (select param__model param__j))) true))
                 (= (olt
                      (rec__tree_model__path_type__a
                        (us_split_fields5 (select param__model param__i)))
                      (rec__tree_model__path_type__a
                        (us_split_fields5 (select param__model param__j)))) true)))
             (in_range
               (ite (ordered_prefix
                      param__model
                      param__values
                      param__i
                      param__j) 1 0))) :pattern ((ordered_prefix
                                                   param__model
                                                   param__values
                                                   param__i
                                                   param__j)) )))))

;; "ordered_prefix__def_axiom"
(assert
  (forall ((param__model (Array Int us_rep3)))
    (forall ((param__values (Array Int natural)))
      (forall ((param__i Int) (param__j Int))
        (! (=
             (= (ordered_prefix param__model param__values param__i param__j) true)
             (ite (= (get
                       (rec__tree_model__path_type__a
                         (us_split_fields5 (select param__model param__j)))
                       (+ (last
                            (rec__tree_model__path_type__a
                              (us_split_fields5
                                (select param__model param__i)))) 1)) 0)
               (< (to_rep2 (select param__values param__j)) (to_rep2
                                                              (select param__values param__i)))
               (< (to_rep2 (select param__values param__i)) (to_rep2
                                                              (select param__values param__j))))) :pattern (
        (ordered_prefix
          param__model
          param__values
          param__i
          param__j)) )))))

;; "ordered_leafs__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (forall ((param__values (Array Int natural)))
        (! (=>
             (and
               (and
                 (dynamic_invariant1 param__f true false true true)
                 (in_range5 param__root))
               (= (valid_root param__f param__root) true))
             (in_range
               (ite (ordered_leafs param__f param__root param__values) 1 0))) :pattern (
        (ordered_leafs
          param__f
          param__root
          param__values)) )))))

;; "ordered_leafs__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (forall ((param__values (Array Int natural)))
        (! (=
             (= (ordered_leafs param__f param__root param__values) true)
             (forall ((i Int))
               (=>
                 (and (<= 1 i) (<= i 100))
                 (forall ((j Int))
                   (=>
                     (and (<= 1 j) (<= j 100))
                     (=>
                       (and
                         (and
                           (= (rec__tree_model__path_type__k
                                (us_split_fields5
                                  (let ((temp___517 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___517 i)))) true)
                           (= (rec__tree_model__path_type__k
                                (us_split_fields5
                                  (let ((temp___518 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___518 j)))) true))
                         (= (olt
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (let ((temp___519 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___519 i))))
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (let ((temp___520 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___520 j))))) true))
                       (= (ordered_prefix
                            (model1 param__f param__root)
                            param__values
                            i
                            j) true))))))) :pattern ((ordered_leafs
                                                       param__f
                                                       param__root
                                                       param__values)) )))))

;; "tree_structure__post_axiom"
(assert true)

;; "all_less_than__post_axiom"
(assert true)

;; "all_less_than__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int) (param__v Int))
      (forall ((param__values (Array Int natural)))
        (! (=
             (= (all_less_than param__f param__root param__values param__v) true)
             (forall ((j Int))
               (=>
                 (and (<= 1 j) (<= j 100))
                 (=>
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5
                          (let ((temp___529 (model1 param__f param__root)))
                            (select temp___529 j)))) true)
                   (< (to_rep2 (select param__values j)) param__v))))) :pattern (
        (all_less_than
          param__f
          param__root
          param__values
          param__v)) )))))

;; "all_more_than__post_axiom"
(assert true)

;; "all_more_than__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int) (param__v Int))
      (forall ((param__values (Array Int natural)))
        (! (=
             (= (all_more_than param__f param__root param__values param__v) true)
             (forall ((j Int))
               (=>
                 (and (<= 1 j) (<= j 100))
                 (=>
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5
                          (let ((temp___531 (model1 param__f param__root)))
                            (select temp___531 j)))) true)
                   (< param__v (to_rep2 (select param__values j))))))) :pattern (
        (all_more_than
          param__f
          param__root
          param__values
          param__v)) )))))

;; "correct_place__post_axiom"
(assert true)

;; "correct_place__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__a us_rep2))
      (forall ((param__root Int) (param__v Int))
        (forall ((param__values (Array Int natural)))
          (! (=
               (= (correct_place
                    param__f
                    param__a
                    param__root
                    param__v
                    param__values) true)
               (and
                 (and
                   (= (valid_root param__f param__root) true)
                   (= (valid_root param__f param__v) true))
                 (forall ((i Int))
                   (=>
                     (and (<= 1 i) (<= i 100))
                     (=>
                       (and
                         (= (rec__tree_model__path_type__k
                              (us_split_fields5
                                (let ((temp___536 (model1
                                                    param__f
                                                    param__root)))
                                  (select temp___536 i)))) true)
                         (= (olt
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (let ((temp___537 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___537 i))))
                              param__a) true))
                       (ite (= (get
                                 param__a
                                 (+ (last
                                      (rec__tree_model__path_type__a
                                        (us_split_fields5
                                          (let ((temp___535 (model1
                                                              param__f
                                                              param__root)))
                                            (select temp___535 i))))) 1)) 0)
                         (= (all_less_than
                              param__f
                              param__v
                              param__values
                              (to_rep2 (select param__values i))) true)
                         (= (all_more_than
                              param__f
                              param__v
                              param__values
                              (to_rep2 (select param__values i))) true))))))) :pattern (
          (correct_place
            param__f
            param__a
            param__root
            param__v
            param__values)) ))))))

;; "is_concat__post_axiom"
(assert true)

;; "is_concat__def_axiom"
(assert
  (forall ((param__q us_rep2) (param__v us_rep2) (param__p us_rep2))
    (! (=
         (= (is_concat param__q param__v param__p) true)
         (and
           (and
             (and
               (= (- (length param__p) (length param__v)) (length param__q))
               (forall ((i Int))
                 (=>
                   (and (<= 1 i) (<= i (last param__q)))
                   (= (get param__p i) (get param__q i)))))
             (forall ((i Int))
               (=>
                 (and (<= 1 i) (<= i (last param__v)))
                 (= (get param__p (+ i (last param__q))) (get param__v i)))))
           (forall ((i Int))
             (=>
               (and (<= (+ (last param__q) 1) i) (<= i (last param__p)))
               (= (get param__v (- i (last param__q))) (get param__p i)))))) :pattern (
    (is_concat
      param__q
      param__v
      param__p)) )))

;; "Assume"
(assert (dynamic_invariant1 f true false true true))

;; "Assume"
(assert (dynamic_invariant1 f_old true false true true))

;; "Assume"
(assert (in_range5 root))

;; "Assume"
(assert (in_range5 v))

;; "Assume"
(assert true)

;; "Assume"
(assert
  (and
    (and
      (and
        (and
          (and
            (and
              (and
                (and
                  (and
                    (and
                      (and
                        (and
                          (= (valid_root f_old root) true)
                          (= (valid_root f root) true))
                        (= (valid_root f_old v) true))
                      (not (= (valid_root f v) true)))
                    (= (rec__tree_model__path_type__k
                         (us_split_fields5 (select (model1 f root) v))) true))
                  (= (ordered_leafs f_old root values) true))
                (= (ordered_leafs f_old v values) true))
              (= (correct_place
                   f_old
                   (rec__tree_model__path_type__a
                     (us_split_fields5 (select (model1 f root) v)))
                   root
                   v
                   values) true))
            (forall ((i Int))
              (=>
                (and (<= 1 i) (<= i 100))
                (=>
                  (= (rec__tree_model__path_type__k
                       (us_split_fields5 (select (model1 f root) i))) true)
                  (ite (= (ole
                            (rec__tree_model__path_type__a
                              (us_split_fields5 (select (model1 f root) v)))
                            (rec__tree_model__path_type__a
                              (us_split_fields5 (select (model1 f root) i)))) true)
                    (= (rec__tree_model__path_type__k
                         (us_split_fields5 (select (model1 f_old v) i))) true)
                    (= (rec__tree_model__path_type__k
                         (us_split_fields5 (select (model1 f_old root) i))) true))))))
          (forall ((i Int))
            (=>
              (and (<= 1 i) (<= i 100))
              (=>
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f_old root) i))) true)
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f root) i))) true)))))
        (forall ((i Int))
          (=>
            (and (<= 1 i) (<= i 100))
            (=>
              (and
                (not (= v 0))
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f_old v) i))) true))
              (= (rec__tree_model__path_type__k
                   (us_split_fields5 (select (model1 f root) i))) true)))))
      (forall ((i Int))
        (=>
          (and (<= 1 i) (<= i 100))
          (=>
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select (model1 f_old root) i))) true)
            (= (oeq
                 (rec__tree_model__path_type__a
                   (us_split_fields5 (select (model1 f_old root) i)))
                 (rec__tree_model__path_type__a
                   (us_split_fields5 (select (model1 f root) i)))) true)))))
    (forall ((i Int))
      (=>
        (and (<= 1 i) (<= i 100))
        (=>
          (and
            (not (= v 0))
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select (model1 f_old v) i))) true))
          (= (is_concat
               (rec__tree_model__path_type__a
                 (us_split_fields5 (select (model1 f root) v)))
               (rec__tree_model__path_type__a
                 (us_split_fields5 (select (model1 f_old v) i)))
               (rec__tree_model__path_type__a
                 (us_split_fields5 (select (model1 f root) i)))) true))))))

(declare-const i Int)

;; "i'unused"
(define-fun iqtunused () int__ref
  (int__refqtmk i))

;; "H"
(assert (= i 1))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  i)

;; "o"
(define-fun o () Bool
  (ite (<= i 100) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused () Bool
  o)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  i)

;; "o"
(define-fun o1 () Bool
  (ite (<= 1 i) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused1 () Bool
  o1)

;; "o"
(define-fun o2 () Bool
  (and o1 o))

;; "andb'result'unused"
(define-fun andbqtresultqtunused () Bool
  o2)

;; "H"
(assert (= o2 true))

(declare-const usf Int)

(declare-const anyqtresultqtunused Int)

;; "H"
(assert (= anyqtresultqtunused usf))

(declare-const kqtunused Int)

;; "H"
(assert (= kqtunused usf))

(declare-const int__contentqtresultqtunused2 Int)

;; "H"
(assert (= int__contentqtresultqtunused2 i))

(declare-const o3 Int)

;; "H"
(assert (= o3 (- i 1)))

(declare-const infix_mnqtresultqtunused Int)

;; "H"
(assert (= infix_mnqtresultqtunused o3))

(declare-const o4 Bool)

;; "H"
(assert (= o4 (ite (<= usf o3) true false)))

(declare-const infix_lseqqtresultqtunused2 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused2 o4))

(declare-const o5 Bool)

;; "H"
(assert (= o5 (ite (<= 1 usf) true false)))

(declare-const infix_lseqqtresultqtunused3 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused3 o5))

(declare-const andbqtresultqtunused1 Bool)

;; "H"
(assert (= andbqtresultqtunused1 (and o5 o4)))

;; "_f'unused"
(define-fun usfqtunused () Bool
  (ite (forall ((k Int))
         (=>
           (and (<= 1 k) (<= k (- i 1)))
           (forall ((j Int))
             (=>
               (and (<= 1 j) (<= j 100))
               (=>
                 (and
                   (and
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) k))) true)
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) j))) true))
                   (= (olt
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) k)))
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) j)))) true))
                 (= (ordered_prefix (model1 f root) values k j) true))))))
    true
    false))

;; "any'result'unused"
(define-fun anyqtresultqtunused1 () Bool
  (ite (forall ((k Int))
         (=>
           (and (<= 1 k) (<= k (- i 1)))
           (forall ((j Int))
             (=>
               (and (<= 1 j) (<= j 100))
               (=>
                 (and
                   (and
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) k))) true)
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) j))) true))
                   (= (olt
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) k)))
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) j)))) true))
                 (= (ordered_prefix (model1 f root) values k j) true))))))
    true
    false))

(declare-const i1 Int)

;; "i'unused"
(define-fun iqtunused1 () int__ref
  (int__refqtmk i1))

;; "LoopInvariant"
(assert
  (forall ((k Int))
    (=>
      (and (<= 1 k) (<= k (- i1 1)))
      (forall ((j Int))
        (=>
          (and (<= 1 j) (<= j 100))
          (=>
            (and
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f root) k))) true)
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f root) j))) true))
              (= (olt
                   (rec__tree_model__path_type__a
                     (us_split_fields5 (select (model1 f root) k)))
                   (rec__tree_model__path_type__a
                     (us_split_fields5 (select (model1 f root) j)))) true))
            (= (ordered_prefix (model1 f root) values k j) true)))))))

;; "Assume"
(assert (and (<= 1 i1) (<= i1 100)))

(declare-const j Int)

;; "j'unused"
(define-fun jqtunused () int__ref
  (int__refqtmk j))

;; "H"
(assert (= j 1))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  j)

;; "o"
(define-fun o6 () Bool
  (ite (<= j 100) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused4 () Bool
  o6)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused4 () Int
  j)

;; "o"
(define-fun o7 () Bool
  (ite (<= 1 j) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused5 () Bool
  o7)

;; "o"
(define-fun o8 () Bool
  (and o7 o6))

;; "andb'result'unused"
(define-fun andbqtresultqtunused2 () Bool
  o8)

;; "H"
(assert (= o8 true))

(declare-const spark__branch Bool)

;; "spark__branch'unused"
(define-fun spark__branchqtunused () bool__ref
  (bool__refqtmk spark__branch))

(declare-const o9 Int)

;; "H"
(assert (= o9 root))

(declare-const o10 us_rep1)

;; "H"
(assert (= o10 f_old))

(declare-const temp___2992 (Array Int us_rep3))

;; "H"
(assert (= temp___2992 (model1 o10 o9)))

;; "H"
(assert (dynamic_invariant temp___2992 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___2992 o9))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___2992 o9)))) 0))

;; "H"
(assert
  (forall ((i2 Int))
    (=>
      (and (<= 1 i2) (<= i2 100))
      (=>
        (not (= i2 o9))
        (ite (and
               (not (= (parent o10 i2) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5 (select temp___2992 (parent o10 i2)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___2992 i2))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___2992 i2))) true)))))))

;; "H"
(assert
  (forall ((i2 Int))
    (=>
      (and (<= 1 i2) (<= i2 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___2992 i2))) true)
             (not (= i2 o9)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___2992 (parent o10 i2))))
             (position o10 i2)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___2992 i2)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___2992 i2)))) 0)))))

;; "H"
(assert
  (forall ((i2 Int))
    (=>
      (and (<= 1 i2) (<= i2 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___2992 i2))) true)
        (forall ((j1 Int))
          (=>
            (and (<= 1 j1) (<= j1 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___2992 j1))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___2992 i2)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___2992 j1)))) true))
              (= j1 i2))))))))

(declare-const modelqtresultqtunused (Array Int us_rep3))

;; "H"
(assert (= modelqtresultqtunused temp___2992))

(declare-const int__contentqtresultqtunused5 Int)

;; "H"
(assert (= int__contentqtresultqtunused5 i1))

(declare-const o11 us_rep3)

;; "H"
(assert (= o11 (select temp___2992 i1)))

(declare-const getqtresultqtunused us_rep3)

;; "H"
(assert (= getqtresultqtunused o11))

(declare-const o12 us_split_fields4)

;; "H"
(assert (= o12 (us_split_fields5 o11)))

(declare-const us_split_fieldsqtresultqtunused us_split_fields4)

;; "H"
(assert (= us_split_fieldsqtresultqtunused o12))

(declare-const o13 Bool)

;; "H"
(assert (= o13 (rec__tree_model__path_type__k o12)))

(declare-const rec__tree_model__path_type__kqtresultqtunused Bool)

;; "H"
(assert (= rec__tree_model__path_type__kqtresultqtunused o13))

(declare-const o14 Bool)

(declare-const o15 Int)

(declare-const o16 us_rep1)

(declare-const temp___2993 (Array Int us_rep3))

(declare-const modelqtresultqtunused1 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused6 Int)

(declare-const o17 us_rep3)

(declare-const getqtresultqtunused1 us_rep3)

(declare-const o18 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused1 us_split_fields4)

(declare-const rec__tree_model__path_type__kqtresultqtunused1 Bool)

;; "H"
(assert
  (ite (= o13 true)
    (and
      (= o15 root)
      (and
        (= o16 f_old)
        (and
          (= temp___2993 (model1 o16 o15))
          (and
            (and
              (dynamic_invariant temp___2993 true false true true)
              (and
                (and
                  (and
                    (and
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___2993 o15))) true)
                      (= (last
                           (rec__tree_model__path_type__a
                             (us_split_fields5 (select temp___2993 o15)))) 0))
                    (forall ((i2 Int))
                      (=>
                        (and (<= 1 i2) (<= i2 100))
                        (=>
                          (not (= i2 o15))
                          (ite (and
                                 (not (= (parent o16 i2) 0))
                                 (= (rec__tree_model__path_type__k
                                      (us_split_fields5
                                        (select temp___2993 (parent o16 i2)))) true))
                            (= (rec__tree_model__path_type__k
                                 (us_split_fields5 (select temp___2993 i2))) true)
                            (not
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___2993 i2))) true)))))))
                  (forall ((i2 Int))
                    (=>
                      (and (<= 1 i2) (<= i2 100))
                      (ite (and
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields5 (select temp___2993 i2))) true)
                             (not (= i2 o15)))
                        (= (is_add
                             (rec__tree_model__path_type__a
                               (us_split_fields5
                                 (select temp___2993 (parent o16 i2))))
                             (position o16 i2)
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___2993 i2)))) true)
                        (= (last
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___2993 i2)))) 0)))))
                (forall ((i2 Int))
                  (=>
                    (and (<= 1 i2) (<= i2 100))
                    (=>
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___2993 i2))) true)
                      (forall ((j1 Int))
                        (=>
                          (and (<= 1 j1) (<= j1 100))
                          (=>
                            (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___2993 j1))) true)
                              (= (oeq
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___2993 i2)))
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___2993 j1)))) true))
                            (= j1 i2)))))))))
            (and
              (= modelqtresultqtunused1 temp___2993)
              (and
                (= int__contentqtresultqtunused6 j)
                (and
                  (= o17 (select temp___2993 j))
                  (and
                    (= getqtresultqtunused1 o17)
                    (and
                      (= o18 (us_split_fields5 o17))
                      (and
                        (= us_split_fieldsqtresultqtunused1 o18)
                        (and
                          (= o14 (rec__tree_model__path_type__k o18))
                          (= rec__tree_model__path_type__kqtresultqtunused1 
                          o14))))))))))))
    (= o14 false)))

(declare-const o19 Bool)

(declare-const o20 Int)

(declare-const o21 us_rep1)

(declare-const temp___2995 (Array Int us_rep3))

(declare-const modelqtresultqtunused2 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused7 Int)

(declare-const o22 us_rep3)

(declare-const getqtresultqtunused2 us_rep3)

(declare-const o23 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused2 us_split_fields4)

(declare-const o24 us_rep2)

(declare-const rec__tree_model__path_type__aqtresultqtunused us_rep2)

(declare-const o25 Int)

(declare-const o26 us_rep1)

(declare-const temp___2994 (Array Int us_rep3))

(declare-const modelqtresultqtunused3 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused8 Int)

(declare-const o27 us_rep3)

(declare-const getqtresultqtunused3 us_rep3)

(declare-const o28 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused3 us_split_fields4)

(declare-const o29 us_rep2)

(declare-const rec__tree_model__path_type__aqtresultqtunused1 us_rep2)

(declare-const oltqtresultqtunused Bool)

;; "H"
(assert
  (ite (= o14 true)
    (and
      (= o20 root)
      (and
        (= o21 f)
        (and
          (= temp___2995 (model1 o21 o20))
          (and
            (and
              (dynamic_invariant temp___2995 true false true true)
              (and
                (and
                  (and
                    (and
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___2995 o20))) true)
                      (= (last
                           (rec__tree_model__path_type__a
                             (us_split_fields5 (select temp___2995 o20)))) 0))
                    (forall ((i2 Int))
                      (=>
                        (and (<= 1 i2) (<= i2 100))
                        (=>
                          (not (= i2 o20))
                          (ite (and
                                 (not (= (parent o21 i2) 0))
                                 (= (rec__tree_model__path_type__k
                                      (us_split_fields5
                                        (select temp___2995 (parent o21 i2)))) true))
                            (= (rec__tree_model__path_type__k
                                 (us_split_fields5 (select temp___2995 i2))) true)
                            (not
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___2995 i2))) true)))))))
                  (forall ((i2 Int))
                    (=>
                      (and (<= 1 i2) (<= i2 100))
                      (ite (and
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields5 (select temp___2995 i2))) true)
                             (not (= i2 o20)))
                        (= (is_add
                             (rec__tree_model__path_type__a
                               (us_split_fields5
                                 (select temp___2995 (parent o21 i2))))
                             (position o21 i2)
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___2995 i2)))) true)
                        (= (last
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___2995 i2)))) 0)))))
                (forall ((i2 Int))
                  (=>
                    (and (<= 1 i2) (<= i2 100))
                    (=>
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___2995 i2))) true)
                      (forall ((j1 Int))
                        (=>
                          (and (<= 1 j1) (<= j1 100))
                          (=>
                            (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___2995 j1))) true)
                              (= (oeq
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___2995 i2)))
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___2995 j1)))) true))
                            (= j1 i2)))))))))
            (and
              (= modelqtresultqtunused2 temp___2995)
              (and
                (= int__contentqtresultqtunused7 j)
                (and
                  (= o22 (select temp___2995 j))
                  (and
                    (= getqtresultqtunused2 o22)
                    (and
                      (= o23 (us_split_fields5 o22))
                      (and
                        (= us_split_fieldsqtresultqtunused2 o23)
                        (and
                          (= o24 (rec__tree_model__path_type__a o23))
                          (and
                            (= rec__tree_model__path_type__aqtresultqtunused 
                            o24)
                            (and
                              (= o25 root)
                              (and
                                (= o26 f)
                                (and
                                  (= temp___2994 (model1 o26 o25))
                                  (and
                                    (and
                                      (dynamic_invariant
                                        temp___2994
                                        true
                                        false
                                        true
                                        true)
                                      (and
                                        (and
                                          (and
                                            (and
                                              (= (rec__tree_model__path_type__k
                                                   (us_split_fields5
                                                     (select temp___2994 
                                                     o25))) true)
                                              (= (last
                                                   (rec__tree_model__path_type__a
                                                     (us_split_fields5
                                                       (select temp___2994 
                                                       o25)))) 0))
                                            (forall ((i2 Int))
                                              (=>
                                                (and (<= 1 i2) (<= i2 100))
                                                (=>
                                                  (not (= i2 o25))
                                                  (ite (and
                                                         (not
                                                           (= (parent o26 i2) 0))
                                                         (= (rec__tree_model__path_type__k
                                                              (us_split_fields5
                                                                (select 
                                                                temp___2994 
                                                                (parent
                                                                  o26
                                                                  i2)))) true))
                                                    (= (rec__tree_model__path_type__k
                                                         (us_split_fields5
                                                           (select temp___2994 i2))) true)
                                                    (not
                                                      (= (rec__tree_model__path_type__k
                                                           (us_split_fields5
                                                             (select 
                                                             temp___2994 i2))) true)))))))
                                          (forall ((i2 Int))
                                            (=>
                                              (and (<= 1 i2) (<= i2 100))
                                              (ite (and
                                                     (= (rec__tree_model__path_type__k
                                                          (us_split_fields5
                                                            (select temp___2994 i2))) true)
                                                     (not (= i2 o25)))
                                                (= (is_add
                                                     (rec__tree_model__path_type__a
                                                       (us_split_fields5
                                                         (select temp___2994 
                                                         (parent
                                                           o26
                                                           i2))))
                                                     (position o26 i2)
                                                     (rec__tree_model__path_type__a
                                                       (us_split_fields5
                                                         (select temp___2994 i2)))) true)
                                                (= (last
                                                     (rec__tree_model__path_type__a
                                                       (us_split_fields5
                                                         (select temp___2994 i2)))) 0)))))
                                        (forall ((i2 Int))
                                          (=>
                                            (and (<= 1 i2) (<= i2 100))
                                            (=>
                                              (= (rec__tree_model__path_type__k
                                                   (us_split_fields5
                                                     (select temp___2994 i2))) true)
                                              (forall ((j1 Int))
                                                (=>
                                                  (and (<= 1 j1) (<= j1 100))
                                                  (=>
                                                    (and
                                                      (= (rec__tree_model__path_type__k
                                                           (us_split_fields5
                                                             (select 
                                                             temp___2994 j1))) true)
                                                      (= (oeq
                                                           (rec__tree_model__path_type__a
                                                             (us_split_fields5
                                                               (select 
                                                               temp___2994 i2)))
                                                           (rec__tree_model__path_type__a
                                                             (us_split_fields5
                                                               (select 
                                                               temp___2994 j1)))) true))
                                                    (= j1 i2)))))))))
                                    (and
                                      (= modelqtresultqtunused3 temp___2994)
                                      (and
                                        (= int__contentqtresultqtunused8 
                                        i1)
                                        (and
                                          (= o27 (select temp___2994 
                                          i1))
                                          (and
                                            (= getqtresultqtunused3 o27)
                                            (and
                                              (= o28 (us_split_fields5 o27))
                                              (and
                                                (= us_split_fieldsqtresultqtunused3 
                                                o28)
                                                (and
                                                  (= o29 (rec__tree_model__path_type__a
                                                           o28))
                                                  (and
                                                    (= rec__tree_model__path_type__aqtresultqtunused1 
                                                    o29)
                                                    (and
                                                      (= o19 (olt o29 o24))
                                                      (and
                                                        (=
                                                          (= o19 true)
                                                          (and
                                                            (< (length o29) 
                                                            (length
                                                              o24))
                                                            (forall ((n Int))
                                                              (=>
                                                                (and
                                                                  (<= 1 n)
                                                                  (<= n 
                                                                  (last
                                                                    o29)))
                                                                (= (get
                                                                    o29
                                                                    n) 
                                                                (get
                                                                  o24
                                                                  n))))))
                                                        (= oltqtresultqtunused 
                                                        o19)))))))))))))))))))))))))))
    (= o19 false)))

;; "H"
(assert (= spark__branch o19))

(declare-const bool__contentqtresultqtunused Bool)

;; "H"
(assert (= bool__contentqtresultqtunused spark__branch))

;; "H"
(assert
  (=>
    (= spark__branch true)
    (and
      (= (ordered_prefix (model1 f root) values i1 j) true)
      (and (in_range5 i1) (in_range5 j)))))

(declare-const o30 Bool)

(declare-const o31 Int)

;; "H"
(assert (= o31 v))

(declare-const o32 us_rep1)

;; "H"
(assert (= o32 f_old))

(declare-const temp___3000 (Array Int us_rep3))

;; "H"
(assert (= temp___3000 (model1 o32 o31)))

;; "H"
(assert (dynamic_invariant temp___3000 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___3000 o31))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___3000 o31)))) 0))

;; "H"
(assert
  (forall ((i2 Int))
    (=>
      (and (<= 1 i2) (<= i2 100))
      (=>
        (not (= i2 o31))
        (ite (and
               (not (= (parent o32 i2) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5 (select temp___3000 (parent o32 i2)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___3000 i2))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___3000 i2))) true)))))))

;; "H"
(assert
  (forall ((i2 Int))
    (=>
      (and (<= 1 i2) (<= i2 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___3000 i2))) true)
             (not (= i2 o31)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___3000 (parent o32 i2))))
             (position o32 i2)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___3000 i2)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___3000 i2)))) 0)))))

;; "H"
(assert
  (forall ((i2 Int))
    (=>
      (and (<= 1 i2) (<= i2 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___3000 i2))) true)
        (forall ((j1 Int))
          (=>
            (and (<= 1 j1) (<= j1 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___3000 j1))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___3000 i2)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___3000 j1)))) true))
              (= j1 i2))))))))

(declare-const modelqtresultqtunused4 (Array Int us_rep3))

;; "H"
(assert (= modelqtresultqtunused4 temp___3000))

(declare-const int__contentqtresultqtunused9 Int)

;; "H"
(assert (= int__contentqtresultqtunused9 i1))

(declare-const o33 us_rep3)

;; "H"
(assert (= o33 (select temp___3000 i1)))

(declare-const getqtresultqtunused4 us_rep3)

;; "H"
(assert (= getqtresultqtunused4 o33))

(declare-const o34 us_split_fields4)

;; "H"
(assert (= o34 (us_split_fields5 o33)))

(declare-const us_split_fieldsqtresultqtunused4 us_split_fields4)

;; "H"
(assert (= us_split_fieldsqtresultqtunused4 o34))

(declare-const o35 Bool)

;; "H"
(assert (= o35 (rec__tree_model__path_type__k o34)))

(declare-const rec__tree_model__path_type__kqtresultqtunused2 Bool)

;; "H"
(assert (= rec__tree_model__path_type__kqtresultqtunused2 o35))

(declare-const o36 Bool)

(declare-const o37 Int)

(declare-const o38 us_rep1)

(declare-const temp___3001 (Array Int us_rep3))

(declare-const modelqtresultqtunused5 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused10 Int)

(declare-const o39 us_rep3)

(declare-const getqtresultqtunused5 us_rep3)

(declare-const o40 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused5 us_split_fields4)

(declare-const rec__tree_model__path_type__kqtresultqtunused3 Bool)

;; "H"
(assert
  (ite (= o35 true)
    (and
      (= o37 v)
      (and
        (= o38 f_old)
        (and
          (= temp___3001 (model1 o38 o37))
          (and
            (and
              (dynamic_invariant temp___3001 true false true true)
              (and
                (and
                  (and
                    (and
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___3001 o37))) true)
                      (= (last
                           (rec__tree_model__path_type__a
                             (us_split_fields5 (select temp___3001 o37)))) 0))
                    (forall ((i2 Int))
                      (=>
                        (and (<= 1 i2) (<= i2 100))
                        (=>
                          (not (= i2 o37))
                          (ite (and
                                 (not (= (parent o38 i2) 0))
                                 (= (rec__tree_model__path_type__k
                                      (us_split_fields5
                                        (select temp___3001 (parent o38 i2)))) true))
                            (= (rec__tree_model__path_type__k
                                 (us_split_fields5 (select temp___3001 i2))) true)
                            (not
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___3001 i2))) true)))))))
                  (forall ((i2 Int))
                    (=>
                      (and (<= 1 i2) (<= i2 100))
                      (ite (and
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields5 (select temp___3001 i2))) true)
                             (not (= i2 o37)))
                        (= (is_add
                             (rec__tree_model__path_type__a
                               (us_split_fields5
                                 (select temp___3001 (parent o38 i2))))
                             (position o38 i2)
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___3001 i2)))) true)
                        (= (last
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___3001 i2)))) 0)))))
                (forall ((i2 Int))
                  (=>
                    (and (<= 1 i2) (<= i2 100))
                    (=>
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___3001 i2))) true)
                      (forall ((j1 Int))
                        (=>
                          (and (<= 1 j1) (<= j1 100))
                          (=>
                            (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___3001 j1))) true)
                              (= (oeq
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___3001 i2)))
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___3001 j1)))) true))
                            (= j1 i2)))))))))
            (and
              (= modelqtresultqtunused5 temp___3001)
              (and
                (= int__contentqtresultqtunused10 j)
                (and
                  (= o39 (select temp___3001 j))
                  (and
                    (= getqtresultqtunused5 o39)
                    (and
                      (= o40 (us_split_fields5 o39))
                      (and
                        (= us_split_fieldsqtresultqtunused5 o40)
                        (and
                          (= o36 (rec__tree_model__path_type__k o40))
                          (= rec__tree_model__path_type__kqtresultqtunused3 
                          o36))))))))))))
    (= o36 false)))

(declare-const o41 Int)

(declare-const o42 us_rep1)

(declare-const temp___3003 (Array Int us_rep3))

(declare-const modelqtresultqtunused6 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused11 Int)

(declare-const o43 us_rep3)

(declare-const getqtresultqtunused6 us_rep3)

(declare-const o44 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused6 us_split_fields4)

(declare-const o45 us_rep2)

(declare-const rec__tree_model__path_type__aqtresultqtunused2 us_rep2)

(declare-const o46 Int)

(declare-const o47 us_rep1)

(declare-const temp___3002 (Array Int us_rep3))

(declare-const modelqtresultqtunused7 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused12 Int)

(declare-const o48 us_rep3)

(declare-const getqtresultqtunused7 us_rep3)

(declare-const o49 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused7 us_split_fields4)

(declare-const o50 us_rep2)

(declare-const rec__tree_model__path_type__aqtresultqtunused3 us_rep2)

(declare-const oltqtresultqtunused1 Bool)

;; "H"
(assert
  (ite (= o36 true)
    (and
      (= o41 root)
      (and
        (= o42 f)
        (and
          (= temp___3003 (model1 o42 o41))
          (and
            (and
              (dynamic_invariant temp___3003 true false true true)
              (and
                (and
                  (and
                    (and
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___3003 o41))) true)
                      (= (last
                           (rec__tree_model__path_type__a
                             (us_split_fields5 (select temp___3003 o41)))) 0))
                    (forall ((i2 Int))
                      (=>
                        (and (<= 1 i2) (<= i2 100))
                        (=>
                          (not (= i2 o41))
                          (ite (and
                                 (not (= (parent o42 i2) 0))
                                 (= (rec__tree_model__path_type__k
                                      (us_split_fields5
                                        (select temp___3003 (parent o42 i2)))) true))
                            (= (rec__tree_model__path_type__k
                                 (us_split_fields5 (select temp___3003 i2))) true)
                            (not
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___3003 i2))) true)))))))
                  (forall ((i2 Int))
                    (=>
                      (and (<= 1 i2) (<= i2 100))
                      (ite (and
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields5 (select temp___3003 i2))) true)
                             (not (= i2 o41)))
                        (= (is_add
                             (rec__tree_model__path_type__a
                               (us_split_fields5
                                 (select temp___3003 (parent o42 i2))))
                             (position o42 i2)
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___3003 i2)))) true)
                        (= (last
                             (rec__tree_model__path_type__a
                               (us_split_fields5 (select temp___3003 i2)))) 0)))))
                (forall ((i2 Int))
                  (=>
                    (and (<= 1 i2) (<= i2 100))
                    (=>
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select temp___3003 i2))) true)
                      (forall ((j1 Int))
                        (=>
                          (and (<= 1 j1) (<= j1 100))
                          (=>
                            (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___3003 j1))) true)
                              (= (oeq
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___3003 i2)))
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___3003 j1)))) true))
                            (= j1 i2)))))))))
            (and
              (= modelqtresultqtunused6 temp___3003)
              (and
                (= int__contentqtresultqtunused11 j)
                (and
                  (= o43 (select temp___3003 j))
                  (and
                    (= getqtresultqtunused6 o43)
                    (and
                      (= o44 (us_split_fields5 o43))
                      (and
                        (= us_split_fieldsqtresultqtunused6 o44)
                        (and
                          (= o45 (rec__tree_model__path_type__a o44))
                          (and
                            (= rec__tree_model__path_type__aqtresultqtunused2 
                            o45)
                            (and
                              (= o46 root)
                              (and
                                (= o47 f)
                                (and
                                  (= temp___3002 (model1 o47 o46))
                                  (and
                                    (and
                                      (dynamic_invariant
                                        temp___3002
                                        true
                                        false
                                        true
                                        true)
                                      (and
                                        (and
                                          (and
                                            (and
                                              (= (rec__tree_model__path_type__k
                                                   (us_split_fields5
                                                     (select temp___3002 
                                                     o46))) true)
                                              (= (last
                                                   (rec__tree_model__path_type__a
                                                     (us_split_fields5
                                                       (select temp___3002 
                                                       o46)))) 0))
                                            (forall ((i2 Int))
                                              (=>
                                                (and (<= 1 i2) (<= i2 100))
                                                (=>
                                                  (not (= i2 o46))
                                                  (ite (and
                                                         (not
                                                           (= (parent o47 i2) 0))
                                                         (= (rec__tree_model__path_type__k
                                                              (us_split_fields5
                                                                (select 
                                                                temp___3002 
                                                                (parent
                                                                  o47
                                                                  i2)))) true))
                                                    (= (rec__tree_model__path_type__k
                                                         (us_split_fields5
                                                           (select temp___3002 i2))) true)
                                                    (not
                                                      (= (rec__tree_model__path_type__k
                                                           (us_split_fields5
                                                             (select 
                                                             temp___3002 i2))) true)))))))
                                          (forall ((i2 Int))
                                            (=>
                                              (and (<= 1 i2) (<= i2 100))
                                              (ite (and
                                                     (= (rec__tree_model__path_type__k
                                                          (us_split_fields5
                                                            (select temp___3002 i2))) true)
                                                     (not (= i2 o46)))
                                                (= (is_add
                                                     (rec__tree_model__path_type__a
                                                       (us_split_fields5
                                                         (select temp___3002 
                                                         (parent
                                                           o47
                                                           i2))))
                                                     (position o47 i2)
                                                     (rec__tree_model__path_type__a
                                                       (us_split_fields5
                                                         (select temp___3002 i2)))) true)
                                                (= (last
                                                     (rec__tree_model__path_type__a
                                                       (us_split_fields5
                                                         (select temp___3002 i2)))) 0)))))
                                        (forall ((i2 Int))
                                          (=>
                                            (and (<= 1 i2) (<= i2 100))
                                            (=>
                                              (= (rec__tree_model__path_type__k
                                                   (us_split_fields5
                                                     (select temp___3002 i2))) true)
                                              (forall ((j1 Int))
                                                (=>
                                                  (and (<= 1 j1) (<= j1 100))
                                                  (=>
                                                    (and
                                                      (= (rec__tree_model__path_type__k
                                                           (us_split_fields5
                                                             (select 
                                                             temp___3002 j1))) true)
                                                      (= (oeq
                                                           (rec__tree_model__path_type__a
                                                             (us_split_fields5
                                                               (select 
                                                               temp___3002 i2)))
                                                           (rec__tree_model__path_type__a
                                                             (us_split_fields5
                                                               (select 
                                                               temp___3002 j1)))) true))
                                                    (= j1 i2)))))))))
                                    (and
                                      (= modelqtresultqtunused7 temp___3002)
                                      (and
                                        (= int__contentqtresultqtunused12 
                                        i1)
                                        (and
                                          (= o48 (select temp___3002 
                                          i1))
                                          (and
                                            (= getqtresultqtunused7 o48)
                                            (and
                                              (= o49 (us_split_fields5 o48))
                                              (and
                                                (= us_split_fieldsqtresultqtunused7 
                                                o49)
                                                (and
                                                  (= o50 (rec__tree_model__path_type__a
                                                           o49))
                                                  (and
                                                    (= rec__tree_model__path_type__aqtresultqtunused3 
                                                    o50)
                                                    (and
                                                      (= o30 (olt o50 o45))
                                                      (and
                                                        (=
                                                          (= o30 true)
                                                          (and
                                                            (< (length o50) 
                                                            (length
                                                              o45))
                                                            (forall ((n Int))
                                                              (=>
                                                                (and
                                                                  (<= 1 n)
                                                                  (<= n 
                                                                  (last
                                                                    o50)))
                                                                (= (get
                                                                    o50
                                                                    n) 
                                                                (get
                                                                  o45
                                                                  n))))))
                                                        (= oltqtresultqtunused1 
                                                        o30)))))))))))))))))))))))))))
    (= o30 false)))

(declare-const spark__branch1 Bool)

;; "spark__branch'unused"
(define-fun spark__branchqtunused1 () bool__ref
  (bool__refqtmk spark__branch1))

;; "H"
(assert (= spark__branch1 o30))

;; "bool__content'result'unused"
(define-fun bool__contentqtresultqtunused1 () Bool
  spark__branch1)

;; "H"
(assert (= spark__branch1 true))

;; Goal "def'vc"
;; File "search_trees.adb", line 394, characters 0-0
(assert
  (not
  (= (olt
       (rec__tree_model__path_type__a
         (us_split_fields5 (select (model1 f_old v) i1)))
       (rec__tree_model__path_type__a
         (us_split_fields5 (select (model1 f_old v) j)))) true)))

(check-sat)
