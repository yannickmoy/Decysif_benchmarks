;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (or (= x 0) (= x 1)))

(declare-sort natural 0)

;; "natural'int"
(declare-fun naturalqtint (natural) Int)

;; "natural'axiom"
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep ((x natural)) Int
  (naturalqtint x))

;; "of_rep"
(declare-fun of_rep (Int) natural)

;; "inversion_axiom"
(assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-sort extended_index_type 0)

;; "extended_index_type'int"
(declare-fun extended_index_typeqtint (extended_index_type) Int)

;; "extended_index_type'axiom"
(assert
  (forall ((i extended_index_type))
    (and
      (<= 0 (extended_index_typeqtint i))
      (<= (extended_index_typeqtint i) 100))))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 100)))

;; "to_rep"
(define-fun to_rep1 ((x extended_index_type)) Int
  (extended_index_typeqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) extended_index_type)

;; "inversion_axiom"
(assert
  (forall ((x extended_index_type))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x extended_index_type))
    (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-sort position_type 0)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "to_rep"
(declare-fun to_rep2 (position_type) Int)

;; "of_rep"
(declare-fun of_rep2 (Int) position_type)

;; "inversion_axiom"
(assert
  (forall ((x position_type))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x position_type))
    (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__binary_trees__cell__left extended_index_type)(rec__binary_trees__cell__right extended_index_type)(rec__binary_trees__cell__parent extended_index_type)(rec__binary_trees__cell__position position_type)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const binary_trees__cell__left__first__bit Int)

(declare-const binary_trees__cell__left__last__bit Int)

(declare-const binary_trees__cell__left__position Int)

;; "binary_trees__cell__left__first__bit_axiom"
(assert (<= 0 binary_trees__cell__left__first__bit))

;; "binary_trees__cell__left__last__bit_axiom"
(assert
  (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))

;; "binary_trees__cell__left__position_axiom"
(assert (<= 0 binary_trees__cell__left__position))

(declare-const binary_trees__cell__right__first__bit Int)

(declare-const binary_trees__cell__right__last__bit Int)

(declare-const binary_trees__cell__right__position Int)

;; "binary_trees__cell__right__first__bit_axiom"
(assert (<= 0 binary_trees__cell__right__first__bit))

;; "binary_trees__cell__right__last__bit_axiom"
(assert
  (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))

;; "binary_trees__cell__right__position_axiom"
(assert (<= 0 binary_trees__cell__right__position))

(declare-const binary_trees__cell__parent__first__bit Int)

(declare-const binary_trees__cell__parent__last__bit Int)

(declare-const binary_trees__cell__parent__position Int)

;; "binary_trees__cell__parent__first__bit_axiom"
(assert (<= 0 binary_trees__cell__parent__first__bit))

;; "binary_trees__cell__parent__last__bit_axiom"
(assert
  (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))

;; "binary_trees__cell__parent__position_axiom"
(assert (<= 0 binary_trees__cell__parent__position))

(declare-const binary_trees__cell__position__first__bit Int)

(declare-const binary_trees__cell__position__last__bit Int)

(declare-const binary_trees__cell__position__position Int)

;; "binary_trees__cell__position__first__bit_axiom"
(assert (<= 0 binary_trees__cell__position__first__bit))

;; "binary_trees__cell__position__last__bit_axiom"
(assert
  (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))

;; "binary_trees__cell__position__position_axiom"
(assert (<= 0 binary_trees__cell__position__position))

(declare-const dummy us_rep)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-datatypes ()
  ((us_split_fields2
   (us_split_fieldsqtmk1
   (rec__binary_trees__forest__s extended_index_type)(rec__binary_trees__forest__c (Array Int us_rep))))))

(declare-datatypes ()
  ((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const binary_trees__forest__s__first__bit Int)

(declare-const binary_trees__forest__s__last__bit Int)

(declare-const binary_trees__forest__s__position Int)

;; "binary_trees__forest__s__first__bit_axiom"
(assert (<= 0 binary_trees__forest__s__first__bit))

;; "binary_trees__forest__s__last__bit_axiom"
(assert
  (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))

;; "binary_trees__forest__s__position_axiom"
(assert (<= 0 binary_trees__forest__s__position))

(declare-const binary_trees__forest__c__first__bit Int)

(declare-const binary_trees__forest__c__last__bit Int)

(declare-const binary_trees__forest__c__position Int)

;; "binary_trees__forest__c__first__bit_axiom"
(assert (<= 0 binary_trees__forest__c__first__bit))

;; "binary_trees__forest__c__last__bit_axiom"
(assert
  (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))

;; "binary_trees__forest__c__position_axiom"
(assert (<= 0 binary_trees__forest__c__position))

(declare-const dummy1 us_rep1)

;; "valid_root"
(declare-fun valid_root (us_rep1
  Int) Bool)

;; "size"
(declare-fun size (us_rep1) Int)

(declare-sort us_rep2 0)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const dummy2 us_rep2)

;; "last"
(declare-fun last (us_rep2) Int)

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "get"
(declare-fun get (us_rep2
  Int) Int)

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const dummy3 Int)

;; "length"
(define-fun length ((param__container us_rep2)) Int
  (- (+ (last param__container) 1) 1))

;; "oeq"
(define-fun oeq ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "olt"
(define-fun olt ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (< (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

(declare-datatypes ()
  ((us_split_fields4
   (us_split_fieldsqtmk2
   (rec__tree_model__path_type__a us_rep2)(rec__tree_model__path_type__k Bool)))))

(declare-datatypes ()
  ((us_rep3 (us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-const tree_model__path_type__a__first__bit Int)

(declare-const tree_model__path_type__a__last__bit Int)

(declare-const tree_model__path_type__a__position Int)

;; "tree_model__path_type__a__first__bit_axiom"
(assert (<= 0 tree_model__path_type__a__first__bit))

;; "tree_model__path_type__a__last__bit_axiom"
(assert
  (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))

;; "tree_model__path_type__a__position_axiom"
(assert (<= 0 tree_model__path_type__a__position))

(declare-const tree_model__path_type__k__first__bit Int)

(declare-const tree_model__path_type__k__last__bit Int)

(declare-const tree_model__path_type__k__position Int)

;; "tree_model__path_type__k__first__bit_axiom"
(assert (<= 0 tree_model__path_type__k__first__bit))

;; "tree_model__path_type__k__last__bit_axiom"
(assert
  (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))

;; "tree_model__path_type__k__position_axiom"
(assert (<= 0 tree_model__path_type__k__position))

(declare-const dummy4 us_rep3)

;; "model"
(declare-fun model1 (us_rep1
  Int) (Array Int us_rep3))

;; "parent"
(declare-fun parent (us_rep1
  Int) Int)

;; "position"
(declare-fun position (us_rep1
  Int) Int)

;; "is_add"
(declare-fun is_add (us_rep2
  Int
  us_rep2) Bool)

;; "in_range"
(define-fun in_range6 ((x Int)) Bool
  (and (<= 1 x) (<= x 100)))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const component__size1 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment6))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_403 (Array Int us_rep3)) (temp___is_init_399 Bool) (temp___skip_constant_400 Bool) (temp___do_toplevel_401 Bool) (temp___do_typ_inv_402 Bool)) Bool
  (forall ((temp___404 Int))
    (=>
      (and (<= 1 temp___404) (<= temp___404 100))
      (< (length
           (rec__tree_model__path_type__a
             (us_split_fields5 (select temp___expr_403 temp___404)))) 100))))

;; "ordered_prefix"
(declare-fun ordered_prefix ((Array Int us_rep3)
  (Array Int natural)
  Int
  Int) Bool)

;; "ordered_leafs"
(declare-fun ordered_leafs (us_rep1
  Int
  (Array Int natural)) Bool)

;; "all_less_than"
(declare-fun all_less_than (us_rep1
  Int
  (Array Int natural)
  Int) Bool)

;; "all_more_than"
(declare-fun all_more_than (us_rep1
  Int
  (Array Int natural)
  Int) Bool)

;; "ole"
(define-fun ole ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (<= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                              (=>
                                                                (and
                                                                  (<= 1 n)
                                                                  (<= n 
                                                                  (last
                                                                    param__left)))
                                                                (= (get
                                                                    param__left
                                                                    n) 
                                                                (get
                                                                  param__right
                                                                  n))))
                                                         true
                                                         false)))

(declare-const f us_rep1)

(declare-const f_old us_rep1)

(declare-const root Int)

(declare-const v Int)

(declare-const values (Array Int natural))

;; "is_concat"
(declare-fun is_concat (us_rep2
  us_rep2
  us_rep2) Bool)

;; "tree_structure"
(declare-fun tree_structure (us_rep1) Bool)

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_274 us_rep1) (temp___is_init_270 Bool) (temp___skip_constant_271 Bool) (temp___do_toplevel_272 Bool) (temp___do_typ_inv_273 Bool)) Bool
  (=>
    (= temp___do_typ_inv_273 true)
    (= (tree_structure temp___expr_274) true)))

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const component__size2 Int)

(declare-const alignment7 Int)

;; "value__size_axiom"
(assert (<= 0 value__size7))

;; "object__size_axiom"
(assert (<= 0 object__size7))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment7))

;; "size__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (! (=>
         (dynamic_invariant1 param__f true false true true)
         (in_range2 (size param__f))) :pattern ((size param__f)) )))

;; "valid_root__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant1 param__f true false true true)
             (in_range6 param__i))
           (=>
             (< (size param__f) param__i)
             (not (= (valid_root param__f param__i) true)))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "parent__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant1 param__f true false true true)
             (in_range6 param__i))
           (let ((result (parent param__f param__i)))
             (and
               (and
                 (=> (= (valid_root param__f param__i) true) (= result 0))
                 (=> (= (size param__f) 0) (= result 0)))
               (in_range2 result)))) :pattern ((parent param__f param__i)) ))))

;; "position__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (and
               (dynamic_invariant1 param__f true false true true)
               (in_range6 param__i))
             (not (= (parent param__f param__i) 0)))
           (in_range5 (position param__f param__i))) :pattern ((position
                                                                 param__f
                                                                 param__i)) ))))

;; "last__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (! (in_range4 (last param__container)) :pattern ((last param__container)) )))

;; "get__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (forall ((param__position Int))
      (! (=>
           (and
             (in_range4 param__position)
             (and
               (<= 1 param__position)
               (<= param__position (last param__container))))
           (in_range5 (get param__container param__position))) :pattern (
      (get
        param__container
        param__position)) ))))

;; "is_add__post_axiom"
(assert true)

;; "is_add__def_axiom"
(assert
  (forall ((param__s1 us_rep2) (param__s2 us_rep2))
    (forall ((param__d Int))
      (! (=
           (= (is_add param__s1 param__d param__s2) true)
           (and
             (and
               (= (- (length param__s2) 1) (length param__s1))
               (= (olt param__s1 param__s2) true))
             (= (get param__s2 (last param__s2)) param__d))) :pattern (
      (is_add
        param__s1
        param__d
        param__s2)) ))))

;; "model__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (! (=>
           (and
             (and
               (dynamic_invariant1 param__f true false true true)
               (in_range6 param__root))
             (= (valid_root param__f param__root) true))
           (let ((result (model1 param__f param__root)))
             (and
               (and
                 (and
                   (and
                     (and
                       (= (rec__tree_model__path_type__k
                            (us_split_fields5 (select result param__root))) true)
                       (= (last
                            (rec__tree_model__path_type__a
                              (us_split_fields5 (select result param__root)))) 0))
                     (forall ((i Int))
                       (=>
                         (and (<= 1 i) (<= i 100))
                         (=>
                           (not (= i param__root))
                           (ite (and
                                  (not (= (parent param__f i) 0))
                                  (= (rec__tree_model__path_type__k
                                       (us_split_fields5
                                         (select result (parent param__f i)))) true))
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields5 (select result i))) true)
                             (not
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields5 (select result i))) true)))))))
                   (forall ((i Int))
                     (=>
                       (and (<= 1 i) (<= i 100))
                       (ite (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select result i))) true)
                              (not (= i param__root)))
                         (= (is_add
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (select result (parent param__f i))))
                              (position param__f i)
                              (rec__tree_model__path_type__a
                                (us_split_fields5 (select result i)))) true)
                         (= (last
                              (rec__tree_model__path_type__a
                                (us_split_fields5 (select result i)))) 0)))))
                 (forall ((i Int))
                   (=>
                     (and (<= 1 i) (<= i 100))
                     (=>
                       (= (rec__tree_model__path_type__k
                            (us_split_fields5 (select result i))) true)
                       (forall ((j Int))
                         (=>
                           (and (<= 1 j) (<= j 100))
                           (=>
                             (and
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields5 (select result j))) true)
                               (= (oeq
                                    (rec__tree_model__path_type__a
                                      (us_split_fields5 (select result i)))
                                    (rec__tree_model__path_type__a
                                      (us_split_fields5 (select result j)))) true))
                             (= j i))))))))
               (dynamic_invariant result true false true true)))) :pattern (
      (model1
        param__f
        param__root)) ))))

;; "ordered_prefix__post_axiom"
(assert
  (forall ((param__model (Array Int us_rep3)))
    (forall ((param__values (Array Int natural)))
      (forall ((param__i Int) (param__j Int))
        (! (=>
             (and
               (and
                 (and
                   (dynamic_invariant param__model true false true true)
                   (in_range6 param__i))
                 (in_range6 param__j))
               (and
                 (and
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5 (select param__model param__i))) true)
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5 (select param__model param__j))) true))
                 (= (olt
                      (rec__tree_model__path_type__a
                        (us_split_fields5 (select param__model param__i)))
                      (rec__tree_model__path_type__a
                        (us_split_fields5 (select param__model param__j)))) true)))
             (in_range
               (ite (ordered_prefix
                      param__model
                      param__values
                      param__i
                      param__j) 1 0))) :pattern ((ordered_prefix
                                                   param__model
                                                   param__values
                                                   param__i
                                                   param__j)) )))))

;; "ordered_prefix__def_axiom"
(assert
  (forall ((param__model (Array Int us_rep3)))
    (forall ((param__values (Array Int natural)))
      (forall ((param__i Int) (param__j Int))
        (! (=
             (= (ordered_prefix param__model param__values param__i param__j) true)
             (ite (= (get
                       (rec__tree_model__path_type__a
                         (us_split_fields5 (select param__model param__j)))
                       (+ (last
                            (rec__tree_model__path_type__a
                              (us_split_fields5
                                (select param__model param__i)))) 1)) 0)
               (< (to_rep (select param__values param__j)) (to_rep
                                                             (select param__values param__i)))
               (< (to_rep (select param__values param__i)) (to_rep
                                                             (select param__values param__j))))) :pattern (
        (ordered_prefix
          param__model
          param__values
          param__i
          param__j)) )))))

;; "ordered_leafs__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (forall ((param__values (Array Int natural)))
        (! (=>
             (and
               (and
                 (dynamic_invariant1 param__f true false true true)
                 (in_range6 param__root))
               (= (valid_root param__f param__root) true))
             (in_range
               (ite (ordered_leafs param__f param__root param__values) 1 0))) :pattern (
        (ordered_leafs
          param__f
          param__root
          param__values)) )))))

;; "ordered_leafs__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (forall ((param__values (Array Int natural)))
        (! (=
             (= (ordered_leafs param__f param__root param__values) true)
             (forall ((i Int))
               (=>
                 (and (<= 1 i) (<= i 100))
                 (forall ((j Int))
                   (=>
                     (and (<= 1 j) (<= j 100))
                     (=>
                       (and
                         (and
                           (= (rec__tree_model__path_type__k
                                (us_split_fields5
                                  (let ((temp___517 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___517 i)))) true)
                           (= (rec__tree_model__path_type__k
                                (us_split_fields5
                                  (let ((temp___518 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___518 j)))) true))
                         (= (olt
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (let ((temp___519 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___519 i))))
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (let ((temp___520 (model1
                                                      param__f
                                                      param__root)))
                                    (select temp___520 j))))) true))
                       (= (ordered_prefix
                            (model1 param__f param__root)
                            param__values
                            i
                            j) true))))))) :pattern ((ordered_leafs
                                                       param__f
                                                       param__root
                                                       param__values)) )))))

;; "tree_structure__post_axiom"
(assert true)

;; "all_less_than__post_axiom"
(assert true)

;; "all_less_than__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int) (param__v Int))
      (forall ((param__values (Array Int natural)))
        (! (=
             (= (all_less_than param__f param__root param__values param__v) true)
             (forall ((j Int))
               (=>
                 (and (<= 1 j) (<= j 100))
                 (=>
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5
                          (let ((temp___529 (model1 param__f param__root)))
                            (select temp___529 j)))) true)
                   (< (to_rep (select param__values j)) param__v))))) :pattern (
        (all_less_than
          param__f
          param__root
          param__values
          param__v)) )))))

;; "all_more_than__post_axiom"
(assert true)

;; "all_more_than__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int) (param__v Int))
      (forall ((param__values (Array Int natural)))
        (! (=
             (= (all_more_than param__f param__root param__values param__v) true)
             (forall ((j Int))
               (=>
                 (and (<= 1 j) (<= j 100))
                 (=>
                   (= (rec__tree_model__path_type__k
                        (us_split_fields5
                          (let ((temp___531 (model1 param__f param__root)))
                            (select temp___531 j)))) true)
                   (< param__v (to_rep (select param__values j))))))) :pattern (
        (all_more_than
          param__f
          param__root
          param__values
          param__v)) )))))

;; "is_concat__post_axiom"
(assert true)

;; "is_concat__def_axiom"
(assert
  (forall ((param__q us_rep2) (param__v us_rep2) (param__p us_rep2))
    (! (=
         (= (is_concat param__q param__v param__p) true)
         (and
           (and
             (and
               (= (- (length param__p) (length param__v)) (length param__q))
               (forall ((i Int))
                 (=>
                   (and (<= 1 i) (<= i (last param__q)))
                   (= (get param__p i) (get param__q i)))))
             (forall ((i Int))
               (=>
                 (and (<= 1 i) (<= i (last param__v)))
                 (= (get param__p (+ i (last param__q))) (get param__v i)))))
           (forall ((i Int))
             (=>
               (and (<= (+ (last param__q) 1) i) (<= i (last param__p)))
               (= (get param__v (- i (last param__q))) (get param__p i)))))) :pattern (
    (is_concat
      param__q
      param__v
      param__p)) )))

(declare-const spark__branch Bool)

;; "Assume"
(assert (dynamic_invariant1 f true false true true))

;; "Assume"
(assert (dynamic_invariant1 f_old true false true true))

;; "Assume"
(assert (in_range6 root))

;; "Assume"
(assert (in_range6 v))

;; "Assume"
(assert true)

;; "Assume"
(assert
  (and
    (and
      (and
        (and
          (and
            (and
              (and
                (and
                  (and
                    (and
                      (= (valid_root f_old root) true)
                      (= (valid_root f root) true))
                    (= (valid_root f v) true))
                  (not (= (valid_root f_old v) true)))
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f_old root) v))) true))
              (= (ordered_leafs f_old root values) true))
            (forall ((i Int))
              (=>
                (and (<= 1 i) (<= i 100))
                (=>
                  (= (rec__tree_model__path_type__k
                       (us_split_fields5 (select (model1 f_old root) i))) true)
                  (ite (= (ole
                            (rec__tree_model__path_type__a
                              (us_split_fields5
                                (select (model1 f_old root) v)))
                            (rec__tree_model__path_type__a
                              (us_split_fields5
                                (select (model1 f_old root) i)))) true)
                    (= (rec__tree_model__path_type__k
                         (us_split_fields5 (select (model1 f v) i))) true)
                    (= (rec__tree_model__path_type__k
                         (us_split_fields5 (select (model1 f root) i))) true))))))
          (forall ((i Int))
            (=>
              (and (<= 1 i) (<= i 100))
              (=>
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f root) i))) true)
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f_old root) i))) true)))))
        (forall ((i Int))
          (=>
            (and (<= 1 i) (<= i 100))
            (=>
              (and
                (not (= v 0))
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f v) i))) true))
              (= (rec__tree_model__path_type__k
                   (us_split_fields5 (select (model1 f_old root) i))) true)))))
      (forall ((i Int))
        (=>
          (and (<= 1 i) (<= i 100))
          (=>
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select (model1 f root) i))) true)
            (= (oeq
                 (rec__tree_model__path_type__a
                   (us_split_fields5 (select (model1 f root) i)))
                 (rec__tree_model__path_type__a
                   (us_split_fields5 (select (model1 f_old root) i)))) true)))))
    (forall ((i Int))
      (=>
        (and (<= 1 i) (<= i 100))
        (=>
          (and
            (not (= v 0))
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select (model1 f v) i))) true))
          (= (is_concat
               (rec__tree_model__path_type__a
                 (us_split_fields5 (select (model1 f_old root) v)))
               (rec__tree_model__path_type__a
                 (us_split_fields5 (select (model1 f v) i)))
               (rec__tree_model__path_type__a
                 (us_split_fields5 (select (model1 f_old root) i)))) true))))))

(declare-const i Int)

(declare-const iqtunused int__ref)

;; "H"
(assert (= iqtunused (int__refqtmk i)))

;; "H"
(assert (= i 1))

(declare-const int__contentqtresultqtunused Int)

;; "H"
(assert (= int__contentqtresultqtunused i))

(declare-const o Bool)

;; "H"
(assert (= o (ite (<= i 100) true false)))

(declare-const infix_lseqqtresultqtunused Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused o))

(declare-const int__contentqtresultqtunused1 Int)

;; "H"
(assert (= int__contentqtresultqtunused1 i))

(declare-const o1 Bool)

;; "H"
(assert (= o1 (ite (<= 1 i) true false)))

(declare-const infix_lseqqtresultqtunused1 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused1 o1))

(declare-const o2 Bool)

;; "H"
(assert (= o2 (and o1 o)))

(declare-const andbqtresultqtunused Bool)

;; "H"
(assert (= andbqtresultqtunused o2))

(declare-const usfqtunused Bool)

(declare-const anyqtresultqtunused Bool)

(declare-const i1 Int)

(declare-const iqtunused1 int__ref)

(declare-const int__contentqtresultqtunused2 Int)

(declare-const infix_eqqtresultqtunused Bool)

(declare-const usf Int)

(declare-const anyqtresultqtunused1 Int)

(declare-const kqtunused Int)

(declare-const int__contentqtresultqtunused3 Int)

(declare-const o3 Bool)

(declare-const infix_lseqqtresultqtunused2 Bool)

(declare-const o4 Bool)

(declare-const infix_lseqqtresultqtunused3 Bool)

(declare-const andbqtresultqtunused1 Bool)

;; "H"
(assert
  (=>
    (= o2 true)
    (and
      (and
        (= anyqtresultqtunused1 usf)
        (and
          (= kqtunused usf)
          (and
            (= int__contentqtresultqtunused3 i)
            (and
              (= o3 (ite (<= usf i) true false))
              (and
                (= infix_lseqqtresultqtunused2 o3)
                (and
                  (= o4 (ite (<= 1 usf) true false))
                  (and
                    (= infix_lseqqtresultqtunused3 o4)
                    (= andbqtresultqtunused1 (and o4 o3)))))))))
      (and
        (= usfqtunused (ite (forall ((k Int))
                              (=>
                                (and (<= 1 k) (<= k i))
                                (=>
                                  (and
                                    (= (rec__tree_model__path_type__k
                                         (us_split_fields5
                                           (select (model1 f root) k))) true)
                                    (= (olt
                                         (rec__tree_model__path_type__a
                                           (us_split_fields5
                                             (select (model1 f root) k)))
                                         (rec__tree_model__path_type__a
                                           (us_split_fields5
                                             (select (model1 f_old root) 
                                             v)))) true))
                                  (ite (= (get
                                            (rec__tree_model__path_type__a
                                              (us_split_fields5
                                                (select (model1 f_old root) 
                                                v)))
                                            (+ (last
                                                 (rec__tree_model__path_type__a
                                                   (us_split_fields5
                                                     (select (model1 f root) k)))) 1)) 0)
                                    (= (all_less_than
                                         f
                                         v
                                         values
                                         (to_rep (select values k))) true)
                                    (= (all_more_than
                                         f
                                         v
                                         values
                                         (to_rep (select values k))) true)))))
                         true
                         false))
        (and
          (= anyqtresultqtunused (ite (forall ((k Int))
                                        (=>
                                          (and (<= 1 k) (<= k i))
                                          (=>
                                            (and
                                              (= (rec__tree_model__path_type__k
                                                   (us_split_fields5
                                                     (select (model1 f root) k))) true)
                                              (= (olt
                                                   (rec__tree_model__path_type__a
                                                     (us_split_fields5
                                                       (select (model1
                                                                 f
                                                                 root) k)))
                                                   (rec__tree_model__path_type__a
                                                     (us_split_fields5
                                                       (select (model1
                                                                 f_old
                                                                 root) 
                                                       v)))) true))
                                            (ite (= (get
                                                      (rec__tree_model__path_type__a
                                                        (us_split_fields5
                                                          (select (model1
                                                                    f_old
                                                                    root) 
                                                          v)))
                                                      (+ (last
                                                           (rec__tree_model__path_type__a
                                                             (us_split_fields5
                                                               (select 
                                                               (model1
                                                                 f
                                                                 root) k)))) 1)) 0)
                                              (= (all_less_than
                                                   f
                                                   v
                                                   values
                                                   (to_rep (select values k))) true)
                                              (= (all_more_than
                                                   f
                                                   v
                                                   values
                                                   (to_rep (select values k))) true)))))
                                   true
                                   false))
          (and
            (= iqtunused1 (int__refqtmk i1))
            (and
              (forall ((k Int))
                (=>
                  (and (<= 1 k) (<= k i1))
                  (=>
                    (and
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5 (select (model1 f root) k))) true)
                      (= (olt
                           (rec__tree_model__path_type__a
                             (us_split_fields5 (select (model1 f root) k)))
                           (rec__tree_model__path_type__a
                             (us_split_fields5
                               (select (model1 f_old root) v)))) true))
                    (ite (= (get
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (select (model1 f_old root) v)))
                              (+ (last
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select (model1 f root) k)))) 1)) 0)
                      (= (all_less_than
                           f
                           v
                           values
                           (to_rep (select values k))) true)
                      (= (all_more_than
                           f
                           v
                           values
                           (to_rep (select values k))) true)))))
              (and
                (and (<= 1 i1) (<= i1 100))
                (and
                  (= int__contentqtresultqtunused2 i1)
                  (and
                    (= infix_eqqtresultqtunused (ite (= i1 100) true false))
                    (= i1 100)))))))))))

(declare-const i2 Int)

;; "i'unused"
(define-fun iqtunused2 () int__ref
  (int__refqtmk i2))

;; "H"
(assert (= i2 1))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused4 () Int
  i2)

;; "o"
(define-fun o5 () Bool
  (ite (<= i2 100) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused4 () Bool
  o5)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused5 () Int
  i2)

;; "o"
(define-fun o6 () Bool
  (ite (<= 1 i2) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused5 () Bool
  o6)

;; "o"
(define-fun o7 () Bool
  (and o6 o5))

;; "andb'result'unused"
(define-fun andbqtresultqtunused2 () Bool
  o7)

;; "H"
(assert (= o7 true))

(declare-const usf1 Int)

(declare-const anyqtresultqtunused2 Int)

;; "H"
(assert (= anyqtresultqtunused2 usf1))

(declare-const kqtunused1 Int)

;; "H"
(assert (= kqtunused1 usf1))

(declare-const int__contentqtresultqtunused6 Int)

;; "H"
(assert (= int__contentqtresultqtunused6 i2))

(declare-const o8 Int)

;; "H"
(assert (= o8 (- i2 1)))

(declare-const infix_mnqtresultqtunused Int)

;; "H"
(assert (= infix_mnqtresultqtunused o8))

(declare-const o9 Bool)

;; "H"
(assert (= o9 (ite (<= usf1 o8) true false)))

(declare-const infix_lseqqtresultqtunused6 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused6 o9))

(declare-const o10 Bool)

;; "H"
(assert (= o10 (ite (<= 1 usf1) true false)))

(declare-const infix_lseqqtresultqtunused7 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused7 o10))

(declare-const andbqtresultqtunused3 Bool)

;; "H"
(assert (= andbqtresultqtunused3 (and o10 o9)))

;; "_f'unused"
(define-fun usfqtunused1 () Bool
  (ite (forall ((k Int))
         (=>
           (and (<= 1 k) (<= k (- i2 1)))
           (forall ((j Int))
             (=>
               (and (<= 1 j) (<= j 100))
               (=>
                 (and
                   (and
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) k))) true)
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) j))) true))
                   (= (olt
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) k)))
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) j)))) true))
                 (= (ordered_prefix (model1 f root) values k j) true))))))
    true
    false))

;; "any'result'unused"
(define-fun anyqtresultqtunused3 () Bool
  (ite (forall ((k Int))
         (=>
           (and (<= 1 k) (<= k (- i2 1)))
           (forall ((j Int))
             (=>
               (and (<= 1 j) (<= j 100))
               (=>
                 (and
                   (and
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) k))) true)
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) j))) true))
                   (= (olt
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) k)))
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) j)))) true))
                 (= (ordered_prefix (model1 f root) values k j) true))))))
    true
    false))

(declare-const spark__branch1 Bool)

(declare-const i3 Int)

;; "i'unused"
(define-fun iqtunused3 () int__ref
  (int__refqtmk i3))

;; "LoopInvariant"
(assert
  (forall ((k Int))
    (=>
      (and (<= 1 k) (<= k (- i3 1)))
      (forall ((j Int))
        (=>
          (and (<= 1 j) (<= j 100))
          (=>
            (and
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f root) k))) true)
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select (model1 f root) j))) true))
              (= (olt
                   (rec__tree_model__path_type__a
                     (us_split_fields5 (select (model1 f root) k)))
                   (rec__tree_model__path_type__a
                     (us_split_fields5 (select (model1 f root) j)))) true))
            (= (ordered_prefix (model1 f root) values k j) true)))))))

;; "Assume"
(assert (and (<= 1 i3) (<= i3 100)))

(declare-const spark__branch2 Bool)

(declare-const j Int)

(declare-const jqtunused int__ref)

;; "H"
(assert (= jqtunused (int__refqtmk j)))

;; "H"
(assert (= j 1))

(declare-const int__contentqtresultqtunused7 Int)

;; "H"
(assert (= int__contentqtresultqtunused7 j))

(declare-const o11 Bool)

;; "H"
(assert (= o11 (ite (<= j 100) true false)))

(declare-const infix_lseqqtresultqtunused8 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused8 o11))

(declare-const int__contentqtresultqtunused8 Int)

;; "H"
(assert (= int__contentqtresultqtunused8 j))

(declare-const o12 Bool)

;; "H"
(assert (= o12 (ite (<= 1 j) true false)))

(declare-const infix_lseqqtresultqtunused9 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused9 o12))

(declare-const o13 Bool)

;; "H"
(assert (= o13 (and o12 o11)))

(declare-const andbqtresultqtunused4 Bool)

;; "H"
(assert (= andbqtresultqtunused4 o13))

(declare-const spark__branch3 Bool)

(declare-const spark__branchqtunused bool__ref)

(declare-const usfqtunused2 Bool)

(declare-const anyqtresultqtunused4 Bool)

(declare-const j1 Int)

(declare-const jqtunused1 int__ref)

(declare-const int__contentqtresultqtunused9 Int)

(declare-const infix_eqqtresultqtunused1 Bool)

(declare-const usf2 Int)

(declare-const anyqtresultqtunused5 Int)

(declare-const kqtunused2 Int)

(declare-const int__contentqtresultqtunused10 Int)

(declare-const o14 Bool)

(declare-const infix_lseqqtresultqtunused10 Bool)

(declare-const o15 Bool)

(declare-const infix_lseqqtresultqtunused11 Bool)

(declare-const andbqtresultqtunused5 Bool)

(declare-const o16 Bool)

(declare-const bool__contentqtresultqtunused Bool)

(declare-const o17 Bool)

(declare-const o18 Int)

(declare-const o19 us_rep1)

(declare-const temp___2819 (Array Int us_rep3))

(declare-const modelqtresultqtunused (Array Int us_rep3))

(declare-const int__contentqtresultqtunused11 Int)

(declare-const o20 us_rep3)

(declare-const getqtresultqtunused us_rep3)

(declare-const o21 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused us_split_fields4)

(declare-const o22 us_rep2)

(declare-const rec__tree_model__path_type__aqtresultqtunused us_rep2)

(declare-const o23 Int)

(declare-const o24 us_rep1)

(declare-const temp___2818 (Array Int us_rep3))

(declare-const modelqtresultqtunused1 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused12 Int)

(declare-const o25 us_rep3)

(declare-const getqtresultqtunused1 us_rep3)

(declare-const o26 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused1 us_split_fields4)

(declare-const o27 us_rep2)

(declare-const rec__tree_model__path_type__aqtresultqtunused1 us_rep2)

(declare-const oltqtresultqtunused Bool)

(declare-const o28 Int)

(declare-const o29 us_rep1)

(declare-const temp___2816 (Array Int us_rep3))

(declare-const modelqtresultqtunused2 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused13 Int)

(declare-const o30 us_rep3)

(declare-const getqtresultqtunused2 us_rep3)

(declare-const o31 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused2 us_split_fields4)

(declare-const o32 Bool)

(declare-const rec__tree_model__path_type__kqtresultqtunused Bool)

(declare-const o33 Int)

(declare-const o34 us_rep1)

(declare-const temp___2817 (Array Int us_rep3))

(declare-const modelqtresultqtunused3 (Array Int us_rep3))

(declare-const int__contentqtresultqtunused14 Int)

(declare-const o35 us_rep3)

(declare-const getqtresultqtunused3 us_rep3)

(declare-const o36 us_split_fields4)

(declare-const us_split_fieldsqtresultqtunused3 us_split_fields4)

(declare-const rec__tree_model__path_type__kqtresultqtunused1 Bool)

;; "H"
(assert
  (ite (= o13 true)
    (and
      (= spark__branchqtunused (bool__refqtmk spark__branch3))
      (and
        (and
          (and
            (and
              (= o28 root)
              (and
                (= o29 f)
                (and
                  (= temp___2816 (model1 o29 o28))
                  (and
                    (and
                      (dynamic_invariant temp___2816 true false true true)
                      (and
                        (and
                          (and
                            (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5
                                     (select temp___2816 o28))) true)
                              (= (last
                                   (rec__tree_model__path_type__a
                                     (us_split_fields5
                                       (select temp___2816 o28)))) 0))
                            (forall ((i4 Int))
                              (=>
                                (and (<= 1 i4) (<= i4 100))
                                (=>
                                  (not (= i4 o28))
                                  (ite (and
                                         (not (= (parent o29 i4) 0))
                                         (= (rec__tree_model__path_type__k
                                              (us_split_fields5
                                                (select temp___2816 (parent
                                                                    o29
                                                                    i4)))) true))
                                    (= (rec__tree_model__path_type__k
                                         (us_split_fields5
                                           (select temp___2816 i4))) true)
                                    (not
                                      (= (rec__tree_model__path_type__k
                                           (us_split_fields5
                                             (select temp___2816 i4))) true)))))))
                          (forall ((i4 Int))
                            (=>
                              (and (<= 1 i4) (<= i4 100))
                              (ite (and
                                     (= (rec__tree_model__path_type__k
                                          (us_split_fields5
                                            (select temp___2816 i4))) true)
                                     (not (= i4 o28)))
                                (= (is_add
                                     (rec__tree_model__path_type__a
                                       (us_split_fields5
                                         (select temp___2816 (parent o29 i4))))
                                     (position o29 i4)
                                     (rec__tree_model__path_type__a
                                       (us_split_fields5
                                         (select temp___2816 i4)))) true)
                                (= (last
                                     (rec__tree_model__path_type__a
                                       (us_split_fields5
                                         (select temp___2816 i4)))) 0)))))
                        (forall ((i4 Int))
                          (=>
                            (and (<= 1 i4) (<= i4 100))
                            (=>
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select temp___2816 i4))) true)
                              (forall ((j2 Int))
                                (=>
                                  (and (<= 1 j2) (<= j2 100))
                                  (=>
                                    (and
                                      (= (rec__tree_model__path_type__k
                                           (us_split_fields5
                                             (select temp___2816 j2))) true)
                                      (= (oeq
                                           (rec__tree_model__path_type__a
                                             (us_split_fields5
                                               (select temp___2816 i4)))
                                           (rec__tree_model__path_type__a
                                             (us_split_fields5
                                               (select temp___2816 j2)))) true))
                                    (= j2 i4)))))))))
                    (and
                      (= modelqtresultqtunused2 temp___2816)
                      (and
                        (= int__contentqtresultqtunused13 i3)
                        (and
                          (= o30 (select temp___2816 i3))
                          (and
                            (= getqtresultqtunused2 o30)
                            (and
                              (= o31 (us_split_fields5 o30))
                              (and
                                (= us_split_fieldsqtresultqtunused2 o31)
                                (and
                                  (= o32 (rec__tree_model__path_type__k o31))
                                  (and
                                    (= rec__tree_model__path_type__kqtresultqtunused 
                                    o32)
                                    (ite (= o32 true)
                                      (and
                                        (= o33 root)
                                        (and
                                          (= o34 f)
                                          (and
                                            (= temp___2817 (model1 o34 o33))
                                            (and
                                              (and
                                                (dynamic_invariant
                                                  temp___2817
                                                  true
                                                  false
                                                  true
                                                  true)
                                                (and
                                                  (and
                                                    (and
                                                      (and
                                                        (= (rec__tree_model__path_type__k
                                                             (us_split_fields5
                                                               (select 
                                                               temp___2817 
                                                               o33))) true)
                                                        (= (last
                                                             (rec__tree_model__path_type__a
                                                               (us_split_fields5
                                                                 (select 
                                                                 temp___2817 
                                                                 o33)))) 0))
                                                      (forall ((i4 Int))
                                                        (=>
                                                          (and
                                                            (<= 1 i4)
                                                            (<= i4 100))
                                                          (=>
                                                            (not (= i4 o33))
                                                            (ite (and
                                                                   (not
                                                                    (= 
                                                                    (parent
                                                                    o34
                                                                    i4) 0))
                                                                   (= 
                                                                   (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2817 
                                                                    (parent
                                                                    o34
                                                                    i4)))) true))
                                                              (= (rec__tree_model__path_type__k
                                                                   (us_split_fields5
                                                                    (select 
                                                                    temp___2817 i4))) true)
                                                              (not
                                                                (= (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2817 i4))) true)))))))
                                                    (forall ((i4 Int))
                                                      (=>
                                                        (and
                                                          (<= 1 i4)
                                                          (<= i4 100))
                                                        (ite (and
                                                               (= (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2817 i4))) true)
                                                               (not
                                                                 (= i4 
                                                                 o33)))
                                                          (= (is_add
                                                               (rec__tree_model__path_type__a
                                                                 (us_split_fields5
                                                                   (select 
                                                                   temp___2817 
                                                                   (parent
                                                                    o34
                                                                    i4))))
                                                               (position
                                                                 o34
                                                                 i4)
                                                               (rec__tree_model__path_type__a
                                                                 (us_split_fields5
                                                                   (select 
                                                                   temp___2817 i4)))) true)
                                                          (= (last
                                                               (rec__tree_model__path_type__a
                                                                 (us_split_fields5
                                                                   (select 
                                                                   temp___2817 i4)))) 0)))))
                                                  (forall ((i4 Int))
                                                    (=>
                                                      (and
                                                        (<= 1 i4)
                                                        (<= i4 100))
                                                      (=>
                                                        (= (rec__tree_model__path_type__k
                                                             (us_split_fields5
                                                               (select 
                                                               temp___2817 i4))) true)
                                                        (forall ((j2 Int))
                                                          (=>
                                                            (and
                                                              (<= 1 j2)
                                                              (<= j2 100))
                                                            (=>
                                                              (and
                                                                (= (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2817 j2))) true)
                                                                (= (oeq
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2817 i4)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2817 j2)))) true))
                                                              (= j2 i4)))))))))
                                              (and
                                                (= modelqtresultqtunused3 
                                                temp___2817)
                                                (and
                                                  (= int__contentqtresultqtunused14 
                                                  j)
                                                  (and
                                                    (= o35 (select temp___2817 
                                                    j))
                                                    (and
                                                      (= getqtresultqtunused3 
                                                      o35)
                                                      (and
                                                        (= o36 (us_split_fields5
                                                                 o35))
                                                        (and
                                                          (= us_split_fieldsqtresultqtunused3 
                                                          o36)
                                                          (and
                                                            (= o17 (rec__tree_model__path_type__k
                                                                    o36))
                                                            (= rec__tree_model__path_type__kqtresultqtunused1 
                                                            o17))))))))))))
                                      (= o17 false))))))))))))))
            (ite (= o17 true)
              (and
                (= o18 root)
                (and
                  (= o19 f)
                  (and
                    (= temp___2819 (model1 o19 o18))
                    (and
                      (and
                        (dynamic_invariant temp___2819 true false true true)
                        (and
                          (and
                            (and
                              (and
                                (= (rec__tree_model__path_type__k
                                     (us_split_fields5
                                       (select temp___2819 o18))) true)
                                (= (last
                                     (rec__tree_model__path_type__a
                                       (us_split_fields5
                                         (select temp___2819 o18)))) 0))
                              (forall ((i4 Int))
                                (=>
                                  (and (<= 1 i4) (<= i4 100))
                                  (=>
                                    (not (= i4 o18))
                                    (ite (and
                                           (not (= (parent o19 i4) 0))
                                           (= (rec__tree_model__path_type__k
                                                (us_split_fields5
                                                  (select temp___2819 
                                                  (parent
                                                    o19
                                                    i4)))) true))
                                      (= (rec__tree_model__path_type__k
                                           (us_split_fields5
                                             (select temp___2819 i4))) true)
                                      (not
                                        (= (rec__tree_model__path_type__k
                                             (us_split_fields5
                                               (select temp___2819 i4))) true)))))))
                            (forall ((i4 Int))
                              (=>
                                (and (<= 1 i4) (<= i4 100))
                                (ite (and
                                       (= (rec__tree_model__path_type__k
                                            (us_split_fields5
                                              (select temp___2819 i4))) true)
                                       (not (= i4 o18)))
                                  (= (is_add
                                       (rec__tree_model__path_type__a
                                         (us_split_fields5
                                           (select temp___2819 (parent
                                                                 o19
                                                                 i4))))
                                       (position o19 i4)
                                       (rec__tree_model__path_type__a
                                         (us_split_fields5
                                           (select temp___2819 i4)))) true)
                                  (= (last
                                       (rec__tree_model__path_type__a
                                         (us_split_fields5
                                           (select temp___2819 i4)))) 0)))))
                          (forall ((i4 Int))
                            (=>
                              (and (<= 1 i4) (<= i4 100))
                              (=>
                                (= (rec__tree_model__path_type__k
                                     (us_split_fields5
                                       (select temp___2819 i4))) true)
                                (forall ((j2 Int))
                                  (=>
                                    (and (<= 1 j2) (<= j2 100))
                                    (=>
                                      (and
                                        (= (rec__tree_model__path_type__k
                                             (us_split_fields5
                                               (select temp___2819 j2))) true)
                                        (= (oeq
                                             (rec__tree_model__path_type__a
                                               (us_split_fields5
                                                 (select temp___2819 i4)))
                                             (rec__tree_model__path_type__a
                                               (us_split_fields5
                                                 (select temp___2819 j2)))) true))
                                      (= j2 i4)))))))))
                      (and
                        (= modelqtresultqtunused temp___2819)
                        (and
                          (= int__contentqtresultqtunused11 j)
                          (and
                            (= o20 (select temp___2819 j))
                            (and
                              (= getqtresultqtunused o20)
                              (and
                                (= o21 (us_split_fields5 o20))
                                (and
                                  (= us_split_fieldsqtresultqtunused 
                                  o21)
                                  (and
                                    (= o22 (rec__tree_model__path_type__a
                                             o21))
                                    (and
                                      (= rec__tree_model__path_type__aqtresultqtunused 
                                      o22)
                                      (and
                                        (= o23 root)
                                        (and
                                          (= o24 f)
                                          (and
                                            (= temp___2818 (model1 o24 o23))
                                            (and
                                              (and
                                                (dynamic_invariant
                                                  temp___2818
                                                  true
                                                  false
                                                  true
                                                  true)
                                                (and
                                                  (and
                                                    (and
                                                      (and
                                                        (= (rec__tree_model__path_type__k
                                                             (us_split_fields5
                                                               (select 
                                                               temp___2818 
                                                               o23))) true)
                                                        (= (last
                                                             (rec__tree_model__path_type__a
                                                               (us_split_fields5
                                                                 (select 
                                                                 temp___2818 
                                                                 o23)))) 0))
                                                      (forall ((i4 Int))
                                                        (=>
                                                          (and
                                                            (<= 1 i4)
                                                            (<= i4 100))
                                                          (=>
                                                            (not (= i4 o23))
                                                            (ite (and
                                                                   (not
                                                                    (= 
                                                                    (parent
                                                                    o24
                                                                    i4) 0))
                                                                   (= 
                                                                   (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2818 
                                                                    (parent
                                                                    o24
                                                                    i4)))) true))
                                                              (= (rec__tree_model__path_type__k
                                                                   (us_split_fields5
                                                                    (select 
                                                                    temp___2818 i4))) true)
                                                              (not
                                                                (= (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2818 i4))) true)))))))
                                                    (forall ((i4 Int))
                                                      (=>
                                                        (and
                                                          (<= 1 i4)
                                                          (<= i4 100))
                                                        (ite (and
                                                               (= (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2818 i4))) true)
                                                               (not
                                                                 (= i4 
                                                                 o23)))
                                                          (= (is_add
                                                               (rec__tree_model__path_type__a
                                                                 (us_split_fields5
                                                                   (select 
                                                                   temp___2818 
                                                                   (parent
                                                                    o24
                                                                    i4))))
                                                               (position
                                                                 o24
                                                                 i4)
                                                               (rec__tree_model__path_type__a
                                                                 (us_split_fields5
                                                                   (select 
                                                                   temp___2818 i4)))) true)
                                                          (= (last
                                                               (rec__tree_model__path_type__a
                                                                 (us_split_fields5
                                                                   (select 
                                                                   temp___2818 i4)))) 0)))))
                                                  (forall ((i4 Int))
                                                    (=>
                                                      (and
                                                        (<= 1 i4)
                                                        (<= i4 100))
                                                      (=>
                                                        (= (rec__tree_model__path_type__k
                                                             (us_split_fields5
                                                               (select 
                                                               temp___2818 i4))) true)
                                                        (forall ((j2 Int))
                                                          (=>
                                                            (and
                                                              (<= 1 j2)
                                                              (<= j2 100))
                                                            (=>
                                                              (and
                                                                (= (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2818 j2))) true)
                                                                (= (oeq
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2818 i4)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select 
                                                                    temp___2818 j2)))) true))
                                                              (= j2 i4)))))))))
                                              (and
                                                (= modelqtresultqtunused1 
                                                temp___2818)
                                                (and
                                                  (= int__contentqtresultqtunused12 
                                                  i3)
                                                  (and
                                                    (= o25 (select temp___2818 
                                                    i3))
                                                    (and
                                                      (= getqtresultqtunused1 
                                                      o25)
                                                      (and
                                                        (= o26 (us_split_fields5
                                                                 o25))
                                                        (and
                                                          (= us_split_fieldsqtresultqtunused1 
                                                          o26)
                                                          (and
                                                            (= o27 (rec__tree_model__path_type__a
                                                                    o26))
                                                            (and
                                                              (= rec__tree_model__path_type__aqtresultqtunused1 
                                                              o27)
                                                              (and
                                                                (= o16 
                                                                (olt
                                                                  o27
                                                                  o22))
                                                                (and
                                                                  (=
                                                                    (= 
                                                                    o16 true)
                                                                    (and
                                                                    (< 
                                                                    (length
                                                                    o27) 
                                                                    (length
                                                                    o22))
                                                                    (forall 
                                                                    ((n Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 n)
                                                                    (<= n 
                                                                    (last
                                                                    o27)))
                                                                    (= 
                                                                    (get
                                                                    o27
                                                                    n) 
                                                                    (get
                                                                    o22
                                                                    n))))))
                                                                  (= 
                                                                  oltqtresultqtunused 
                                                                  o16)))))))))))))))))))))))))))
              (= o16 false)))
          (and
            (= spark__branch3 o16)
            (and
              (= bool__contentqtresultqtunused spark__branch3)
              (=>
                (= spark__branch3 true)
                (and
                  (= (olt
                       (rec__tree_model__path_type__a
                         (us_split_fields5 (select (model1 f_old root) i3)))
                       (rec__tree_model__path_type__a
                         (us_split_fields5 (select (model1 f_old root) j)))) true)
                  (= (ordered_prefix (model1 f_old root) values i3 j) true))))))
        (and
          (and
            (= anyqtresultqtunused5 usf2)
            (and
              (= kqtunused2 usf2)
              (and
                (= int__contentqtresultqtunused10 j)
                (and
                  (= o14 (ite (<= usf2 j) true false))
                  (and
                    (= infix_lseqqtresultqtunused10 o14)
                    (and
                      (= o15 (ite (<= 1 usf2) true false))
                      (and
                        (= infix_lseqqtresultqtunused11 o15)
                        (= andbqtresultqtunused5 (and o15 o14)))))))))
          (and
            (= usfqtunused2 (ite (forall ((k Int))
                                   (=>
                                     (and (<= 1 k) (<= k j))
                                     (=>
                                       (and
                                         (and
                                           (= (rec__tree_model__path_type__k
                                                (us_split_fields5
                                                  (select (model1 f root) 
                                                  i3))) true)
                                           (= (rec__tree_model__path_type__k
                                                (us_split_fields5
                                                  (select (model1 f root) k))) true))
                                         (= (olt
                                              (rec__tree_model__path_type__a
                                                (us_split_fields5
                                                  (select (model1 f root) 
                                                  i3)))
                                              (rec__tree_model__path_type__a
                                                (us_split_fields5
                                                  (select (model1 f root) k)))) true))
                                       (= (ordered_prefix
                                            (model1 f root)
                                            values
                                            i3
                                            k) true))))
                              true
                              false))
            (and
              (= anyqtresultqtunused4 (ite (forall ((k Int))
                                             (=>
                                               (and (<= 1 k) (<= k j))
                                               (=>
                                                 (and
                                                   (and
                                                     (= (rec__tree_model__path_type__k
                                                          (us_split_fields5
                                                            (select (model1
                                                                    f
                                                                    root) 
                                                            i3))) true)
                                                     (= (rec__tree_model__path_type__k
                                                          (us_split_fields5
                                                            (select (model1
                                                                    f
                                                                    root) k))) true))
                                                   (= (olt
                                                        (rec__tree_model__path_type__a
                                                          (us_split_fields5
                                                            (select (model1
                                                                    f
                                                                    root) 
                                                            i3)))
                                                        (rec__tree_model__path_type__a
                                                          (us_split_fields5
                                                            (select (model1
                                                                    f
                                                                    root) k)))) true))
                                                 (= (ordered_prefix
                                                      (model1 f root)
                                                      values
                                                      i3
                                                      k) true))))
                                        true
                                        false))
              (and
                (= jqtunused1 (int__refqtmk j1))
                (and
                  (forall ((k Int))
                    (=>
                      (and (<= 1 k) (<= k j1))
                      (=>
                        (and
                          (and
                            (= (rec__tree_model__path_type__k
                                 (us_split_fields5
                                   (select (model1 f root) i3))) true)
                            (= (rec__tree_model__path_type__k
                                 (us_split_fields5
                                   (select (model1 f root) k))) true))
                          (= (olt
                               (rec__tree_model__path_type__a
                                 (us_split_fields5
                                   (select (model1 f root) i3)))
                               (rec__tree_model__path_type__a
                                 (us_split_fields5
                                   (select (model1 f root) k)))) true))
                        (= (ordered_prefix (model1 f root) values i3 k) true))))
                  (and
                    (and (<= 1 j1) (<= j1 100))
                    (and
                      (= int__contentqtresultqtunused9 j1)
                      (and
                        (= infix_eqqtresultqtunused1 (ite (= j1 100)
                                                       true
                                                       false))
                        (= j1 100)))))))))))
    (= spark__branch2 spark__branch1)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused15 () Int
  i3)

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused2 () Bool
  (ite (= i3 100) true false))

;; "H"
(assert (not (= i3 100)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused16 () Int
  i3)

;; "o"
(define-fun o37 () Int
  (+ i3 1))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused () Int
  o37)

(declare-const i4 Int)

;; "i'unused"
(define-fun iqtunused4 () int__ref
  (int__refqtmk i4))

;; "H"
(assert (= i4 o37))

(declare-const usf3 Int)

(declare-const anyqtresultqtunused6 Int)

;; "H"
(assert (= anyqtresultqtunused6 usf3))

(declare-const kqtunused3 Int)

;; "H"
(assert (= kqtunused3 usf3))

(declare-const int__contentqtresultqtunused17 Int)

;; "H"
(assert (= int__contentqtresultqtunused17 i4))

(declare-const o38 Int)

;; "H"
(assert (= o38 (- i4 1)))

(declare-const infix_mnqtresultqtunused1 Int)

;; "H"
(assert (= infix_mnqtresultqtunused1 o38))

(declare-const o39 Bool)

;; "H"
(assert (= o39 (ite (<= usf3 o38) true false)))

(declare-const infix_lseqqtresultqtunused12 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused12 o39))

(declare-const o40 Bool)

;; "H"
(assert (= o40 (ite (<= 1 usf3) true false)))

(declare-const infix_lseqqtresultqtunused13 Bool)

;; "H"
(assert (= infix_lseqqtresultqtunused13 o40))

(declare-const andbqtresultqtunused6 Bool)

;; "H"
(assert (= andbqtresultqtunused6 (and o40 o39)))

;; "_f'unused"
(define-fun usfqtunused3 () Bool
  (ite (forall ((k Int))
         (=>
           (and (<= 1 k) (<= k (- i4 1)))
           (forall ((j2 Int))
             (=>
               (and (<= 1 j2) (<= j2 100))
               (=>
                 (and
                   (and
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) k))) true)
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) j2))) true))
                   (= (olt
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) k)))
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) j2)))) true))
                 (= (ordered_prefix (model1 f root) values k j2) true))))))
    true
    false))

;; "any'result'unused"
(define-fun anyqtresultqtunused7 () Bool
  (ite (forall ((k Int))
         (=>
           (and (<= 1 k) (<= k (- i4 1)))
           (forall ((j2 Int))
             (=>
               (and (<= 1 j2) (<= j2 100))
               (=>
                 (and
                   (and
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) k))) true)
                     (= (rec__tree_model__path_type__k
                          (us_split_fields5 (select (model1 f root) j2))) true))
                   (= (olt
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) k)))
                        (rec__tree_model__path_type__a
                          (us_split_fields5 (select (model1 f root) j2)))) true))
                 (= (ordered_prefix (model1 f root) values k j2) true))))))
    true
    false))

(declare-const k Int)

;; "H"
(assert (<= 1 k))

;; "H"
(assert (<= k (- i4 1)))

(declare-const j2 Int)

;; "H"
(assert (<= 1 j2))

;; "H"
(assert (<= j2 100))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select (model1 f root) k))) true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select (model1 f root) j2))) true))

;; "H"
(assert
  (= (olt
       (rec__tree_model__path_type__a
         (us_split_fields5 (select (model1 f root) k)))
       (rec__tree_model__path_type__a
         (us_split_fields5 (select (model1 f root) j2)))) true))

;; Goal "def'vc"
;; File "search_trees.adb", line 233, characters 0-0
(assert
  (not (= (ordered_prefix (model1 f root) values k j2) true)))

(check-sat)
