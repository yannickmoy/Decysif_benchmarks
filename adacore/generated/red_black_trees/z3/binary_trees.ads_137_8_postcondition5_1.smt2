;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

(declare-sort extended_index_type 0)

;; "extended_index_type'int"
(declare-fun extended_index_typeqtint (extended_index_type) Int)

;; "extended_index_type'axiom"
(assert
  (forall ((i extended_index_type))
    (and
      (<= 0 (extended_index_typeqtint i))
      (<= (extended_index_typeqtint i) 100))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 0 x) (<= x 100)))

;; "to_rep"
(define-fun to_rep ((x extended_index_type)) Int
  (extended_index_typeqtint x))

;; "of_rep"
(declare-fun of_rep (Int) extended_index_type)

;; "inversion_axiom"
(assert
  (forall ((x extended_index_type))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x extended_index_type))
    (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                               (of_rep x))) )))

(declare-sort position_type 0)

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "to_rep"
(declare-fun to_rep1 (position_type) Int)

;; "of_rep"
(declare-fun of_rep1 (Int) position_type)

;; "inversion_axiom"
(assert
  (forall ((x position_type))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x position_type))
    (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__binary_trees__cell__left extended_index_type)(rec__binary_trees__cell__right extended_index_type)(rec__binary_trees__cell__parent extended_index_type)(rec__binary_trees__cell__position position_type)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))

;; "bool_eq"
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool
  (ite (and
         (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 a))) 
         (to_rep
           (rec__binary_trees__cell__left (us_split_fields1 b))))
         (and
           (and
             (= (to_rep
                  (rec__binary_trees__cell__right (us_split_fields1 a))) 
             (to_rep
               (rec__binary_trees__cell__right (us_split_fields1 b))))
             (= (to_rep
                  (rec__binary_trees__cell__parent (us_split_fields1 a))) 
             (to_rep
               (rec__binary_trees__cell__parent (us_split_fields1 b)))))
           (= (to_rep1
                (rec__binary_trees__cell__position (us_split_fields1 a))) 
           (to_rep1
             (rec__binary_trees__cell__position (us_split_fields1 b))))))
    true
    false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const binary_trees__cell__left__first__bit Int)

(declare-const binary_trees__cell__left__last__bit Int)

(declare-const binary_trees__cell__left__position Int)

;; "binary_trees__cell__left__first__bit_axiom"
(assert (<= 0 binary_trees__cell__left__first__bit))

;; "binary_trees__cell__left__last__bit_axiom"
(assert
  (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))

;; "binary_trees__cell__left__position_axiom"
(assert (<= 0 binary_trees__cell__left__position))

(declare-const binary_trees__cell__right__first__bit Int)

(declare-const binary_trees__cell__right__last__bit Int)

(declare-const binary_trees__cell__right__position Int)

;; "binary_trees__cell__right__first__bit_axiom"
(assert (<= 0 binary_trees__cell__right__first__bit))

;; "binary_trees__cell__right__last__bit_axiom"
(assert
  (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))

;; "binary_trees__cell__right__position_axiom"
(assert (<= 0 binary_trees__cell__right__position))

(declare-const binary_trees__cell__parent__first__bit Int)

(declare-const binary_trees__cell__parent__last__bit Int)

(declare-const binary_trees__cell__parent__position Int)

;; "binary_trees__cell__parent__first__bit_axiom"
(assert (<= 0 binary_trees__cell__parent__first__bit))

;; "binary_trees__cell__parent__last__bit_axiom"
(assert
  (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))

;; "binary_trees__cell__parent__position_axiom"
(assert (<= 0 binary_trees__cell__parent__position))

(declare-const binary_trees__cell__position__first__bit Int)

(declare-const binary_trees__cell__position__last__bit Int)

(declare-const binary_trees__cell__position__position Int)

;; "binary_trees__cell__position__first__bit_axiom"
(assert (<= 0 binary_trees__cell__position__first__bit))

;; "binary_trees__cell__position__last__bit_axiom"
(assert
  (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))

;; "binary_trees__cell__position__position_axiom"
(assert (<= 0 binary_trees__cell__position__position))

(declare-const dummy us_rep)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-datatypes ()
  ((us_split_fields2
   (us_split_fieldsqtmk1
   (rec__binary_trees__forest__s extended_index_type)(rec__binary_trees__forest__c (Array Int us_rep))))))

(declare-datatypes ()
  ((us_split_fields__ref
   (us_split_fields__refqtmk (us_split_fields__content us_split_fields2)))))

(declare-datatypes ()
  ((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const binary_trees__forest__s__first__bit Int)

(declare-const binary_trees__forest__s__last__bit Int)

(declare-const binary_trees__forest__s__position Int)

;; "binary_trees__forest__s__first__bit_axiom"
(assert (<= 0 binary_trees__forest__s__first__bit))

;; "binary_trees__forest__s__last__bit_axiom"
(assert
  (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))

;; "binary_trees__forest__s__position_axiom"
(assert (<= 0 binary_trees__forest__s__position))

(declare-const binary_trees__forest__c__first__bit Int)

(declare-const binary_trees__forest__c__last__bit Int)

(declare-const binary_trees__forest__c__position Int)

;; "binary_trees__forest__c__first__bit_axiom"
(assert (<= 0 binary_trees__forest__c__first__bit))

;; "binary_trees__forest__c__last__bit_axiom"
(assert
  (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))

;; "binary_trees__forest__c__position_axiom"
(assert (<= 0 binary_trees__forest__c__position))

(declare-const dummy1 us_rep1)

;; "size"
(define-fun size ((param__f us_rep1)) Int
  (to_rep (rec__binary_trees__forest__s (us_split_fields3 param__f))))

;; "valid_root"
(declare-fun valid_root (us_rep1
  Int) Bool)

;; "parent"
(declare-fun parent (us_rep1
  Int) Int)

;; "position"
(define-fun position ((param__f us_rep1) (param__i Int)) Int
  (to_rep1
    (rec__binary_trees__cell__position
      (us_split_fields1
        (let ((temp___173 (rec__binary_trees__forest__c
                            (us_split_fields3 param__f))))
          (select temp___173 param__i))))))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

;; "peek"
(declare-fun peek (us_rep1
  Int
  Int) Int)

(declare-sort us_rep2 0)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const dummy2 us_rep2)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const dummy3 Int)

;; "last"
(declare-fun last (us_rep2) Int)

;; "length"
(define-fun length ((param__container us_rep2)) Int
  (- (+ (last param__container) 1) 1))

;; "get"
(declare-fun get (us_rep2
  Int) Int)

;; "oeq"
(define-fun oeq ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

(declare-datatypes ()
  ((us_split_fields4
   (us_split_fieldsqtmk2
   (rec__tree_model__path_type__a us_rep2)(rec__tree_model__path_type__k Bool)))))

(declare-datatypes ()
  ((us_rep3 (us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-const tree_model__path_type__a__first__bit Int)

(declare-const tree_model__path_type__a__last__bit Int)

(declare-const tree_model__path_type__a__position Int)

;; "tree_model__path_type__a__first__bit_axiom"
(assert (<= 0 tree_model__path_type__a__first__bit))

;; "tree_model__path_type__a__last__bit_axiom"
(assert
  (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))

;; "tree_model__path_type__a__position_axiom"
(assert (<= 0 tree_model__path_type__a__position))

(declare-const tree_model__path_type__k__first__bit Int)

(declare-const tree_model__path_type__k__last__bit Int)

(declare-const tree_model__path_type__k__position Int)

;; "tree_model__path_type__k__first__bit_axiom"
(assert (<= 0 tree_model__path_type__k__first__bit))

;; "tree_model__path_type__k__last__bit_axiom"
(assert
  (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))

;; "tree_model__path_type__k__position_axiom"
(assert (<= 0 tree_model__path_type__k__position))

(declare-const dummy4 us_rep3)

;; "model"
(declare-fun model1 (us_rep1
  Int) (Array Int us_rep3))

;; "is_add"
(declare-fun is_add (us_rep2
  Int
  us_rep2) Bool)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 1 x) (<= x 100)))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const component__size1 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment6))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_414 (Array Int us_rep3)) (temp___is_init_410 Bool) (temp___skip_constant_411 Bool) (temp___do_toplevel_412 Bool) (temp___do_typ_inv_413 Bool)) Bool
  (forall ((temp___415 Int))
    (=>
      (and (<= 1 temp___415) (<= temp___415 100))
      (< (length
           (rec__tree_model__path_type__a
             (us_split_fields5 (select temp___expr_414 temp___415)))) 100))))

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_319 us_rep1) (temp___is_init_315 Bool) (temp___skip_constant_316 Bool) (temp___do_toplevel_317 Bool) (temp___do_typ_inv_318 Bool)) Bool
  true)

(declare-const rliteral extended_index_type)

;; "rliteral_axiom"
(assert (= (extended_index_typeqtint rliteral) 0))

;; "tree_structure"
(define-fun tree_structure ((param__f us_rep1)) Bool
  (and (and (and (and (and (and (and (and (ite (forall ((i Int))
                                                 (=>
                                                   (and
                                                     (<= (+ (to_rep
                                                              (rec__binary_trees__forest__s
                                                                (us_split_fields3
                                                                  param__f))) 1) i)
                                                     (<= i 100))
                                                   (= (bool_eq
                                                        (let ((temp___191 
                                                          (rec__binary_trees__forest__c
                                                            (us_split_fields3
                                                              param__f))))
                                                          (select temp___191 i))
                                                        (us_repqtmk
                                                          (us_split_fieldsqtmk
                                                            rliteral
                                                            rliteral
                                                            rliteral
                                                            (of_rep1 2)))) true)))
                                            true
                                            false) (ite (forall ((i Int))
                                                          (=>
                                                            (and
                                                              (<= 1 i)
                                                              (<= i 100))
                                                            (let ((temp___196 
                                                              (to_rep
                                                                (rec__binary_trees__cell__parent
                                                                  (us_split_fields1
                                                                    (let ((temp___194 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___194 i)))))))
                                                              (and
                                                                (<= 0 temp___196)
                                                                (<= temp___196 
                                                                (to_rep
                                                                  (rec__binary_trees__forest__s
                                                                    (us_split_fields3
                                                                    param__f))))))))
                                                     true
                                                     false)) (ite (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i)
                                                                    (<= i 100))
                                                                    (let ((temp___199 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__left
                                                                    (us_split_fields1
                                                                    (let ((temp___197 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___197 i)))))))
                                                                    (and
                                                                    (<= 0 temp___199)
                                                                    (<= temp___199 
                                                                    (to_rep
                                                                    (rec__binary_trees__forest__s
                                                                    (us_split_fields3
                                                                    param__f))))))))
                                                               true
                                                               false)) 
  (ite (forall ((i Int))
         (=>
           (and (<= 1 i) (<= i 100))
           (let ((temp___202 (to_rep
                               (rec__binary_trees__cell__right
                                 (us_split_fields1
                                   (let ((temp___200 (rec__binary_trees__forest__c
                                                       (us_split_fields3
                                                         param__f))))
                                     (select temp___200 i)))))))
             (and
               (<= 0 temp___202)
               (<= temp___202 (to_rep
                                (rec__binary_trees__forest__s
                                  (us_split_fields3 param__f))))))))
    true
    false)) (ite (forall ((i Int))
                   (=>
                     (and (<= 1 i) (<= i 100))
                     (=>
                       (= (to_rep1
                            (rec__binary_trees__cell__position
                              (us_split_fields1
                                (let ((temp___204 (rec__binary_trees__forest__c
                                                    (us_split_fields3
                                                      param__f))))
                                  (select temp___204 i))))) 2)
                       (= (to_rep
                            (rec__binary_trees__cell__parent
                              (us_split_fields1
                                (let ((temp___203 (rec__binary_trees__forest__c
                                                    (us_split_fields3
                                                      param__f))))
                                  (select temp___203 i))))) 0))))
              true
              false)) (ite (forall ((i Int))
                             (=>
                               (and (<= 1 i) (<= i 100))
                               (=>
                                 (not
                                   (= (to_rep
                                        (rec__binary_trees__cell__left
                                          (us_split_fields1
                                            (let ((temp___209 (rec__binary_trees__forest__c
                                                                (us_split_fields3
                                                                  param__f))))
                                              (select temp___209 i))))) 0))
                                 (and
                                   (= (to_rep1
                                        (rec__binary_trees__cell__position
                                          (us_split_fields1
                                            (let ((temp___205 (rec__binary_trees__forest__c
                                                                (us_split_fields3
                                                                  param__f))))
                                              (select temp___205 (to_rep
                                                                   (rec__binary_trees__cell__left
                                                                    (us_split_fields1
                                                                    (let ((temp___206 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___206 i)))))))))) 0)
                                   (= (to_rep
                                        (rec__binary_trees__cell__parent
                                          (us_split_fields1
                                            (let ((temp___207 (rec__binary_trees__forest__c
                                                                (us_split_fields3
                                                                  param__f))))
                                              (select temp___207 (to_rep
                                                                   (rec__binary_trees__cell__left
                                                                    (us_split_fields1
                                                                    (let ((temp___208 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___208 i)))))))))) i)))))
                        true
                        false)) (ite (forall ((i Int))
                                       (=>
                                         (and (<= 1 i) (<= i 100))
                                         (=>
                                           (not
                                             (= (to_rep
                                                  (rec__binary_trees__cell__right
                                                    (us_split_fields1
                                                      (let ((temp___214 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___214 i))))) 0))
                                           (and
                                             (= (to_rep1
                                                  (rec__binary_trees__cell__position
                                                    (us_split_fields1
                                                      (let ((temp___210 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___210 
                                                        (to_rep
                                                          (rec__binary_trees__cell__right
                                                            (us_split_fields1
                                                              (let ((temp___211 
                                                                (rec__binary_trees__forest__c
                                                                  (us_split_fields3
                                                                    param__f))))
                                                                (select temp___211 i)))))))))) 1)
                                             (= (to_rep
                                                  (rec__binary_trees__cell__parent
                                                    (us_split_fields1
                                                      (let ((temp___212 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___212 
                                                        (to_rep
                                                          (rec__binary_trees__cell__right
                                                            (us_split_fields1
                                                              (let ((temp___213 
                                                                (rec__binary_trees__forest__c
                                                                  (us_split_fields3
                                                                    param__f))))
                                                                (select temp___213 i)))))))))) i)))))
                                  true
                                  false)) (ite (forall ((i Int))
                                                 (=>
                                                   (and (<= 1 i) (<= i 100))
                                                   (=>
                                                     (and
                                                       (not
                                                         (= (to_rep
                                                              (rec__binary_trees__cell__parent
                                                                (us_split_fields1
                                                                  (let ((temp___217 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___217 i))))) 0))
                                                       (= (to_rep1
                                                            (rec__binary_trees__cell__position
                                                              (us_split_fields1
                                                                (let ((temp___218 
                                                                  (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                  (select temp___218 i))))) 0))
                                                     (= (to_rep
                                                          (rec__binary_trees__cell__left
                                                            (us_split_fields1
                                                              (let ((temp___215 
                                                                (rec__binary_trees__forest__c
                                                                  (us_split_fields3
                                                                    param__f))))
                                                                (select temp___215 
                                                                (to_rep
                                                                  (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (let ((temp___216 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___216 i)))))))))) i))))
                                            true
                                            false)) (ite (forall ((i Int))
                                                           (=>
                                                             (and
                                                               (<= 1 i)
                                                               (<= i 100))
                                                             (=>
                                                               (and
                                                                 (not
                                                                   (= 
                                                                   (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (let ((temp___221 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___221 i))))) 0))
                                                                 (= (to_rep1
                                                                    (rec__binary_trees__cell__position
                                                                    (us_split_fields1
                                                                    (let ((temp___222 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___222 i))))) 1))
                                                               (= (to_rep
                                                                    (rec__binary_trees__cell__right
                                                                    (us_split_fields1
                                                                    (let ((temp___219 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___219 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (let ((temp___220 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___220 i)))))))))) i))))
                                                      true
                                                      false)))

;; "type_invariant"
(define-fun type_invariant ((temp___327 us_rep1)) Bool
  (= (tree_structure temp___327) true))

(declare-const root Int)

(declare-const i Int)

(declare-const d Int)

;; "oeq"
(declare-fun oeq1 ((Array Int us_rep3)
  (Array Int us_rep3)) Bool)

;; "ole"
(define-fun ole ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (<= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                              (=>
                                                                (and
                                                                  (<= 1 n)
                                                                  (<= n 
                                                                  (last
                                                                    param__left)))
                                                                (= (get
                                                                    param__left
                                                                    n) 
                                                                (get
                                                                  param__right
                                                                  n))))
                                                         true
                                                         false)))

;; "is_concat"
(declare-fun is_concat (us_rep2
  us_rep2
  us_rep2) Bool)

;; "olt"
(define-fun olt ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (< (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "valid_root__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (and
               (dynamic_invariant1 param__f true false true true)
               (in_range3 param__i))
             (type_invariant param__f))
           (=>
             (< (size param__f) param__i)
             (not (= (valid_root param__f param__i) true)))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "valid_root__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=
           (= (valid_root param__f param__i) true)
           (and
             (<= param__i (to_rep
                            (rec__binary_trees__forest__s
                              (us_split_fields3 param__f))))
             (= (to_rep1
                  (rec__binary_trees__cell__position
                    (us_split_fields1
                      (let ((temp___332 (rec__binary_trees__forest__c
                                          (us_split_fields3 param__f))))
                        (select temp___332 param__i))))) 2))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "parent__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (and
               (dynamic_invariant1 param__f true false true true)
               (in_range3 param__i))
             (type_invariant param__f))
           (let ((result (parent param__f param__i)))
             (and
               (and
                 (=> (= (valid_root param__f param__i) true) (= result 0))
                 (=> (= (size param__f) 0) (= result 0)))
               (in_range result)))) :pattern ((parent param__f param__i)) ))))

;; "parent__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (= (parent param__f param__i) (to_rep
                                         (rec__binary_trees__cell__parent
                                           (us_split_fields1
                                             (let ((temp___335 (rec__binary_trees__forest__c
                                                                 (us_split_fields3
                                                                   param__f))))
                                               (select temp___335 param__i)))))) :pattern (
      (parent
        param__f
        param__i)) ))))

;; "peek__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int) (param__d Int))
      (! (=>
           (and
             (and
               (and
                 (dynamic_invariant1 param__f true false true true)
                 (in_range3 param__i))
               (in_range2 param__d))
             (type_invariant param__f))
           (let ((result (peek param__f param__i param__d)))
             (and
               (and
                 (ite (not (= result 0))
                   (and
                     (= (position param__f result) param__d)
                     (= (parent param__f result) param__i))
                   (forall ((j Int))
                     (=>
                       (and (<= 1 j) (<= j 100))
                       (=>
                         (= (parent param__f j) param__i)
                         (not (= (position param__f j) param__d))))))
                 (forall ((j Int))
                   (=>
                     (and (<= 1 j) (<= j 100))
                     (=>
                       (and
                         (= (parent param__f j) param__i)
                         (= (position param__f j) param__d))
                       (= result j)))))
               (in_range result)))) :pattern ((peek
                                                param__f
                                                param__i
                                                param__d)) ))))

;; "peek__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int) (param__d Int))
      (! (= (peek param__f param__i param__d) (ite (= param__d 0)
                                                (to_rep
                                                  (rec__binary_trees__cell__left
                                                    (us_split_fields1
                                                      (let ((temp___348 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___348 param__i)))))
                                                (to_rep
                                                  (rec__binary_trees__cell__right
                                                    (us_split_fields1
                                                      (let ((temp___349 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___349 param__i))))))) :pattern (
      (peek
        param__f
        param__i
        param__d)) ))))

;; "last__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (! (in_range4 (last param__container)) :pattern ((last param__container)) )))

;; "get__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (forall ((param__position Int))
      (! (=>
           (and
             (in_range4 param__position)
             (and
               (<= 1 param__position)
               (<= param__position (last param__container))))
           (in_range2 (get param__container param__position))) :pattern (
      (get
        param__container
        param__position)) ))))

;; "is_add__post_axiom"
(assert true)

;; "is_add__def_axiom"
(assert
  (forall ((param__s1 us_rep2) (param__s2 us_rep2))
    (forall ((param__d Int))
      (! (=
           (= (is_add param__s1 param__d param__s2) true)
           (and
             (and
               (= (- (length param__s2) 1) (length param__s1))
               (= (olt param__s1 param__s2) true))
             (= (get param__s2 (last param__s2)) param__d))) :pattern (
      (is_add
        param__s1
        param__d
        param__s2)) ))))

;; "model__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (! (=>
           (and
             (and
               (and
                 (dynamic_invariant1 param__f true false true true)
                 (in_range3 param__root))
               (type_invariant param__f))
             (= (valid_root param__f param__root) true))
           (let ((result (model1 param__f param__root)))
             (and
               (and
                 (and
                   (and
                     (and
                       (= (rec__tree_model__path_type__k
                            (us_split_fields5 (select result param__root))) true)
                       (= (last
                            (rec__tree_model__path_type__a
                              (us_split_fields5 (select result param__root)))) 0))
                     (forall ((i1 Int))
                       (=>
                         (and (<= 1 i1) (<= i1 100))
                         (=>
                           (not (= i1 param__root))
                           (ite (and
                                  (not (= (parent param__f i1) 0))
                                  (= (rec__tree_model__path_type__k
                                       (us_split_fields5
                                         (select result (parent param__f i1)))) true))
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields5 (select result i1))) true)
                             (not
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields5 (select result i1))) true)))))))
                   (forall ((i1 Int))
                     (=>
                       (and (<= 1 i1) (<= i1 100))
                       (ite (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields5 (select result i1))) true)
                              (not (= i1 param__root)))
                         (= (is_add
                              (rec__tree_model__path_type__a
                                (us_split_fields5
                                  (select result (parent param__f i1))))
                              (position param__f i1)
                              (rec__tree_model__path_type__a
                                (us_split_fields5 (select result i1)))) true)
                         (= (last
                              (rec__tree_model__path_type__a
                                (us_split_fields5 (select result i1)))) 0)))))
                 (forall ((i1 Int))
                   (=>
                     (and (<= 1 i1) (<= i1 100))
                     (=>
                       (= (rec__tree_model__path_type__k
                            (us_split_fields5 (select result i1))) true)
                       (forall ((j Int))
                         (=>
                           (and (<= 1 j) (<= j 100))
                           (=>
                             (and
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields5 (select result j))) true)
                               (= (oeq
                                    (rec__tree_model__path_type__a
                                      (us_split_fields5 (select result i1)))
                                    (rec__tree_model__path_type__a
                                      (us_split_fields5 (select result j)))) true))
                             (= j i1))))))))
               (dynamic_invariant result true false true true)))) :pattern (
      (model1
        param__f
        param__root)) ))))

;; "oeq__post_axiom"
(assert true)

;; "oeq__def_axiom"
(assert
  (forall ((param__m1 (Array Int us_rep3)) (param__m2 (Array Int us_rep3)))
    (! (=
         (= (oeq1 param__m1 param__m2) true)
         (forall ((i1 Int))
           (=>
             (and (<= 1 i1) (<= i1 100))
             (and
               (= (oeq
                    (rec__tree_model__path_type__a
                      (us_split_fields5 (select param__m1 i1)))
                    (rec__tree_model__path_type__a
                      (us_split_fields5 (select param__m2 i1)))) true)
               (=
                 (= (rec__tree_model__path_type__k
                      (us_split_fields5 (select param__m1 i1))) true)
                 (= (rec__tree_model__path_type__k
                      (us_split_fields5 (select param__m2 i1))) true)))))) :pattern (
    (oeq1
      param__m1
      param__m2)) )))

;; "is_concat__post_axiom"
(assert true)

;; "is_concat__def_axiom"
(assert
  (forall ((param__q us_rep2) (param__v us_rep2) (param__p us_rep2))
    (! (=
         (= (is_concat param__q param__v param__p) true)
         (and
           (and
             (and
               (= (- (length param__p) (length param__v)) (length param__q))
               (forall ((i1 Int))
                 (=>
                   (and (<= 1 i1) (<= i1 (last param__q)))
                   (= (get param__p i1) (get param__q i1)))))
             (forall ((i1 Int))
               (=>
                 (and (<= 1 i1) (<= i1 (last param__v)))
                 (= (get param__p (+ i1 (last param__q))) (get param__v i1)))))
           (forall ((i1 Int))
             (=>
               (and (<= (+ (last param__q) 1) i1) (<= i1 (last param__p)))
               (= (get param__v (- i1 (last param__q))) (get param__p i1)))))) :pattern (
    (is_concat
      param__q
      param__v
      param__p)) )))

(declare-const f__split_fields us_split_fields2)

(declare-const v Int)

;; "f__split_fields'unused"
(define-fun f__split_fieldsqtunused () us_split_fields__ref
  (us_split_fields__refqtmk f__split_fields))

;; "f__split_fields'unused"
(define-fun f__split_fieldsqtunused1 () us_split_fields__ref
  (us_split_fields__refqtmk f__split_fields))

;; "Assume"
(assert
  (dynamic_invariant1 (us_repqtmk1 f__split_fields) true false true true))

;; "Assume"
(assert (in_range3 root))

;; "Assume"
(assert (in_range3 i))

;; "Assume"
(assert (in_range2 d))

;; "Assume"
(assert (in_range v))

;; "Assume"
(assert (type_invariant (us_repqtmk1 f__split_fields)))

;; "Assume"
(assert
  (and
    (= (valid_root (us_repqtmk1 f__split_fields) root) true)
    (= (rec__tree_model__path_type__k
         (us_split_fields5
           (select (model1 (us_repqtmk1 f__split_fields) root) i))) true)))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused () us_split_fields2
  f__split_fields)

;; "temp___compl_1298"
(define-fun temp___compl_1298 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused () us_rep1
  temp___compl_1298)

;; "temp___compl_1299"
(define-fun temp___compl_1299 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused1 () us_split_fields2
  f__split_fields)

;; "temp___1300"
(define-fun temp___1300 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused1 () us_rep1
  temp___1300)

;; "Assert"
(assert (type_invariant temp___1300))

;; "temp___1302"
(define-fun temp___1302 () (Array Int us_rep3)
  (model1 temp___compl_1298 temp___compl_1299))

;; "H"
(assert (dynamic_invariant temp___1302 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1302 temp___compl_1299))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1302 temp___compl_1299)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1299))
        (ite (and
               (not (= (parent temp___compl_1298 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1302 (parent temp___compl_1298 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1302 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1302 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1302 i1))) true)
             (not (= i1 temp___compl_1299)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1302 (parent temp___compl_1298 i1))))
             (position temp___compl_1298 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1302 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1302 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1302 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1302 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1302 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1302 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused () (Array Int us_rep3)
  temp___1302)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused2 () us_split_fields2
  f__split_fields)

;; "temp___compl_1293"
(define-fun temp___compl_1293 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused2 () us_rep1
  temp___compl_1293)

;; "temp___compl_1294"
(define-fun temp___compl_1294 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused3 () us_split_fields2
  f__split_fields)

;; "temp___1295"
(define-fun temp___1295 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused3 () us_rep1
  temp___1295)

;; "Assert"
(assert (type_invariant temp___1295))

;; "temp___1297"
(define-fun temp___1297 () (Array Int us_rep3)
  (model1 temp___compl_1293 temp___compl_1294))

;; "H"
(assert (dynamic_invariant temp___1297 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1297 temp___compl_1294))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1297 temp___compl_1294)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1294))
        (ite (and
               (not (= (parent temp___compl_1293 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1297 (parent temp___compl_1293 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1297 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1297 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1297 i1))) true)
             (not (= i1 temp___compl_1294)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1297 (parent temp___compl_1293 i1))))
             (position temp___compl_1293 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1297 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1297 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1297 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1297 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1297 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1297 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused1 () (Array Int us_rep3)
  temp___1297)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused4 () us_split_fields2
  f__split_fields)

;; "temp___compl_1288"
(define-fun temp___compl_1288 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused4 () us_rep1
  temp___compl_1288)

;; "temp___compl_1289"
(define-fun temp___compl_1289 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused5 () us_split_fields2
  f__split_fields)

;; "temp___1290"
(define-fun temp___1290 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused5 () us_rep1
  temp___1290)

;; "Assert"
(assert (type_invariant temp___1290))

;; "temp___1292"
(define-fun temp___1292 () (Array Int us_rep3)
  (model1 temp___compl_1288 temp___compl_1289))

;; "H"
(assert (dynamic_invariant temp___1292 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1292 temp___compl_1289))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1292 temp___compl_1289)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1289))
        (ite (and
               (not (= (parent temp___compl_1288 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1292 (parent temp___compl_1288 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1292 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1292 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1292 i1))) true)
             (not (= i1 temp___compl_1289)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1292 (parent temp___compl_1288 i1))))
             (position temp___compl_1288 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1292 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1292 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1292 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1292 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1292 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1292 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused2 () (Array Int us_rep3)
  temp___1292)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused6 () us_split_fields2
  f__split_fields)

;; "temp___compl_1283"
(define-fun temp___compl_1283 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused6 () us_rep1
  temp___compl_1283)

;; "temp___compl_1284"
(define-fun temp___compl_1284 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused7 () us_split_fields2
  f__split_fields)

;; "temp___1285"
(define-fun temp___1285 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused7 () us_rep1
  temp___1285)

;; "Assert"
(assert (type_invariant temp___1285))

;; "temp___1287"
(define-fun temp___1287 () (Array Int us_rep3)
  (model1 temp___compl_1283 temp___compl_1284))

;; "H"
(assert (dynamic_invariant temp___1287 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1287 temp___compl_1284))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1287 temp___compl_1284)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1284))
        (ite (and
               (not (= (parent temp___compl_1283 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1287 (parent temp___compl_1283 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1287 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1287 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1287 i1))) true)
             (not (= i1 temp___compl_1284)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1287 (parent temp___compl_1283 i1))))
             (position temp___compl_1283 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1287 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1287 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1287 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1287 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1287 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1287 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused3 () (Array Int us_rep3)
  temp___1287)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused8 () us_split_fields2
  f__split_fields)

;; "temp___compl_1278"
(define-fun temp___compl_1278 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused8 () us_rep1
  temp___compl_1278)

;; "temp___compl_1279"
(define-fun temp___compl_1279 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused9 () us_split_fields2
  f__split_fields)

;; "temp___1280"
(define-fun temp___1280 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused9 () us_rep1
  temp___1280)

;; "Assert"
(assert (type_invariant temp___1280))

;; "temp___1282"
(define-fun temp___1282 () (Array Int us_rep3)
  (model1 temp___compl_1278 temp___compl_1279))

;; "H"
(assert (dynamic_invariant temp___1282 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1282 temp___compl_1279))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1282 temp___compl_1279)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1279))
        (ite (and
               (not (= (parent temp___compl_1278 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1282 (parent temp___compl_1278 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1282 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1282 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1282 i1))) true)
             (not (= i1 temp___compl_1279)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1282 (parent temp___compl_1278 i1))))
             (position temp___compl_1278 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1282 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1282 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1282 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1282 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1282 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1282 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused4 () (Array Int us_rep3)
  temp___1282)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused10 () us_split_fields2
  f__split_fields)

;; "temp___compl_1273"
(define-fun temp___compl_1273 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused10 () us_rep1
  temp___compl_1273)

;; "temp___compl_1274"
(define-fun temp___compl_1274 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused11 () us_split_fields2
  f__split_fields)

;; "temp___1275"
(define-fun temp___1275 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused11 () us_rep1
  temp___1275)

;; "Assert"
(assert (type_invariant temp___1275))

;; "temp___1277"
(define-fun temp___1277 () (Array Int us_rep3)
  (model1 temp___compl_1273 temp___compl_1274))

;; "H"
(assert (dynamic_invariant temp___1277 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1277 temp___compl_1274))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1277 temp___compl_1274)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1274))
        (ite (and
               (not (= (parent temp___compl_1273 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1277 (parent temp___compl_1273 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1277 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1277 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1277 i1))) true)
             (not (= i1 temp___compl_1274)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1277 (parent temp___compl_1273 i1))))
             (position temp___compl_1273 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1277 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1277 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1277 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1277 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1277 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1277 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused5 () (Array Int us_rep3)
  temp___1277)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused12 () us_split_fields2
  f__split_fields)

;; "temp___compl_1268"
(define-fun temp___compl_1268 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused12 () us_rep1
  temp___compl_1268)

;; "temp___compl_1269"
(define-fun temp___compl_1269 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused13 () us_split_fields2
  f__split_fields)

;; "temp___1270"
(define-fun temp___1270 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused13 () us_rep1
  temp___1270)

;; "Assert"
(assert (type_invariant temp___1270))

;; "temp___1272"
(define-fun temp___1272 () (Array Int us_rep3)
  (model1 temp___compl_1268 temp___compl_1269))

;; "H"
(assert (dynamic_invariant temp___1272 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1272 temp___compl_1269))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1272 temp___compl_1269)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1269))
        (ite (and
               (not (= (parent temp___compl_1268 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1272 (parent temp___compl_1268 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1272 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1272 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1272 i1))) true)
             (not (= i1 temp___compl_1269)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1272 (parent temp___compl_1268 i1))))
             (position temp___compl_1268 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1272 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1272 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1272 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1272 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1272 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1272 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused6 () (Array Int us_rep3)
  temp___1272)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused14 () us_split_fields2
  f__split_fields)

;; "temp___compl_1263"
(define-fun temp___compl_1263 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused14 () us_rep1
  temp___compl_1263)

;; "temp___compl_1264"
(define-fun temp___compl_1264 () Int
  root)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused15 () us_split_fields2
  f__split_fields)

;; "temp___1265"
(define-fun temp___1265 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused15 () us_rep1
  temp___1265)

;; "Assert"
(assert (type_invariant temp___1265))

;; "temp___1267"
(define-fun temp___1267 () (Array Int us_rep3)
  (model1 temp___compl_1263 temp___compl_1264))

;; "H"
(assert (dynamic_invariant temp___1267 true false true true))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5 (select temp___1267 temp___compl_1264))) true))

;; "H"
(assert
  (= (last
       (rec__tree_model__path_type__a
         (us_split_fields5 (select temp___1267 temp___compl_1264)))) 0))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (not (= i1 temp___compl_1264))
        (ite (and
               (not (= (parent temp___compl_1263 i1) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields5
                      (select temp___1267 (parent temp___compl_1263 i1)))) true))
          (= (rec__tree_model__path_type__k
               (us_split_fields5 (select temp___1267 i1))) true)
          (not
            (= (rec__tree_model__path_type__k
                 (us_split_fields5 (select temp___1267 i1))) true)))))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (ite (and
             (= (rec__tree_model__path_type__k
                  (us_split_fields5 (select temp___1267 i1))) true)
             (not (= i1 temp___compl_1264)))
        (= (is_add
             (rec__tree_model__path_type__a
               (us_split_fields5
                 (select temp___1267 (parent temp___compl_1263 i1))))
             (position temp___compl_1263 i1)
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1267 i1)))) true)
        (= (last
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___1267 i1)))) 0)))))

;; "H"
(assert
  (forall ((i1 Int))
    (=>
      (and (<= 1 i1) (<= i1 100))
      (=>
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___1267 i1))) true)
        (forall ((j Int))
          (=>
            (and (<= 1 j) (<= j 100))
            (=>
              (and
                (= (rec__tree_model__path_type__k
                     (us_split_fields5 (select temp___1267 j))) true)
                (= (oeq
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1267 i1)))
                     (rec__tree_model__path_type__a
                       (us_split_fields5 (select temp___1267 j)))) true))
              (= j i1))))))))

;; "model'result'unused"
(define-fun modelqtresultqtunused7 () (Array Int us_rep3)
  temp___1267)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused16 () us_split_fields2
  f__split_fields)

;; "temp___old_1172"
(define-fun temp___old_1172 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused16 () us_rep1
  temp___old_1172)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused17 () us_split_fields2
  f__split_fields)

;; "temp___old_1178"
(define-fun temp___old_1178 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused17 () us_rep1
  temp___old_1178)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused18 () us_split_fields2
  f__split_fields)

;; "temp___old_1161"
(define-fun temp___old_1161 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused18 () us_rep1
  temp___old_1161)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused19 () us_split_fields2
  f__split_fields)

;; "temp___old_1149"
(define-fun temp___old_1149 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused19 () us_rep1
  temp___old_1149)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused20 () us_split_fields2
  f__split_fields)

;; "temp___old_1132"
(define-fun temp___old_1132 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused20 () us_rep1
  temp___old_1132)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused21 () us_split_fields2
  f__split_fields)

;; "temp___old_1121"
(define-fun temp___old_1121 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused21 () us_rep1
  temp___old_1121)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused22 () us_split_fields2
  f__split_fields)

;; "temp___compl_1257"
(define-fun temp___compl_1257 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused22 () us_rep1
  temp___compl_1257)

;; "temp___compl_1258"
(define-fun temp___compl_1258 () Int
  i)

;; "temp___compl_1259"
(define-fun temp___compl_1259 () Int
  d)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused23 () us_split_fields2
  f__split_fields)

;; "temp___1260"
(define-fun temp___1260 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused23 () us_rep1
  temp___1260)

;; "Assert"
(assert (type_invariant temp___1260))

;; "temp___1262"
(define-fun temp___1262 () Int
  (peek temp___compl_1257 temp___compl_1258 temp___compl_1259))

;; "H"
(assert (in_range temp___1262))

;; "H"
(assert
  (= temp___1262 (ite (= temp___compl_1259 0)
                   (to_rep
                     (rec__binary_trees__cell__left
                       (us_split_fields1
                         (select (rec__binary_trees__forest__c
                                   f__split_fields) temp___compl_1258))))
                   (to_rep
                     (rec__binary_trees__cell__right
                       (us_split_fields1
                         (select (rec__binary_trees__forest__c
                                   f__split_fields) temp___compl_1258)))))))

;; "H"
(assert
  (ite (not (= temp___1262 0))
    (and
      (= (position temp___compl_1257 temp___1262) temp___compl_1259)
      (= (parent temp___compl_1257 temp___1262) temp___compl_1258))
    (forall ((j Int))
      (=>
        (and (<= 1 j) (<= j 100))
        (=>
          (= (parent temp___compl_1257 j) temp___compl_1258)
          (not (= (position temp___compl_1257 j) temp___compl_1259)))))))

;; "H"
(assert
  (forall ((j Int))
    (=>
      (and (<= 1 j) (<= j 100))
      (=>
        (and
          (= (parent temp___compl_1257 j) temp___compl_1258)
          (= (position temp___compl_1257 j) temp___compl_1259))
        (= temp___1262 j)))))

;; "peek'result'unused"
(define-fun peekqtresultqtunused () Int
  temp___1262)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused24 () us_split_fields2
  f__split_fields)

;; "temp___compl_1253"
(define-fun temp___compl_1253 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused24 () us_rep1
  temp___compl_1253)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused25 () us_split_fields2
  f__split_fields)

;; "temp___1254"
(define-fun temp___1254 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused25 () us_rep1
  temp___1254)

;; "Assert"
(assert (type_invariant temp___1254))

;; "temp___1256"
(define-fun temp___1256 () Int
  (size temp___compl_1253))

;; "H"
(assert (in_range temp___1256))

;; "H"
(assert
  (= temp___1256 (to_rep (rec__binary_trees__forest__s f__split_fields))))

;; "size'result'unused"
(define-fun sizeqtresultqtunused () Int
  temp___1256)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused26 () us_split_fields2
  f__split_fields)

;; "binary_trees__extract__f_old__assume'unused"
(define-fun binary_trees__extract__f_old__assumeqtunused () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused26 () us_rep1
  (us_repqtmk1 f__split_fields))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused () us_split_fields2
  f__split_fields)

(declare-const f_old__split_fields us_split_fields2)

;; "f_old__split_fields'unused"
(define-fun f_old__split_fieldsqtunused () us_split_fields__ref
  (us_split_fields__refqtmk f_old__split_fields))

;; "H"
(assert (= f_old__split_fields f__split_fields))

;; "Assume"
(assert
  (dynamic_invariant1 (us_repqtmk1 f_old__split_fields) true false true true))

(declare-const o Int)

(declare-const infix_eqqtresultqtunused Bool)

;; "H"
(assert (= infix_eqqtresultqtunused (ite (= d 0) true false)))

(declare-const us_split_fields__contentqtresultqtunused27 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused27 us_rep1)

(declare-const us_split_fieldsqtresultqtunused1 us_split_fields2)

(declare-const temp___1057 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused (Array Int us_rep))

(declare-const o1 us_rep)

(declare-const getqtresultqtunused us_rep)

(declare-const o2 us_split_fields)

(declare-const us_split_fieldsqtresultqtunused2 us_split_fields)

(declare-const o3 extended_index_type)

(declare-const rec__binary_trees__cell__rightqtresultqtunused extended_index_type)

(declare-const to_repqtresultqtunused Int)

(declare-const us_split_fields__contentqtresultqtunused28 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused28 us_rep1)

(declare-const us_split_fieldsqtresultqtunused3 us_split_fields2)

(declare-const temp___1056 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused1 (Array Int us_rep))

(declare-const o4 us_rep)

(declare-const getqtresultqtunused1 us_rep)

(declare-const o5 us_split_fields)

(declare-const us_split_fieldsqtresultqtunused4 us_split_fields)

(declare-const o6 extended_index_type)

(declare-const rec__binary_trees__cell__leftqtresultqtunused extended_index_type)

(declare-const to_repqtresultqtunused1 Int)

;; "H"
(assert
  (ite (= d 0)
    (and
      (= us_split_fields__contentqtresultqtunused28 f__split_fields)
      (and
        (= us_repqtmkqtresultqtunused28 (us_repqtmk1 f__split_fields))
        (and
          (= us_split_fieldsqtresultqtunused3 f__split_fields)
          (and
            (= temp___1056 (rec__binary_trees__forest__c f__split_fields))
            (and
              (= rec__binary_trees__forest__cqtresultqtunused1 temp___1056)
              (and
                (= o4 (select temp___1056 i))
                (and
                  (= getqtresultqtunused1 o4)
                  (and
                    (= o5 (us_split_fields1 o4))
                    (and
                      (= us_split_fieldsqtresultqtunused4 o5)
                      (and
                        (= o6 (rec__binary_trees__cell__left o5))
                        (and
                          (= rec__binary_trees__cell__leftqtresultqtunused 
                          o6)
                          (and
                            (= (to_rep o6) o)
                            (= to_repqtresultqtunused1 o)))))))))))))
    (and
      (= us_split_fields__contentqtresultqtunused27 f__split_fields)
      (and
        (= us_repqtmkqtresultqtunused27 (us_repqtmk1 f__split_fields))
        (and
          (= us_split_fieldsqtresultqtunused1 f__split_fields)
          (and
            (= temp___1057 (rec__binary_trees__forest__c f__split_fields))
            (and
              (= rec__binary_trees__forest__cqtresultqtunused temp___1057)
              (and
                (= o1 (select temp___1057 i))
                (and
                  (= getqtresultqtunused o1)
                  (and
                    (= o2 (us_split_fields1 o1))
                    (and
                      (= us_split_fieldsqtresultqtunused2 o2)
                      (and
                        (= o3 (rec__binary_trees__cell__right o2))
                        (and
                          (= rec__binary_trees__cell__rightqtresultqtunused 
                          o3)
                          (and
                            (= (to_rep o3) o)
                            (= to_repqtresultqtunused o)))))))))))))))

(declare-const v1 Int)

;; "v'unused"
(define-fun vqtunused () int__ref
  (int__refqtmk v1))

;; "H"
(assert (= v1 o))

(declare-const spark__branch Bool)

(declare-const f__split_fields1 us_split_fields2)

;; "f__split_fields'unused"
(define-fun f__split_fieldsqtunused2 () us_split_fields__ref
  (us_split_fields__refqtmk f__split_fields1))

;; "spark__branch'unused"
(define-fun spark__branchqtunused () bool__ref
  (bool__refqtmk spark__branch))

(declare-const int__contentqtresultqtunused Int)

;; "H"
(assert (= int__contentqtresultqtunused v1))

(declare-const infix_eqqtresultqtunused1 Bool)

;; "H"
(assert (= infix_eqqtresultqtunused1 (ite (= v1 0) true false)))

(declare-const spark__branch1 Bool)

(declare-const spark__branchqtunused1 bool__ref)

;; "H"
(assert (= spark__branchqtunused1 (bool__refqtmk spark__branch1)))

;; "H"
(assert (= spark__branch1 (ite (= v1 0) false true)))

(declare-const bool__contentqtresultqtunused Bool)

;; "H"
(assert (= bool__contentqtresultqtunused spark__branch1))

(declare-const f__split_fields2 us_split_fields2)

(declare-const f__split_fieldsqtunused3 us_split_fields__ref)

(declare-const us_split_fields__contentqtresultqtunused29 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused29 us_rep1)

(declare-const usq_qtunused us_split_fields2)

(declare-const us_split_fieldsqtresultqtunused5 us_split_fields2)

(declare-const us_split_fields__contentqtresultqtunused30 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused30 us_rep1)

(declare-const us_split_fieldsqtresultqtunused6 us_split_fields2)

(declare-const temp___1082 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused2 (Array Int us_rep))

(declare-const us_split_fields__contentqtresultqtunused31 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused31 us_rep1)

(declare-const us_split_fieldsqtresultqtunused7 us_split_fields2)

(declare-const temp___1079 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused3 (Array Int us_rep))

(declare-const int__contentqtresultqtunused1 Int)

(declare-const temp___1080 us_rep)

(declare-const getqtresultqtunused2 us_rep)

(declare-const usq_ us_split_fields)

(declare-const us_split_fieldsqtresultqtunused8 us_split_fields)

(declare-const o7 position_type)

(declare-const of_repqtresultqtunused position_type)

(declare-const o8 extended_index_type)

(declare-const rec__binary_trees__cell__parentqtresultqtunused extended_index_type)

(declare-const o9 extended_index_type)

(declare-const rec__binary_trees__cell__rightqtresultqtunused1 extended_index_type)

(declare-const o10 extended_index_type)

(declare-const rec__binary_trees__cell__leftqtresultqtunused1 extended_index_type)

(declare-const o11 us_split_fields)

(declare-const us_split_fieldsqtmkqtresultqtunused us_split_fields)

(declare-const o12 us_rep)

(declare-const us_repqtmkqtresultqtunused32 us_rep)

(declare-const int__contentqtresultqtunused2 Int)

(declare-const o13 (Array Int us_rep))

(declare-const setqtresultqtunused (Array Int us_rep))

(declare-const o14 extended_index_type)

(declare-const rec__binary_trees__forest__sqtresultqtunused extended_index_type)

(declare-const o15 us_split_fields2)

(declare-const us_split_fieldsqtmkqtresultqtunused1 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused33 us_rep1)

(declare-const us_split_fieldsqtresultqtunused9 us_split_fields2)

(declare-const f__split_fields3 us_split_fields2)

(declare-const f__split_fieldsqtunused4 us_split_fields__ref)

(declare-const us_split_fields__contentqtresultqtunused32 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused34 us_rep1)

(declare-const usq_qtunused1 us_split_fields2)

(declare-const us_split_fieldsqtresultqtunused10 us_split_fields2)

(declare-const us_split_fields__contentqtresultqtunused33 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused35 us_rep1)

(declare-const us_split_fieldsqtresultqtunused11 us_split_fields2)

(declare-const temp___1091 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused4 (Array Int us_rep))

(declare-const us_split_fields__contentqtresultqtunused34 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused36 us_rep1)

(declare-const us_split_fieldsqtresultqtunused12 us_split_fields2)

(declare-const temp___1088 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused5 (Array Int us_rep))

(declare-const int__contentqtresultqtunused3 Int)

(declare-const temp___1089 us_rep)

(declare-const getqtresultqtunused3 us_rep)

(declare-const usq_1 us_split_fields)

(declare-const us_split_fieldsqtresultqtunused13 us_split_fields)

(declare-const o16 position_type)

(declare-const rec__binary_trees__cell__positionqtresultqtunused position_type)

(declare-const o17 extended_index_type)

(declare-const rec__binary_trees__cell__rightqtresultqtunused2 extended_index_type)

(declare-const o18 extended_index_type)

(declare-const rec__binary_trees__cell__leftqtresultqtunused2 extended_index_type)

(declare-const o19 us_split_fields)

(declare-const us_split_fieldsqtmkqtresultqtunused2 us_split_fields)

(declare-const o20 us_rep)

(declare-const us_repqtmkqtresultqtunused37 us_rep)

(declare-const int__contentqtresultqtunused4 Int)

(declare-const o21 (Array Int us_rep))

(declare-const setqtresultqtunused1 (Array Int us_rep))

(declare-const o22 extended_index_type)

(declare-const rec__binary_trees__forest__sqtresultqtunused1 extended_index_type)

(declare-const o23 us_split_fields2)

(declare-const us_split_fieldsqtmkqtresultqtunused3 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused38 us_rep1)

(declare-const us_split_fieldsqtresultqtunused14 us_split_fields2)

(declare-const o24 Bool)

(declare-const infix_eqqtresultqtunused2 Bool)

(declare-const bool__contentqtresultqtunused1 Bool)

(declare-const us_split_fields__contentqtresultqtunused35 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused39 us_rep1)

(declare-const usq_qtunused2 us_split_fields2)

(declare-const us_split_fieldsqtresultqtunused15 us_split_fields2)

(declare-const us_split_fields__contentqtresultqtunused36 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused40 us_rep1)

(declare-const us_split_fieldsqtresultqtunused16 us_split_fields2)

(declare-const temp___1071 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused6 (Array Int us_rep))

(declare-const us_split_fields__contentqtresultqtunused37 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused41 us_rep1)

(declare-const us_split_fieldsqtresultqtunused17 us_split_fields2)

(declare-const temp___1068 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused7 (Array Int us_rep))

(declare-const temp___1069 us_rep)

(declare-const getqtresultqtunused4 us_rep)

(declare-const usq_2 us_split_fields)

(declare-const us_split_fieldsqtresultqtunused18 us_split_fields)

(declare-const o25 position_type)

(declare-const rec__binary_trees__cell__positionqtresultqtunused1 position_type)

(declare-const o26 extended_index_type)

(declare-const rec__binary_trees__cell__parentqtresultqtunused1 extended_index_type)

(declare-const o27 extended_index_type)

(declare-const rec__binary_trees__cell__leftqtresultqtunused3 extended_index_type)

(declare-const o28 us_split_fields)

(declare-const us_split_fieldsqtmkqtresultqtunused4 us_split_fields)

(declare-const o29 us_rep)

(declare-const us_repqtmkqtresultqtunused42 us_rep)

(declare-const o30 (Array Int us_rep))

(declare-const setqtresultqtunused2 (Array Int us_rep))

(declare-const o31 extended_index_type)

(declare-const rec__binary_trees__forest__sqtresultqtunused2 extended_index_type)

(declare-const o32 us_split_fields2)

(declare-const us_split_fieldsqtmkqtresultqtunused5 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused43 us_rep1)

(declare-const us_split_fieldsqtresultqtunused19 us_split_fields2)

(declare-const us_split_fields__contentqtresultqtunused38 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused44 us_rep1)

(declare-const usq_qtunused3 us_split_fields2)

(declare-const us_split_fieldsqtresultqtunused20 us_split_fields2)

(declare-const us_split_fields__contentqtresultqtunused39 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused45 us_rep1)

(declare-const us_split_fieldsqtresultqtunused21 us_split_fields2)

(declare-const temp___1062 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused8 (Array Int us_rep))

(declare-const us_split_fields__contentqtresultqtunused40 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused46 us_rep1)

(declare-const us_split_fieldsqtresultqtunused22 us_split_fields2)

(declare-const temp___1059 (Array Int us_rep))

(declare-const rec__binary_trees__forest__cqtresultqtunused9 (Array Int us_rep))

(declare-const temp___1060 us_rep)

(declare-const getqtresultqtunused5 us_rep)

(declare-const usq_3 us_split_fields)

(declare-const us_split_fieldsqtresultqtunused23 us_split_fields)

(declare-const o33 position_type)

(declare-const rec__binary_trees__cell__positionqtresultqtunused2 position_type)

(declare-const o34 extended_index_type)

(declare-const rec__binary_trees__cell__parentqtresultqtunused2 extended_index_type)

(declare-const o35 extended_index_type)

(declare-const rec__binary_trees__cell__rightqtresultqtunused3 extended_index_type)

(declare-const o36 us_split_fields)

(declare-const us_split_fieldsqtmkqtresultqtunused6 us_split_fields)

(declare-const o37 us_rep)

(declare-const us_repqtmkqtresultqtunused47 us_rep)

(declare-const o38 (Array Int us_rep))

(declare-const setqtresultqtunused3 (Array Int us_rep))

(declare-const o39 extended_index_type)

(declare-const rec__binary_trees__forest__sqtresultqtunused3 extended_index_type)

(declare-const o40 us_split_fields2)

(declare-const us_split_fieldsqtmkqtresultqtunused7 us_split_fields2)

(declare-const us_repqtmkqtresultqtunused48 us_rep1)

(declare-const us_split_fieldsqtresultqtunused24 us_split_fields2)

;; "H"
(assert
  (ite (= spark__branch1 true)
    (and
      (= f__split_fieldsqtunused3 (us_split_fields__refqtmk f__split_fields2))
      (and
        (and
          (= o24 (ite (= d 0) true false))
          (and
            (= infix_eqqtresultqtunused2 o24)
            (and
              (= spark__branch o24)
              (and
                (= bool__contentqtresultqtunused1 spark__branch)
                (ite (= spark__branch true)
                  (and
                    (= us_split_fields__contentqtresultqtunused38 f__split_fields)
                    (and
                      (= us_repqtmkqtresultqtunused44 (us_repqtmk1
                                                        f__split_fields))
                      (and
                        (= usq_qtunused3 f__split_fields)
                        (and
                          (= us_split_fieldsqtresultqtunused20 f__split_fields)
                          (and
                            (= us_split_fields__contentqtresultqtunused39 
                            f__split_fields)
                            (and
                              (= us_repqtmkqtresultqtunused45 (us_repqtmk1
                                                                f__split_fields))
                              (and
                                (= us_split_fieldsqtresultqtunused21 
                                f__split_fields)
                                (and
                                  (= temp___1062 (rec__binary_trees__forest__c
                                                   f__split_fields))
                                  (and
                                    (= rec__binary_trees__forest__cqtresultqtunused8 
                                    temp___1062)
                                    (and
                                      (= us_split_fields__contentqtresultqtunused40 
                                      f__split_fields)
                                      (and
                                        (= us_repqtmkqtresultqtunused46 
                                        (us_repqtmk1
                                          f__split_fields))
                                        (and
                                          (= us_split_fieldsqtresultqtunused22 
                                          f__split_fields)
                                          (and
                                            (= temp___1059 (rec__binary_trees__forest__c
                                                             f__split_fields))
                                            (and
                                              (= rec__binary_trees__forest__cqtresultqtunused9 
                                              temp___1059)
                                              (and
                                                (= temp___1060 (select 
                                                temp___1059 i))
                                                (and
                                                  (= getqtresultqtunused5 
                                                  temp___1060)
                                                  (and
                                                    (= usq_3 (us_split_fields1
                                                               temp___1060))
                                                    (and
                                                      (= us_split_fieldsqtresultqtunused23 
                                                      usq_3)
                                                      (and
                                                        (= o33 (rec__binary_trees__cell__position
                                                                 usq_3))
                                                        (and
                                                          (= rec__binary_trees__cell__positionqtresultqtunused2 
                                                          o33)
                                                          (and
                                                            (= o34 (rec__binary_trees__cell__parent
                                                                    usq_3))
                                                            (and
                                                              (= rec__binary_trees__cell__parentqtresultqtunused2 
                                                              o34)
                                                              (and
                                                                (= o35 
                                                                (rec__binary_trees__cell__right
                                                                  usq_3))
                                                                (and
                                                                  (= 
                                                                  rec__binary_trees__cell__rightqtresultqtunused3 
                                                                  o35)
                                                                  (and
                                                                    (= 
                                                                    o36 
                                                                    (us_split_fieldsqtmk
                                                                    rliteral
                                                                    o35
                                                                    o34
                                                                    o33))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused6 
                                                                    o36)
                                                                    (and
                                                                    (= 
                                                                    o37 
                                                                    (us_repqtmk
                                                                    o36))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused47 
                                                                    o37)
                                                                    (and
                                                                    (= 
                                                                    o38 (store 
                                                                    temp___1062 
                                                                    i o37))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused3 
                                                                    o38)
                                                                    (and
                                                                    (= 
                                                                    o39 
                                                                    (rec__binary_trees__forest__s
                                                                    f__split_fields))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__forest__sqtresultqtunused3 
                                                                    o39)
                                                                    (and
                                                                    (= 
                                                                    o40 
                                                                    (us_split_fieldsqtmk1
                                                                    o39
                                                                    o38))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused7 
                                                                    o40)
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused48 
                                                                    (us_repqtmk1
                                                                    o40))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused24 
                                                                    o40)
                                                                    (= 
                                                                    f__split_fields2 
                                                                    o40)))))))))))))))))))))))))))))))))))))
                  (and
                    (= us_split_fields__contentqtresultqtunused35 f__split_fields)
                    (and
                      (= us_repqtmkqtresultqtunused39 (us_repqtmk1
                                                        f__split_fields))
                      (and
                        (= usq_qtunused2 f__split_fields)
                        (and
                          (= us_split_fieldsqtresultqtunused15 f__split_fields)
                          (and
                            (= us_split_fields__contentqtresultqtunused36 
                            f__split_fields)
                            (and
                              (= us_repqtmkqtresultqtunused40 (us_repqtmk1
                                                                f__split_fields))
                              (and
                                (= us_split_fieldsqtresultqtunused16 
                                f__split_fields)
                                (and
                                  (= temp___1071 (rec__binary_trees__forest__c
                                                   f__split_fields))
                                  (and
                                    (= rec__binary_trees__forest__cqtresultqtunused6 
                                    temp___1071)
                                    (and
                                      (= us_split_fields__contentqtresultqtunused37 
                                      f__split_fields)
                                      (and
                                        (= us_repqtmkqtresultqtunused41 
                                        (us_repqtmk1
                                          f__split_fields))
                                        (and
                                          (= us_split_fieldsqtresultqtunused17 
                                          f__split_fields)
                                          (and
                                            (= temp___1068 (rec__binary_trees__forest__c
                                                             f__split_fields))
                                            (and
                                              (= rec__binary_trees__forest__cqtresultqtunused7 
                                              temp___1068)
                                              (and
                                                (= temp___1069 (select 
                                                temp___1068 i))
                                                (and
                                                  (= getqtresultqtunused4 
                                                  temp___1069)
                                                  (and
                                                    (= usq_2 (us_split_fields1
                                                               temp___1069))
                                                    (and
                                                      (= us_split_fieldsqtresultqtunused18 
                                                      usq_2)
                                                      (and
                                                        (= o25 (rec__binary_trees__cell__position
                                                                 usq_2))
                                                        (and
                                                          (= rec__binary_trees__cell__positionqtresultqtunused1 
                                                          o25)
                                                          (and
                                                            (= o26 (rec__binary_trees__cell__parent
                                                                    usq_2))
                                                            (and
                                                              (= rec__binary_trees__cell__parentqtresultqtunused1 
                                                              o26)
                                                              (and
                                                                (= o27 
                                                                (rec__binary_trees__cell__left
                                                                  usq_2))
                                                                (and
                                                                  (= 
                                                                  rec__binary_trees__cell__leftqtresultqtunused3 
                                                                  o27)
                                                                  (and
                                                                    (= 
                                                                    o28 
                                                                    (us_split_fieldsqtmk
                                                                    o27
                                                                    rliteral
                                                                    o26
                                                                    o25))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused4 
                                                                    o28)
                                                                    (and
                                                                    (= 
                                                                    o29 
                                                                    (us_repqtmk
                                                                    o28))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused42 
                                                                    o29)
                                                                    (and
                                                                    (= 
                                                                    o30 (store 
                                                                    temp___1071 
                                                                    i o29))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused2 
                                                                    o30)
                                                                    (and
                                                                    (= 
                                                                    o31 
                                                                    (rec__binary_trees__forest__s
                                                                    f__split_fields))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__forest__sqtresultqtunused2 
                                                                    o31)
                                                                    (and
                                                                    (= 
                                                                    o32 
                                                                    (us_split_fieldsqtmk1
                                                                    o31
                                                                    o30))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused5 
                                                                    o32)
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused43 
                                                                    (us_repqtmk1
                                                                    o32))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused19 
                                                                    o32)
                                                                    (= 
                                                                    f__split_fields2 
                                                                    o32))))))))))))))))))))))))))))))))))))))))))
        (and
          (= (to_rep
               (rec__binary_trees__cell__parent
                 (us_split_fields1
                   (select (rec__binary_trees__forest__c f__split_fields2) 
                   v1)))) i)
          (and
            (= us_split_fields__contentqtresultqtunused29 f__split_fields2)
            (and
              (= us_repqtmkqtresultqtunused29 (us_repqtmk1 f__split_fields2))
              (and
                (= usq_qtunused f__split_fields2)
                (and
                  (= us_split_fieldsqtresultqtunused5 f__split_fields2)
                  (and
                    (= us_split_fields__contentqtresultqtunused30 f__split_fields2)
                    (and
                      (= us_repqtmkqtresultqtunused30 (us_repqtmk1
                                                        f__split_fields2))
                      (and
                        (= us_split_fieldsqtresultqtunused6 f__split_fields2)
                        (and
                          (= temp___1082 (rec__binary_trees__forest__c
                                           f__split_fields2))
                          (and
                            (= rec__binary_trees__forest__cqtresultqtunused2 
                            temp___1082)
                            (and
                              (= us_split_fields__contentqtresultqtunused31 
                              f__split_fields2)
                              (and
                                (= us_repqtmkqtresultqtunused31 (us_repqtmk1
                                                                  f__split_fields2))
                                (and
                                  (= us_split_fieldsqtresultqtunused7 
                                  f__split_fields2)
                                  (and
                                    (= temp___1079 (rec__binary_trees__forest__c
                                                     f__split_fields2))
                                    (and
                                      (= rec__binary_trees__forest__cqtresultqtunused3 
                                      temp___1079)
                                      (and
                                        (= int__contentqtresultqtunused1 
                                        v1)
                                        (and
                                          (= temp___1080 (select temp___1079 
                                          v1))
                                          (and
                                            (= getqtresultqtunused2 temp___1080)
                                            (and
                                              (= usq_ (us_split_fields1
                                                        temp___1080))
                                              (and
                                                (= us_split_fieldsqtresultqtunused8 
                                                usq_)
                                                (and
                                                  (= (to_rep1 o7) 2)
                                                  (and
                                                    (= of_repqtresultqtunused 
                                                    o7)
                                                    (and
                                                      (= o8 (rec__binary_trees__cell__parent
                                                              usq_))
                                                      (and
                                                        (= rec__binary_trees__cell__parentqtresultqtunused 
                                                        o8)
                                                        (and
                                                          (= o9 (rec__binary_trees__cell__right
                                                                  usq_))
                                                          (and
                                                            (= rec__binary_trees__cell__rightqtresultqtunused1 
                                                            o9)
                                                            (and
                                                              (= o10 
                                                              (rec__binary_trees__cell__left
                                                                usq_))
                                                              (and
                                                                (= rec__binary_trees__cell__leftqtresultqtunused1 
                                                                o10)
                                                                (and
                                                                  (= 
                                                                  o11 
                                                                  (us_split_fieldsqtmk
                                                                    o10
                                                                    o9
                                                                    o8
                                                                    o7))
                                                                  (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused 
                                                                    o11)
                                                                    (and
                                                                    (= 
                                                                    o12 
                                                                    (us_repqtmk
                                                                    o11))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused32 
                                                                    o12)
                                                                    (and
                                                                    (and
                                                                    (<= 1 
                                                                    v1)
                                                                    (<= 
                                                                    v1 100))
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused2 
                                                                    v1)
                                                                    (and
                                                                    (= 
                                                                    o13 (store 
                                                                    temp___1082 
                                                                    v1 
                                                                    o12))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused 
                                                                    o13)
                                                                    (and
                                                                    (= 
                                                                    o14 
                                                                    (rec__binary_trees__forest__s
                                                                    f__split_fields2))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__forest__sqtresultqtunused 
                                                                    o14)
                                                                    (and
                                                                    (= 
                                                                    o15 
                                                                    (us_split_fieldsqtmk1
                                                                    o14
                                                                    o13))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused1 
                                                                    o15)
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused33 
                                                                    (us_repqtmk1
                                                                    o15))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused9 
                                                                    o15)
                                                                    (and
                                                                    (= 
                                                                    f__split_fieldsqtunused4 
                                                                    (us_split_fields__refqtmk
                                                                    f__split_fields3))
                                                                    (and
                                                                    (= 
                                                                    f__split_fields3 
                                                                    o15)
                                                                    (and
                                                                    (= 
                                                                    us_split_fields__contentqtresultqtunused32 
                                                                    f__split_fields3)
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused34 
                                                                    (us_repqtmk1
                                                                    f__split_fields3))
                                                                    (and
                                                                    (= 
                                                                    usq_qtunused1 
                                                                    f__split_fields3)
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused10 
                                                                    f__split_fields3)
                                                                    (and
                                                                    (= 
                                                                    us_split_fields__contentqtresultqtunused33 
                                                                    f__split_fields3)
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused35 
                                                                    (us_repqtmk1
                                                                    f__split_fields3))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused11 
                                                                    f__split_fields3)
                                                                    (and
                                                                    (= 
                                                                    temp___1091 
                                                                    (rec__binary_trees__forest__c
                                                                    f__split_fields3))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__forest__cqtresultqtunused4 
                                                                    temp___1091)
                                                                    (and
                                                                    (= 
                                                                    us_split_fields__contentqtresultqtunused34 
                                                                    f__split_fields3)
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused36 
                                                                    (us_repqtmk1
                                                                    f__split_fields3))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused12 
                                                                    f__split_fields3)
                                                                    (and
                                                                    (= 
                                                                    temp___1088 
                                                                    (rec__binary_trees__forest__c
                                                                    f__split_fields3))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__forest__cqtresultqtunused5 
                                                                    temp___1088)
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused3 
                                                                    v1)
                                                                    (and
                                                                    (= 
                                                                    temp___1089 (select 
                                                                    temp___1088 
                                                                    v1))
                                                                    (and
                                                                    (= 
                                                                    getqtresultqtunused3 
                                                                    temp___1089)
                                                                    (and
                                                                    (= 
                                                                    usq_1 
                                                                    (us_split_fields1
                                                                    temp___1089))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused13 
                                                                    usq_1)
                                                                    (and
                                                                    (= 
                                                                    o16 
                                                                    (rec__binary_trees__cell__position
                                                                    usq_1))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__cell__positionqtresultqtunused 
                                                                    o16)
                                                                    (and
                                                                    (= 
                                                                    o17 
                                                                    (rec__binary_trees__cell__right
                                                                    usq_1))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__cell__rightqtresultqtunused2 
                                                                    o17)
                                                                    (and
                                                                    (= 
                                                                    o18 
                                                                    (rec__binary_trees__cell__left
                                                                    usq_1))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__cell__leftqtresultqtunused2 
                                                                    o18)
                                                                    (and
                                                                    (= 
                                                                    o19 
                                                                    (us_split_fieldsqtmk
                                                                    o18
                                                                    o17
                                                                    rliteral
                                                                    o16))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused2 
                                                                    o19)
                                                                    (and
                                                                    (= 
                                                                    o20 
                                                                    (us_repqtmk
                                                                    o19))
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused37 
                                                                    o20)
                                                                    (and
                                                                    (and
                                                                    (<= 1 
                                                                    v1)
                                                                    (<= 
                                                                    v1 100))
                                                                    (and
                                                                    (= 
                                                                    int__contentqtresultqtunused4 
                                                                    v1)
                                                                    (and
                                                                    (= 
                                                                    o21 (store 
                                                                    temp___1091 
                                                                    v1 
                                                                    o20))
                                                                    (and
                                                                    (= 
                                                                    setqtresultqtunused1 
                                                                    o21)
                                                                    (and
                                                                    (= 
                                                                    o22 
                                                                    (rec__binary_trees__forest__s
                                                                    f__split_fields3))
                                                                    (and
                                                                    (= 
                                                                    rec__binary_trees__forest__sqtresultqtunused1 
                                                                    o22)
                                                                    (and
                                                                    (= 
                                                                    o23 
                                                                    (us_split_fieldsqtmk1
                                                                    o22
                                                                    o21))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtmkqtresultqtunused3 
                                                                    o23)
                                                                    (and
                                                                    (= 
                                                                    us_repqtmkqtresultqtunused38 
                                                                    (us_repqtmk1
                                                                    o23))
                                                                    (and
                                                                    (= 
                                                                    us_split_fieldsqtresultqtunused14 
                                                                    o23)
                                                                    (= 
                                                                    f__split_fields1 
                                                                    o23))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    (and
      (= spark__branch spark__branch1)
      (= f__split_fields1 f__split_fields))))

;; "Assert"
(assert (= (tree_structure (us_repqtmk1 f__split_fields1)) true))

(declare-const int__contentqtresultqtunused5 Int)

;; "H"
(assert (= int__contentqtresultqtunused5 v1))

(declare-const infix_eqqtresultqtunused3 Bool)

;; "H"
(assert (= infix_eqqtresultqtunused3 (ite (= v1 0) true false)))

(declare-const spark__branch2 Bool)

(declare-const spark__branchqtunused2 bool__ref)

;; "H"
(assert (= spark__branchqtunused2 (bool__refqtmk spark__branch2)))

;; "H"
(assert (= spark__branch2 (ite (= v1 0) false true)))

(declare-const bool__contentqtresultqtunused2 Bool)

;; "H"
(assert (= bool__contentqtresultqtunused2 spark__branch2))

;; "H"
(assert
  (=>
    (= spark__branch2 true)
    (and
      (type_invariant (us_repqtmk1 f_old__split_fields))
      (and
        (type_invariant (us_repqtmk1 f__split_fields1))
        (and
          (and
            (and
              (and
                (and
                  (forall ((i1 Int))
                    (=>
                      (and (<= 1 i1) (<= i1 100))
                      (=>
                        (= (rec__tree_model__path_type__k
                             (us_split_fields5
                               (select (model1
                                         (us_repqtmk1 f_old__split_fields)
                                         root) i1))) true)
                        (ite (= (ole
                                  (rec__tree_model__path_type__a
                                    (us_split_fields5
                                      (select (model1
                                                (us_repqtmk1
                                                  f_old__split_fields)
                                                root) v1)))
                                  (rec__tree_model__path_type__a
                                    (us_split_fields5
                                      (select (model1
                                                (us_repqtmk1
                                                  f_old__split_fields)
                                                root) i1)))) true)
                          (= (rec__tree_model__path_type__k
                               (us_split_fields5
                                 (select (model1
                                           (us_repqtmk1 f__split_fields1)
                                           v1) i1))) true)
                          (= (rec__tree_model__path_type__k
                               (us_split_fields5
                                 (select (model1
                                           (us_repqtmk1 f__split_fields1)
                                           root) i1))) true)))))
                  (forall ((i1 Int))
                    (=>
                      (and (<= 1 i1) (<= i1 100))
                      (=>
                        (= (rec__tree_model__path_type__k
                             (us_split_fields5
                               (select (model1
                                         (us_repqtmk1 f__split_fields1)
                                         root) i1))) true)
                        (= (rec__tree_model__path_type__k
                             (us_split_fields5
                               (select (model1
                                         (us_repqtmk1 f_old__split_fields)
                                         root) i1))) true)))))
                (forall ((i1 Int))
                  (=>
                    (and (<= 1 i1) (<= i1 100))
                    (=>
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5
                             (select (model1
                                       (us_repqtmk1 f__split_fields1)
                                       v1) i1))) true)
                      (= (rec__tree_model__path_type__k
                           (us_split_fields5
                             (select (model1
                                       (us_repqtmk1 f_old__split_fields)
                                       root) i1))) true)))))
              (forall ((i1 Int))
                (=>
                  (and (<= 1 i1) (<= i1 100))
                  (=>
                    (= (rec__tree_model__path_type__k
                         (us_split_fields5
                           (select (model1
                                     (us_repqtmk1 f__split_fields1)
                                     root) i1))) true)
                    (= (oeq
                         (rec__tree_model__path_type__a
                           (us_split_fields5
                             (select (model1
                                       (us_repqtmk1 f__split_fields1)
                                       root) i1)))
                         (rec__tree_model__path_type__a
                           (us_split_fields5
                             (select (model1
                                       (us_repqtmk1 f_old__split_fields)
                                       root) i1)))) true)))))
            (forall ((i1 Int))
              (=>
                (and (<= 1 i1) (<= i1 100))
                (=>
                  (= (rec__tree_model__path_type__k
                       (us_split_fields5
                         (select (model1 (us_repqtmk1 f__split_fields1) v1) i1))) true)
                  (= (is_concat
                       (rec__tree_model__path_type__a
                         (us_split_fields5
                           (select (model1
                                     (us_repqtmk1 f_old__split_fields)
                                     root) v1)))
                       (rec__tree_model__path_type__a
                         (us_split_fields5
                           (select (model1 (us_repqtmk1 f__split_fields1) v1) i1)))
                       (rec__tree_model__path_type__a
                         (us_split_fields5
                           (select (model1
                                     (us_repqtmk1 f_old__split_fields)
                                     root) i1)))) true)))))
          (forall ((r Int))
            (=>
              (and
                (<= 1 r)
                (<= r (to_rep
                        (rec__binary_trees__forest__s f__split_fields1))))
              (=>
                (and
                  (and (not (= r root)) (not (= r v1)))
                  (= (to_rep1
                       (rec__binary_trees__cell__position
                         (us_split_fields1
                           (select (rec__binary_trees__forest__c
                                     f_old__split_fields) r)))) 2))
                (= (oeq1
                     (model1 (us_repqtmk1 f_old__split_fields) r)
                     (model1 (us_repqtmk1 f__split_fields1) r)) true)))))))))

;; "Assert"
(assert (type_invariant (us_repqtmk1 f__split_fields1)))

(declare-const t Int)

;; "H"
(assert (<= 1 t))

;; "H"
(assert (<= t 100))

;; "H"
(assert (= (valid_root (us_repqtmk1 f__split_fields) t) true))

;; "H"
(assert (not (= root t)))

;; "H"
(assert (not (= v1 t)))

;; "dummy"
(define-fun dummy5 () Bool
  true)

(declare-const i1 Int)

;; "H"
(assert (<= 1 i1))

;; "H"
(assert (<= i1 100))

;; "H"
(assert
  (= (rec__tree_model__path_type__k
       (us_split_fields5
         (select (model1 (us_repqtmk1 f__split_fields) t) i1))) true))

;; Goal "def'vc"
;; File "binary_trees.ads", line 121, characters 0-0
(assert
  (not
  (= (rec__tree_model__path_type__k
       (us_split_fields5
         (select (model1 (us_repqtmk1 f__split_fields1) t) i1))) true)))

(check-sat)
