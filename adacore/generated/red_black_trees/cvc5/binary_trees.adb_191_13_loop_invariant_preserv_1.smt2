;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0))
  (((Tuple0))))

(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-sort extended_index_type 0)

;; "extended_index_type'int"
(declare-fun extended_index_typeqtint (extended_index_type) Int)

;; "extended_index_type'axiom"
(assert
  (forall ((i extended_index_type))
    (and
      (<= 0 (extended_index_typeqtint i))
      (<= (extended_index_typeqtint i) 100))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 0 x) (<= x 100)))

;; "to_rep"
(define-fun to_rep ((x extended_index_type)) Int
  (extended_index_typeqtint x))

;; "of_rep"
(declare-fun of_rep (Int) extended_index_type)

;; "inversion_axiom"
(assert
  (forall ((x extended_index_type))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x extended_index_type))
    (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                               (of_rep x))) )))

(declare-sort position_type 0)

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "to_rep"
(declare-fun to_rep1 (position_type) Int)

;; "of_rep"
(declare-fun of_rep1 (Int) position_type)

;; "inversion_axiom"
(assert
  (forall ((x position_type))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x position_type))
    (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-datatypes ((us_split_fields 0))
  (((us_split_fieldsqtmk
    (rec__binary_trees__cell__left extended_index_type)(rec__binary_trees__cell__right extended_index_type)(rec__binary_trees__cell__parent extended_index_type)(rec__binary_trees__cell__position position_type)))))

(declare-datatypes ((us_rep 0))
  (((us_repqtmk (us_split_fields1 us_split_fields)))))

;; "bool_eq"
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool
  (ite (and
         (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 a))) 
         (to_rep
           (rec__binary_trees__cell__left (us_split_fields1 b))))
         (and
           (and
             (= (to_rep
                  (rec__binary_trees__cell__right (us_split_fields1 a))) 
             (to_rep
               (rec__binary_trees__cell__right (us_split_fields1 b))))
             (= (to_rep
                  (rec__binary_trees__cell__parent (us_split_fields1 a))) 
             (to_rep
               (rec__binary_trees__cell__parent (us_split_fields1 b)))))
           (= (to_rep1
                (rec__binary_trees__cell__position (us_split_fields1 a))) 
           (to_rep1
             (rec__binary_trees__cell__position (us_split_fields1 b))))))
    true
    false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const binary_trees__cell__left__first__bit Int)

(declare-const binary_trees__cell__left__last__bit Int)

(declare-const binary_trees__cell__left__position Int)

;; "binary_trees__cell__left__first__bit_axiom"
(assert (<= 0 binary_trees__cell__left__first__bit))

;; "binary_trees__cell__left__last__bit_axiom"
(assert
  (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))

;; "binary_trees__cell__left__position_axiom"
(assert (<= 0 binary_trees__cell__left__position))

(declare-const binary_trees__cell__right__first__bit Int)

(declare-const binary_trees__cell__right__last__bit Int)

(declare-const binary_trees__cell__right__position Int)

;; "binary_trees__cell__right__first__bit_axiom"
(assert (<= 0 binary_trees__cell__right__first__bit))

;; "binary_trees__cell__right__last__bit_axiom"
(assert
  (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))

;; "binary_trees__cell__right__position_axiom"
(assert (<= 0 binary_trees__cell__right__position))

(declare-const binary_trees__cell__parent__first__bit Int)

(declare-const binary_trees__cell__parent__last__bit Int)

(declare-const binary_trees__cell__parent__position Int)

;; "binary_trees__cell__parent__first__bit_axiom"
(assert (<= 0 binary_trees__cell__parent__first__bit))

;; "binary_trees__cell__parent__last__bit_axiom"
(assert
  (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))

;; "binary_trees__cell__parent__position_axiom"
(assert (<= 0 binary_trees__cell__parent__position))

(declare-const binary_trees__cell__position__first__bit Int)

(declare-const binary_trees__cell__position__last__bit Int)

(declare-const binary_trees__cell__position__position Int)

;; "binary_trees__cell__position__first__bit_axiom"
(assert (<= 0 binary_trees__cell__position__first__bit))

;; "binary_trees__cell__position__last__bit_axiom"
(assert
  (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))

;; "binary_trees__cell__position__position_axiom"
(assert (<= 0 binary_trees__cell__position__position))

(declare-const dummy us_rep)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-datatypes ((us_split_fields2 0))
  (((us_split_fieldsqtmk1
    (rec__binary_trees__forest__s extended_index_type)(rec__binary_trees__forest__c (Array Int us_rep))))))

(declare-datatypes ((us_rep1 0))
  (((us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const binary_trees__forest__s__first__bit Int)

(declare-const binary_trees__forest__s__last__bit Int)

(declare-const binary_trees__forest__s__position Int)

;; "binary_trees__forest__s__first__bit_axiom"
(assert (<= 0 binary_trees__forest__s__first__bit))

;; "binary_trees__forest__s__last__bit_axiom"
(assert
  (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))

;; "binary_trees__forest__s__position_axiom"
(assert (<= 0 binary_trees__forest__s__position))

(declare-const binary_trees__forest__c__first__bit Int)

(declare-const binary_trees__forest__c__last__bit Int)

(declare-const binary_trees__forest__c__position Int)

;; "binary_trees__forest__c__first__bit_axiom"
(assert (<= 0 binary_trees__forest__c__first__bit))

;; "binary_trees__forest__c__last__bit_axiom"
(assert
  (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))

;; "binary_trees__forest__c__position_axiom"
(assert (<= 0 binary_trees__forest__c__position))

(declare-const dummy1 us_rep1)

;; "valid_root"
(declare-fun valid_root (us_rep1
  Int) Bool)

;; "size"
(define-fun size ((param__f us_rep1)) Int
  (to_rep (rec__binary_trees__forest__s (us_split_fields3 param__f))))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

(declare-const f us_rep1)

(declare-const root Int)

(declare-sort us_rep2 0)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const dummy2 us_rep2)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const dummy3 Int)

;; "last"
(declare-fun last (us_rep2) Int)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "length"
(define-fun length ((param__container us_rep2)) Int
  (- (+ (last param__container) 1) 1))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_380 Int) (temp___is_init_376 Bool) (temp___skip_constant_377 Bool) (temp___do_toplevel_378 Bool) (temp___do_typ_inv_379 Bool)) Bool
  (=>
    (= temp___is_init_376 true)
    (=> (= temp___do_toplevel_378 true) (<= 0 temp___expr_380))))

;; "get"
(declare-fun get (us_rep2
  Int) Int)

;; "oeq"
(define-fun oeq ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "olt"
(define-fun olt ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (< (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "is_add"
(declare-fun is_add (us_rep2
  Int
  us_rep2) Bool)

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_319 us_rep1) (temp___is_init_315 Bool) (temp___skip_constant_316 Bool) (temp___do_toplevel_317 Bool) (temp___do_typ_inv_318 Bool)) Bool
  true)

(declare-const rliteral extended_index_type)

;; "rliteral_axiom"
(assert (= (extended_index_typeqtint rliteral) 0))

;; "tree_structure"
(define-fun tree_structure ((param__f us_rep1)) Bool
  (and (and (and (and (and (and (and (and (ite (forall ((i Int))
                                                 (=>
                                                   (and
                                                     (<= (+ (to_rep
                                                              (rec__binary_trees__forest__s
                                                                (us_split_fields3
                                                                  param__f))) 1) i)
                                                     (<= i 100))
                                                   (= (bool_eq
                                                        (let ((temp___191 
                                                          (rec__binary_trees__forest__c
                                                            (us_split_fields3
                                                              param__f))))
                                                          (select temp___191 i))
                                                        (us_repqtmk
                                                          (us_split_fieldsqtmk
                                                            rliteral
                                                            rliteral
                                                            rliteral
                                                            (of_rep1 2)))) true)))
                                            true
                                            false) (ite (forall ((i Int))
                                                          (=>
                                                            (and
                                                              (<= 1 i)
                                                              (<= i 100))
                                                            (let ((temp___196 
                                                              (to_rep
                                                                (rec__binary_trees__cell__parent
                                                                  (us_split_fields1
                                                                    (let ((temp___194 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___194 i)))))))
                                                              (and
                                                                (<= 0 temp___196)
                                                                (<= temp___196 
                                                                (to_rep
                                                                  (rec__binary_trees__forest__s
                                                                    (us_split_fields3
                                                                    param__f))))))))
                                                     true
                                                     false)) (ite (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i)
                                                                    (<= i 100))
                                                                    (let ((temp___199 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__left
                                                                    (us_split_fields1
                                                                    (let ((temp___197 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___197 i)))))))
                                                                    (and
                                                                    (<= 0 temp___199)
                                                                    (<= temp___199 
                                                                    (to_rep
                                                                    (rec__binary_trees__forest__s
                                                                    (us_split_fields3
                                                                    param__f))))))))
                                                               true
                                                               false)) 
  (ite (forall ((i Int))
         (=>
           (and (<= 1 i) (<= i 100))
           (let ((temp___202 (to_rep
                               (rec__binary_trees__cell__right
                                 (us_split_fields1
                                   (let ((temp___200 (rec__binary_trees__forest__c
                                                       (us_split_fields3
                                                         param__f))))
                                     (select temp___200 i)))))))
             (and
               (<= 0 temp___202)
               (<= temp___202 (to_rep
                                (rec__binary_trees__forest__s
                                  (us_split_fields3 param__f))))))))
    true
    false)) (ite (forall ((i Int))
                   (=>
                     (and (<= 1 i) (<= i 100))
                     (=>
                       (= (to_rep1
                            (rec__binary_trees__cell__position
                              (us_split_fields1
                                (let ((temp___204 (rec__binary_trees__forest__c
                                                    (us_split_fields3
                                                      param__f))))
                                  (select temp___204 i))))) 2)
                       (= (to_rep
                            (rec__binary_trees__cell__parent
                              (us_split_fields1
                                (let ((temp___203 (rec__binary_trees__forest__c
                                                    (us_split_fields3
                                                      param__f))))
                                  (select temp___203 i))))) 0))))
              true
              false)) (ite (forall ((i Int))
                             (=>
                               (and (<= 1 i) (<= i 100))
                               (=>
                                 (not
                                   (= (to_rep
                                        (rec__binary_trees__cell__left
                                          (us_split_fields1
                                            (let ((temp___209 (rec__binary_trees__forest__c
                                                                (us_split_fields3
                                                                  param__f))))
                                              (select temp___209 i))))) 0))
                                 (and
                                   (= (to_rep1
                                        (rec__binary_trees__cell__position
                                          (us_split_fields1
                                            (let ((temp___205 (rec__binary_trees__forest__c
                                                                (us_split_fields3
                                                                  param__f))))
                                              (select temp___205 (to_rep
                                                                   (rec__binary_trees__cell__left
                                                                    (us_split_fields1
                                                                    (let ((temp___206 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___206 i)))))))))) 0)
                                   (= (to_rep
                                        (rec__binary_trees__cell__parent
                                          (us_split_fields1
                                            (let ((temp___207 (rec__binary_trees__forest__c
                                                                (us_split_fields3
                                                                  param__f))))
                                              (select temp___207 (to_rep
                                                                   (rec__binary_trees__cell__left
                                                                    (us_split_fields1
                                                                    (let ((temp___208 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___208 i)))))))))) i)))))
                        true
                        false)) (ite (forall ((i Int))
                                       (=>
                                         (and (<= 1 i) (<= i 100))
                                         (=>
                                           (not
                                             (= (to_rep
                                                  (rec__binary_trees__cell__right
                                                    (us_split_fields1
                                                      (let ((temp___214 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___214 i))))) 0))
                                           (and
                                             (= (to_rep1
                                                  (rec__binary_trees__cell__position
                                                    (us_split_fields1
                                                      (let ((temp___210 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___210 
                                                        (to_rep
                                                          (rec__binary_trees__cell__right
                                                            (us_split_fields1
                                                              (let ((temp___211 
                                                                (rec__binary_trees__forest__c
                                                                  (us_split_fields3
                                                                    param__f))))
                                                                (select temp___211 i)))))))))) 1)
                                             (= (to_rep
                                                  (rec__binary_trees__cell__parent
                                                    (us_split_fields1
                                                      (let ((temp___212 
                                                        (rec__binary_trees__forest__c
                                                          (us_split_fields3
                                                            param__f))))
                                                        (select temp___212 
                                                        (to_rep
                                                          (rec__binary_trees__cell__right
                                                            (us_split_fields1
                                                              (let ((temp___213 
                                                                (rec__binary_trees__forest__c
                                                                  (us_split_fields3
                                                                    param__f))))
                                                                (select temp___213 i)))))))))) i)))))
                                  true
                                  false)) (ite (forall ((i Int))
                                                 (=>
                                                   (and (<= 1 i) (<= i 100))
                                                   (=>
                                                     (and
                                                       (not
                                                         (= (to_rep
                                                              (rec__binary_trees__cell__parent
                                                                (us_split_fields1
                                                                  (let ((temp___217 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___217 i))))) 0))
                                                       (= (to_rep1
                                                            (rec__binary_trees__cell__position
                                                              (us_split_fields1
                                                                (let ((temp___218 
                                                                  (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                  (select temp___218 i))))) 0))
                                                     (= (to_rep
                                                          (rec__binary_trees__cell__left
                                                            (us_split_fields1
                                                              (let ((temp___215 
                                                                (rec__binary_trees__forest__c
                                                                  (us_split_fields3
                                                                    param__f))))
                                                                (select temp___215 
                                                                (to_rep
                                                                  (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (let ((temp___216 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___216 i)))))))))) i))))
                                            true
                                            false)) (ite (forall ((i Int))
                                                           (=>
                                                             (and
                                                               (<= 1 i)
                                                               (<= i 100))
                                                             (=>
                                                               (and
                                                                 (not
                                                                   (= 
                                                                   (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (let ((temp___221 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___221 i))))) 0))
                                                                 (= (to_rep1
                                                                    (rec__binary_trees__cell__position
                                                                    (us_split_fields1
                                                                    (let ((temp___222 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___222 i))))) 1))
                                                               (= (to_rep
                                                                    (rec__binary_trees__cell__right
                                                                    (us_split_fields1
                                                                    (let ((temp___219 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___219 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (let ((temp___220 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    param__f))))
                                                                    (select temp___220 i)))))))))) i))))
                                                      true
                                                      false)))

;; "type_invariant"
(define-fun type_invariant ((temp___327 us_rep1)) Bool
  (= (tree_structure temp___327) true))

(declare-datatypes ((us_split_fields4 0))
  (((us_split_fieldsqtmk2
    (rec__tree_model__path_type__a us_rep2)(rec__tree_model__path_type__k Bool)))))

(declare-datatypes ((us_rep3 0))
  (((us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-const tree_model__path_type__a__first__bit Int)

(declare-const tree_model__path_type__a__last__bit Int)

(declare-const tree_model__path_type__a__position Int)

;; "tree_model__path_type__a__first__bit_axiom"
(assert (<= 0 tree_model__path_type__a__first__bit))

;; "tree_model__path_type__a__last__bit_axiom"
(assert
  (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))

;; "tree_model__path_type__a__position_axiom"
(assert (<= 0 tree_model__path_type__a__position))

(declare-const tree_model__path_type__k__first__bit Int)

(declare-const tree_model__path_type__k__last__bit Int)

(declare-const tree_model__path_type__k__position Int)

;; "tree_model__path_type__k__first__bit_axiom"
(assert (<= 0 tree_model__path_type__k__first__bit))

;; "tree_model__path_type__k__last__bit_axiom"
(assert
  (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))

;; "tree_model__path_type__k__position_axiom"
(assert (<= 0 tree_model__path_type__k__position))

(declare-const dummy4 us_rep3)

(declare-sort us_rep4 0)

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "alignment_axiom"
(assert (<= 0 alignment6))

(declare-const dummy5 us_rep4)

;; "contains"
(declare-fun contains (us_rep4
  Int) Bool)

;; "length"
(declare-fun length1 (us_rep4) Int)

;; "is_empty"
(declare-fun is_empty (us_rep4) Bool)

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 1 x) (<= x 100)))

;; "ole"
(declare-fun ole (us_rep4
  us_rep4) Bool)

;; "included_except"
(declare-fun included_except (us_rep4
  us_rep4
  Int) Bool)

;; "remove"
(declare-fun remove (us_rep4
  Int) us_rep4)

;; "all_indexes"
(declare-fun all_indexes (tuple0) us_rep4)

;; "next"
(declare-fun next ((Array Int Bool)) Int)

;; "equal_prefix"
(define-fun equal_prefix ((param__left us_rep2) (param__right us_rep2)) Bool
  (and (<= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                              (=>
                                                                (and
                                                                  (<= 1 n)
                                                                  (<= n 
                                                                  (last
                                                                    param__left)))
                                                                (= (get
                                                                    param__left
                                                                    n) 
                                                                (get
                                                                  param__right
                                                                  n))))
                                                         true
                                                         false)))

;; "add"
(declare-fun add (us_rep2
  Int) us_rep2)

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const component__size1 Int)

(declare-const alignment7 Int)

;; "value__size_axiom"
(assert (<= 0 value__size7))

;; "object__size_axiom"
(assert (<= 0 object__size7))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment7))

;; "dynamic_invariant"
(define-fun dynamic_invariant2 ((temp___expr_414 (Array Int us_rep3)) (temp___is_init_410 Bool) (temp___skip_constant_411 Bool) (temp___do_toplevel_412 Bool) (temp___do_typ_inv_413 Bool)) Bool
  (forall ((temp___415 Int))
    (=>
      (and (<= 1 temp___415) (<= temp___415 100))
      (< (length
           (rec__tree_model__path_type__a
             (us_split_fields5 (select temp___expr_414 temp___415)))) 100))))

;; "default_initial_assumption"
(define-fun default_initial_assumption ((temp___expr_419 (Array Int us_rep3)) (temp___skip_top_level_420 Bool)) Bool
  (forall ((temp___421 Int))
    (=>
      (and (<= 1 temp___421) (<= temp___421 100))
      (and
        (= (length
             (rec__tree_model__path_type__a
               (us_split_fields5 (select temp___expr_419 temp___421)))) 0)
        (= (rec__tree_model__path_type__k
             (us_split_fields5 (select temp___expr_419 temp___421))) (distinct 0 0))))))

(declare-const value__size8 Int)

(declare-const object__size8 Int)

(declare-const component__size2 Int)

(declare-const alignment8 Int)

;; "value__size_axiom"
(assert (<= 0 value__size8))

;; "object__size_axiom"
(assert (<= 0 object__size8))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment8))

(declare-const value__size9 Int)

(declare-const object__size9 Int)

(declare-const component__size3 Int)

(declare-const alignment9 Int)

;; "value__size_axiom"
(assert (<= 0 value__size9))

;; "object__size_axiom"
(assert (<= 0 object__size9))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment9))

;; "binary_trees__model__todo__aggregate_def"
(declare-fun binary_trees__model__todo__aggregate_def (Bool) (Array Int Bool))

;; "valid_root__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (and
               (dynamic_invariant1 param__f true false true true)
               (in_range4 param__i))
             (type_invariant param__f))
           (=>
             (< (size param__f) param__i)
             (not (= (valid_root param__f param__i) true)))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "valid_root__def_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=
           (= (valid_root param__f param__i) true)
           (and
             (<= param__i (to_rep
                            (rec__binary_trees__forest__s
                              (us_split_fields3 param__f))))
             (= (to_rep1
                  (rec__binary_trees__cell__position
                    (us_split_fields1
                      (let ((temp___332qtunused (rec__binary_trees__forest__c
                                                  (us_split_fields3 param__f))))
                        (select (rec__binary_trees__forest__c
                                  (us_split_fields3 param__f)) param__i))))) 2))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "last__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (! (in_range3 (last param__container)) :pattern ((last param__container)) )))

;; "get__post_axiom"
(assert
  (forall ((param__container us_rep2))
    (forall ((param__position Int))
      (! (=>
           (and
             (in_range3 param__position)
             (and
               (<= 1 param__position)
               (<= param__position (last param__container))))
           (in_range2 (get param__container param__position))) :pattern (
      (get
        param__container
        param__position)) ))))

;; "is_add__post_axiom"
(assert true)

;; "is_add__def_axiom"
(assert
  (forall ((param__s1 us_rep2) (param__s2 us_rep2))
    (forall ((param__d Int))
      (! (=
           (= (is_add param__s1 param__d param__s2) true)
           (and
             (and
               (= (- (length param__s2) 1) (length param__s1))
               (= (olt param__s1 param__s2) true))
             (= (get param__s2 (last param__s2)) param__d))) :pattern (
      (is_add
        param__s1
        param__d
        param__s2)) ))))

;; "contains__post_axiom"
(assert true)

;; "lemma_contains_equivalent__post_axiom"
(assert
  (forall ((param__container us_rep4))
    (forall ((param__item Int))
      (=>
        (and
          (in_range4 param__item)
          (and
            (= (distinct 1 0) true)
            (not (= (contains param__container param__item) true))))
        (forall ((e Int))
          (=>
            (and (in_range4 e) (= (contains param__container e) true))
            (not (= param__item e))))))))

;; "length__post_axiom"
(assert
  (forall ((param__container us_rep4))
    (! (dynamic_invariant (length1 param__container) true false true true) :pattern (
    (length1
      param__container)) )))

;; "is_empty__post_axiom"
(assert
  (forall ((param__container us_rep4))
    (! (let ((result (is_empty param__container)))
         (and
           (=
             (= result true)
             (forall ((item Int))
               (not
                 (and
                   (in_range4 item)
                   (= (contains param__container item) true)))))
           (= (= result true) (= (length1 param__container) 0)))) :pattern (
    (is_empty
      param__container)) )))

;; "ole__post_axiom"
(assert
  (forall ((param__left us_rep4) (param__right us_rep4))
    (! (=
         (= (ole param__left param__right) true)
         (forall ((item Int))
           (=>
             (and (in_range4 item) (= (contains param__left item) true))
             (= (contains param__right item) true)))) :pattern ((ole
                                                                  param__left
                                                                  param__right)) )))

;; "included_except__post_axiom"
(assert
  (forall ((param__left us_rep4) (param__right us_rep4))
    (forall ((param__item Int))
      (! (=>
           (in_range4 param__item)
           (=
             (= (included_except param__left param__right param__item) true)
             (forall ((e Int))
               (=>
                 (and (in_range4 e) (= (contains param__left e) true))
                 (or (= (contains param__right e) true) (= e param__item)))))) :pattern (
      (included_except
        param__left
        param__right
        param__item)) ))))

;; Goal "def'vc"
;; File "binary_trees.ads", line 45, characters 0-0
(assert
  (not
  (forall ((r (Array Int us_rep3)))
    (=>
      (dynamic_invariant1 f true false true true)
      (=>
        (in_range4 root)
        (=>
          (type_invariant f)
          (=>
            (= (valid_root f root) true)
            (let ((o (distinct 0 0)))
              (forall ((temp___799 (Array Int Bool)))
                (=>
                  (and
                    (forall ((temp___798 Int))
                      (! (=>
                           (and (<= 1 temp___798) (<= temp___798 100))
                           (= (select temp___799 temp___798) o)) :pattern ((select temp___799 temp___798)) ))
                    (= temp___799 (binary_trees__model__todo__aggregate_def
                                    o)))
                  (forall ((todo (Array Int Bool)))
                    (=>
                      (= todo temp___799)
                      (let ((o1 (all_indexes Tuple0)))
                        (=>
                          (and
                            (forall ((i Int))
                              (=>
                                (and (<= 1 i) (<= i 100))
                                (= (contains o1 i) true)))
                            (= (length1 o1) 100))
                          (forall ((unseen us_rep4))
                            (=>
                              (= unseen o1)
                              (=>
                                (default_initial_assumption r false)
                                (=>
                                  (dynamic_invariant2
                                    r
                                    false
                                    false
                                    true
                                    true)
                                  (let ((o2 root))
                                    (=>
                                      (in_range o2)
                                      (forall ((i Int))
                                        (=>
                                          (= i o2)
                                          (=>
                                            (in_range i)
                                            (forall ((todo1 (Array Int Bool)))
                                              (=>
                                                (= todo1 (store todo 
                                                root (distinct 1 0)))
                                                (let ((o3 (rec__tree_model__path_type__a
                                                            (us_split_fields5
                                                              (select r 
                                                              root)))))
                                                  (=>
                                                    (< (length o3) 100)
                                                    (forall ((r1 (Array Int us_rep3)))
                                                      (=>
                                                        (= r1 (store r 
                                                        root (us_repqtmk2
                                                               (us_split_fieldsqtmk2
                                                                 o3
                                                                 (distinct 1 0)))))
                                                        (=>
                                                          (not (= i 0))
                                                          (=>
                                                            (and
                                                              (<= 1 i)
                                                              (<= i 100))
                                                            (forall ((todo2 (Array Int Bool)) (unseen1 us_rep4) (r2 (Array Int us_rep3)) (i1 Int) (j Int))
                                                              (=>
                                                                (and
                                                                  (= (select todo2 i1) true)
                                                                  (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (=>
                                                                    (= (select todo2 j1) true)
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true))))
                                                                    (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (=>
                                                                    (= (select todo2 j1) true)
                                                                    (forall 
                                                                    ((k Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 k)
                                                                    (<= k 100))
                                                                    (=>
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 k))) true)
                                                                    (not
                                                                    (= 
                                                                    (olt
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 j1)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 k)))) true))))))))
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 
                                                                    root))) true)
                                                                    (= 
                                                                    (length
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 
                                                                    root)))) 0))
                                                                    (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true)
                                                                    (not
                                                                    (= j1 
                                                                    root)))
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1)))) 0))
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1))))))) true)))))
                                                                    (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (ite 
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true)
                                                                    (not
                                                                    (= j1 
                                                                    root)))
                                                                    (= 
                                                                    (is_add
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1)))))))
                                                                    (to_rep1
                                                                    (rec__binary_trees__cell__position
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1))))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 j1)))) true)
                                                                    (= 
                                                                    (length
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 j1)))) 0))))
                                                                    (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (=>
                                                                    (not
                                                                    (= j1 
                                                                    root))
                                                                    (ite 
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1)))) 0))
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1))))))) true))
                                                                    (or
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true)
                                                                    (= (select todo2 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1))))) true))
                                                                    (not
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true))))))
                                                                    (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true)
                                                                    (not
                                                                    (= j1 
                                                                    root)))
                                                                    (not
                                                                    (= (select todo2 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j1))))) true)))))
                                                                    (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (=>
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true)
                                                                    (forall 
                                                                    ((k Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 k)
                                                                    (<= k 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 k))) true)
                                                                    (= 
                                                                    (oeq
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 k)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 j1)))) true))
                                                                    (= j1 k)))))))
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 
                                                                    root))) true)
                                                                    (= 
                                                                    (length
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 
                                                                    root)))) 0))
                                                                    (and
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (<= 
                                                                    (length
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 j1)))) (- 100 
                                                                    (length1
                                                                    unseen1)))))
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (=
                                                                    (= 
                                                                    (contains
                                                                    unseen1
                                                                    j1) true)
                                                                    (or
                                                                    (not
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r2 j1))) true))
                                                                    (= (select todo2 j1) true))))))))))))))))
                                                                (=>
                                                                  (= (and 
                                                                  (ite 
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    r2
                                                                    false
                                                                    true
                                                                    true
                                                                    true)
                                                                    (in_range
                                                                    i1))
                                                                    true
                                                                    false) 
                                                                  (ite 
                                                                    (not
                                                                    (= i1 0))
                                                                    true
                                                                    false)) true)
                                                                  (=>
                                                                    (in_range4
                                                                    i1)
                                                                    (let ((o4 
                                                                    (remove
                                                                    unseen1
                                                                    i1)))
                                                                    (=>
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (length1
                                                                    o4) (- 
                                                                    (length1
                                                                    unseen1) 1))
                                                                    (not
                                                                    (= 
                                                                    (contains
                                                                    o4
                                                                    i1) true)))
                                                                    (= 
                                                                    (ole
                                                                    o4
                                                                    unseen1) true))
                                                                    (= 
                                                                    (included_except
                                                                    unseen1
                                                                    o4
                                                                    i1) true))
                                                                    (forall 
                                                                    ((unseen2 us_rep4))
                                                                    (=>
                                                                    (= unseen2 o4)
                                                                    (=>
                                                                    (in_range
                                                                    j)
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i1)
                                                                    (<= i1 100))
                                                                    (forall 
                                                                    ((o5 Int))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__left
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) i1)))) o5)
                                                                    (forall 
                                                                    ((j1 Int))
                                                                    (=>
                                                                    (= j1 o5)
                                                                    (forall 
                                                                    ((spark__branch Bool) (todo3 (Array Int Bool)) (r3 (Array Int us_rep3)))
                                                                    (=>
                                                                    (and
                                                                    (= spark__branch 
                                                                    (ite (= j1 0)
                                                                    false
                                                                    true))
                                                                    (ite (= spark__branch true)
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (is_empty
                                                                    unseen2) true))
                                                                    (and
                                                                    (and
                                                                    (<= 1 i1)
                                                                    (<= i1 100))
                                                                    (let ((o6 
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r2 i1)))))
                                                                    (let ((o7 
                                                                    (add
                                                                    o6
                                                                    0)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (last
                                                                    o7) (+ 
                                                                    (last
                                                                    o6) 1))
                                                                    (= 
                                                                    (get
                                                                    o7
                                                                    (last o7)) 0))
                                                                    (= 
                                                                    (equal_prefix
                                                                    o6
                                                                    o7) true))
                                                                    (and
                                                                    (< 
                                                                    (length
                                                                    o7) 100)
                                                                    (and
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (and
                                                                    (= r3 (store r2 j1 
                                                                    (us_repqtmk2
                                                                    (us_split_fieldsqtmk2
                                                                    o7
                                                                    (distinct 1 0)))))
                                                                    (and
                                                                    (and
                                                                    (<= 1 j1)
                                                                    (<= j1 100))
                                                                    (= todo3 (store todo2 j1 (distinct 1 0))))))))))))
                                                                    (and
                                                                    (= todo3 todo2)
                                                                    (= r3 r2))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j2 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j2)
                                                                    (<= j2 100))
                                                                    (=>
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r3 j2))) true)
                                                                    (forall 
                                                                    ((k Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 k)
                                                                    (<= k 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r3 k))) true)
                                                                    (= 
                                                                    (oeq
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r3 k)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r3 j2)))) true))
                                                                    (= j2 k)))))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j2 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j2)
                                                                    (<= j2 100))
                                                                    (=>
                                                                    (and
                                                                    (= (select todo3 j2) true)
                                                                    (not
                                                                    (= i1 j2)))
                                                                    (forall 
                                                                    ((k Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 k)
                                                                    (<= k 100))
                                                                    (=>
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r3 k))) true)
                                                                    (not
                                                                    (= 
                                                                    (olt
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r3 j2)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r3 k)))) true))))))))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i1)
                                                                    (<= i1 100))
                                                                    (forall 
                                                                    ((o6 Int))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__right
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) i1)))) o6)
                                                                    (forall 
                                                                    ((j2 Int))
                                                                    (=>
                                                                    (= j2 o6)
                                                                    (forall 
                                                                    ((todo4 (Array Int Bool)) (r4 (Array Int us_rep3)))
                                                                    (=>
                                                                    (exists 
                                                                    ((spark__branch1 Bool))
                                                                    (and
                                                                    (= spark__branch1 
                                                                    (ite (= j2 0)
                                                                    false
                                                                    true))
                                                                    (ite (= spark__branch1 true)
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (is_empty
                                                                    unseen2) true))
                                                                    (and
                                                                    (and
                                                                    (<= 1 i1)
                                                                    (<= i1 100))
                                                                    (let ((o7 
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r3 i1)))))
                                                                    (let ((o8 
                                                                    (add
                                                                    o7
                                                                    1)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (last
                                                                    o8) (+ 
                                                                    (last
                                                                    o7) 1))
                                                                    (= 
                                                                    (get
                                                                    o8
                                                                    (last o8)) 1))
                                                                    (= 
                                                                    (equal_prefix
                                                                    o7
                                                                    o8) true))
                                                                    (and
                                                                    (< 
                                                                    (length
                                                                    o8) 100)
                                                                    (and
                                                                    (and
                                                                    (<= 1 j2)
                                                                    (<= j2 100))
                                                                    (and
                                                                    (= r4 (store r3 j2 
                                                                    (us_repqtmk2
                                                                    (us_split_fieldsqtmk2
                                                                    o8
                                                                    (distinct 1 0)))))
                                                                    (and
                                                                    (and
                                                                    (<= 1 j2)
                                                                    (<= j2 100))
                                                                    (= todo4 (store todo3 j2 (distinct 1 0))))))))))))
                                                                    (and
                                                                    (= todo4 todo3)
                                                                    (= r4 r3)))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (=>
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 j3))) true)
                                                                    (forall 
                                                                    ((k Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 k)
                                                                    (<= k 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 k))) true)
                                                                    (= 
                                                                    (oeq
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 k)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 j3)))) true))
                                                                    (= j3 k)))))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (=>
                                                                    (and
                                                                    (= (select todo4 j3) true)
                                                                    (not
                                                                    (= i1 j3)))
                                                                    (forall 
                                                                    ((k Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 k)
                                                                    (<= k 100))
                                                                    (=>
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 k))) true)
                                                                    (not
                                                                    (= 
                                                                    (olt
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 j3)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 k)))) true))))))))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i1)
                                                                    (<= i1 100))
                                                                    (forall 
                                                                    ((todo5 (Array Int Bool)))
                                                                    (=>
                                                                    (= todo5 (store todo4 i1 (distinct 0 0)))
                                                                    (let ((o7 
                                                                    (next
                                                                    todo5)))
                                                                    (=>
                                                                    (and
                                                                    (in_range
                                                                    o7)
                                                                    (ite (= o7 0)
                                                                    (forall 
                                                                    ((i2 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i2)
                                                                    (<= i2 100))
                                                                    (not
                                                                    (= (select todo5 i2) true))))
                                                                    (= (select todo5 o7) true)))
                                                                    (forall 
                                                                    ((i2 Int))
                                                                    (=>
                                                                    (= i2 o7)
                                                                    (=>
                                                                    (not
                                                                    (= i2 0))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i2)
                                                                    (<= i2 100))
                                                                    (=>
                                                                    (< 
                                                                    (length1
                                                                    unseen2) 
                                                                    (length1
                                                                    unseen1))
                                                                    (=>
                                                                    (= (select todo5 i2) true)
                                                                    (=>
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (=>
                                                                    (= (select todo5 j3) true)
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 j3))) true))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (=>
                                                                    (= (select todo5 j3) true)
                                                                    (forall 
                                                                    ((k Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 k)
                                                                    (<= k 100))
                                                                    (=>
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 k))) true)
                                                                    (not
                                                                    (= 
                                                                    (olt
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 j3)))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 k)))) true))))))))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 
                                                                    root))) true)
                                                                    (= 
                                                                    (length
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 
                                                                    root)))) 0))
                                                                    (=>
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 j3))) true)
                                                                    (not
                                                                    (= j3 
                                                                    root)))
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3)))) 0))
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3))))))) true)))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (ite 
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 j3))) true)
                                                                    (not
                                                                    (= j3 
                                                                    root)))
                                                                    (= 
                                                                    (is_add
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3)))))))
                                                                    (to_rep1
                                                                    (rec__binary_trees__cell__position
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3))))
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 j3)))) true)
                                                                    (= 
                                                                    (length
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields5
                                                                    (select r4 j3)))) 0))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (=>
                                                                    (not
                                                                    (= j3 
                                                                    root))
                                                                    (ite 
                                                                    (and
                                                                    (not
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3)))) 0))
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3))))))) true))
                                                                    (or
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 j3))) true)
                                                                    (= (select todo5 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3))))) true))
                                                                    (not
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 j3))) true))))))
                                                                    (forall 
                                                                    ((j3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j3)
                                                                    (<= j3 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields5
                                                                    (select r4 j3))) true)
                                                                    (not
                                                                    (= j3 
                                                                    root)))
                                                                    (not
                                                                    (= (select todo5 
                                                                    (to_rep
                                                                    (rec__binary_trees__cell__parent
                                                                    (us_split_fields1
                                                                    (select 
                                                                    (rec__binary_trees__forest__c
                                                                    (us_split_fields3
                                                                    f)) j3))))) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
