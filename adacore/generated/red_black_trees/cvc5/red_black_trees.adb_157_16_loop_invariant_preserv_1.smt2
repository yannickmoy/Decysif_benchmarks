;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

;; "min"
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; "max"
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; "Min_r"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; "Max_l"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; "Min_comm"
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; "Max_comm"
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; "Min_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; "Max_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (or (= x 0) (= x 1)))

(declare-sort extended_index_type 0)

;; "extended_index_type'int"
(declare-fun extended_index_typeqtint (extended_index_type) Int)

;; "extended_index_type'axiom"
(assert
  (forall ((i extended_index_type))
    (and
      (<= 0 (extended_index_typeqtint i))
      (<= (extended_index_typeqtint i) 100))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 100)))

;; "to_rep"
(define-fun to_rep ((x extended_index_type)) Int
  (extended_index_typeqtint x))

;; "of_rep"
(declare-fun of_rep (Int) extended_index_type)

;; "inversion_axiom"
(assert
  (forall ((x extended_index_type))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x extended_index_type))
    (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-sort position_type 0)

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "to_rep"
(declare-fun to_rep1 (position_type) Int)

;; "of_rep"
(declare-fun of_rep1 (Int) position_type)

;; "inversion_axiom"
(assert
  (forall ((x position_type))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x position_type))
    (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-datatypes ((us_split_fields 0))
  (((us_split_fieldsqtmk
    (rec__binary_trees__cell__left extended_index_type)(rec__binary_trees__cell__right extended_index_type)(rec__binary_trees__cell__parent extended_index_type)(rec__binary_trees__cell__position position_type)))))

(declare-datatypes ((us_rep 0))
  (((us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const binary_trees__cell__left__first__bit Int)

(declare-const binary_trees__cell__left__last__bit Int)

(declare-const binary_trees__cell__left__position Int)

;; "binary_trees__cell__left__first__bit_axiom"
(assert (<= 0 binary_trees__cell__left__first__bit))

;; "binary_trees__cell__left__last__bit_axiom"
(assert
  (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))

;; "binary_trees__cell__left__position_axiom"
(assert (<= 0 binary_trees__cell__left__position))

(declare-const binary_trees__cell__right__first__bit Int)

(declare-const binary_trees__cell__right__last__bit Int)

(declare-const binary_trees__cell__right__position Int)

;; "binary_trees__cell__right__first__bit_axiom"
(assert (<= 0 binary_trees__cell__right__first__bit))

;; "binary_trees__cell__right__last__bit_axiom"
(assert
  (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))

;; "binary_trees__cell__right__position_axiom"
(assert (<= 0 binary_trees__cell__right__position))

(declare-const binary_trees__cell__parent__first__bit Int)

(declare-const binary_trees__cell__parent__last__bit Int)

(declare-const binary_trees__cell__parent__position Int)

;; "binary_trees__cell__parent__first__bit_axiom"
(assert (<= 0 binary_trees__cell__parent__first__bit))

;; "binary_trees__cell__parent__last__bit_axiom"
(assert
  (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))

;; "binary_trees__cell__parent__position_axiom"
(assert (<= 0 binary_trees__cell__parent__position))

(declare-const binary_trees__cell__position__first__bit Int)

(declare-const binary_trees__cell__position__last__bit Int)

(declare-const binary_trees__cell__position__position Int)

;; "binary_trees__cell__position__first__bit_axiom"
(assert (<= 0 binary_trees__cell__position__first__bit))

;; "binary_trees__cell__position__last__bit_axiom"
(assert
  (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))

;; "binary_trees__cell__position__position_axiom"
(assert (<= 0 binary_trees__cell__position__position))

(declare-const dummy us_rep)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-datatypes ((us_split_fields2 0))
  (((us_split_fieldsqtmk1
    (rec__binary_trees__forest__s extended_index_type)(rec__binary_trees__forest__c (Array Int us_rep))))))

(declare-datatypes ((us_rep1 0))
  (((us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-const binary_trees__forest__s__first__bit Int)

(declare-const binary_trees__forest__s__last__bit Int)

(declare-const binary_trees__forest__s__position Int)

;; "binary_trees__forest__s__first__bit_axiom"
(assert (<= 0 binary_trees__forest__s__first__bit))

;; "binary_trees__forest__s__last__bit_axiom"
(assert
  (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))

;; "binary_trees__forest__s__position_axiom"
(assert (<= 0 binary_trees__forest__s__position))

(declare-const binary_trees__forest__c__first__bit Int)

(declare-const binary_trees__forest__c__last__bit Int)

(declare-const binary_trees__forest__c__position Int)

;; "binary_trees__forest__c__first__bit_axiom"
(assert (<= 0 binary_trees__forest__c__first__bit))

;; "binary_trees__forest__c__last__bit_axiom"
(assert
  (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))

;; "binary_trees__forest__c__position_axiom"
(assert (<= 0 binary_trees__forest__c__position))

(declare-const dummy1 us_rep1)

(declare-sort natural 0)

;; "natural'int"
(declare-fun naturalqtint (natural) Int)

;; "natural'axiom"
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep2 ((x natural)) Int
  (naturalqtint x))

;; "of_rep"
(declare-fun of_rep2 (Int) natural)

;; "inversion_axiom"
(assert
  (forall ((x natural))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x natural)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-datatypes ((us_split_fields4 0))
  (((us_split_fieldsqtmk2
    (rec__search_trees__search_tree__root extended_index_type)(rec__search_trees__search_tree__struct us_rep1)(rec__search_trees__search_tree__values (Array Int natural))))))

(declare-datatypes ((us_rep2 0))
  (((us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const search_trees__search_tree__root__first__bit Int)

(declare-const search_trees__search_tree__root__last__bit Int)

(declare-const search_trees__search_tree__root__position Int)

;; "search_trees__search_tree__root__first__bit_axiom"
(assert (<= 0 search_trees__search_tree__root__first__bit))

;; "search_trees__search_tree__root__last__bit_axiom"
(assert
  (< search_trees__search_tree__root__first__bit search_trees__search_tree__root__last__bit))

;; "search_trees__search_tree__root__position_axiom"
(assert (<= 0 search_trees__search_tree__root__position))

(declare-const search_trees__search_tree__struct__first__bit Int)

(declare-const search_trees__search_tree__struct__last__bit Int)

(declare-const search_trees__search_tree__struct__position Int)

;; "search_trees__search_tree__struct__first__bit_axiom"
(assert (<= 0 search_trees__search_tree__struct__first__bit))

;; "search_trees__search_tree__struct__last__bit_axiom"
(assert
  (< search_trees__search_tree__struct__first__bit search_trees__search_tree__struct__last__bit))

;; "search_trees__search_tree__struct__position_axiom"
(assert (<= 0 search_trees__search_tree__struct__position))

(declare-const search_trees__search_tree__values__first__bit Int)

(declare-const search_trees__search_tree__values__last__bit Int)

(declare-const search_trees__search_tree__values__position Int)

;; "search_trees__search_tree__values__first__bit_axiom"
(assert (<= 0 search_trees__search_tree__values__first__bit))

;; "search_trees__search_tree__values__last__bit_axiom"
(assert
  (< search_trees__search_tree__values__first__bit search_trees__search_tree__values__last__bit))

;; "search_trees__search_tree__values__position_axiom"
(assert (<= 0 search_trees__search_tree__values__position))

(declare-const dummy2 us_rep2)

(declare-sort color_type 0)

;; "in_range"
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

;; "to_rep"
(declare-fun to_rep3 (color_type) Int)

;; "of_rep"
(declare-fun of_rep3 (Int) color_type)

;; "inversion_axiom"
(assert
  (forall ((x color_type))
    (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; "range_axiom"
(assert
  (forall ((x color_type))
    (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                                  (of_rep3 x))) )))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const component__size2 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-datatypes ((us_split_fields6 0))
  (((us_split_fieldsqtmk3
    (rec__red_black_trees__rbt__struct us_rep2)(rec__red_black_trees__rbt__color (Array Int color_type))))))

(declare-datatypes ((us_rep3 0))
  (((us_repqtmk3 (us_split_fields7 us_split_fields6)))))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "alignment_axiom"
(assert (<= 0 alignment6))

(declare-const red_black_trees__rbt__struct__first__bit Int)

(declare-const red_black_trees__rbt__struct__last__bit Int)

(declare-const red_black_trees__rbt__struct__position Int)

;; "red_black_trees__rbt__struct__first__bit_axiom"
(assert (<= 0 red_black_trees__rbt__struct__first__bit))

;; "red_black_trees__rbt__struct__last__bit_axiom"
(assert
  (< red_black_trees__rbt__struct__first__bit red_black_trees__rbt__struct__last__bit))

;; "red_black_trees__rbt__struct__position_axiom"
(assert (<= 0 red_black_trees__rbt__struct__position))

(declare-const red_black_trees__rbt__color__first__bit Int)

(declare-const red_black_trees__rbt__color__last__bit Int)

(declare-const red_black_trees__rbt__color__position Int)

;; "red_black_trees__rbt__color__first__bit_axiom"
(assert (<= 0 red_black_trees__rbt__color__first__bit))

;; "red_black_trees__rbt__color__last__bit_axiom"
(assert
  (< red_black_trees__rbt__color__first__bit red_black_trees__rbt__color__last__bit))

;; "red_black_trees__rbt__color__position_axiom"
(assert (<= 0 red_black_trees__rbt__color__position))

(declare-const dummy3 us_rep3)

;; "size"
(declare-fun size (us_rep2) Int)

;; "size"
(declare-fun size1 (us_rep1) Int)

;; "valid_root"
(declare-fun valid_root (us_rep1
  Int) Bool)

;; "tree_structure"
(declare-fun tree_structure (us_rep1) Bool)

;; "ordered_leafs"
(declare-fun ordered_leafs (us_rep1
  Int
  (Array Int natural)) Bool)

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_344 us_rep3) (temp___is_init_340 Bool) (temp___skip_constant_341 Bool) (temp___do_toplevel_342 Bool) (temp___do_typ_inv_343 Bool)) Bool
  (and
    (=>
      (= temp___do_typ_inv_343 true)
      (let ((temp___345 (rec__red_black_trees__rbt__struct
                          (us_split_fields7 temp___expr_344))))
        (ite (= (size1
                  (rec__search_trees__search_tree__struct
                    (us_split_fields5 temp___345))) 0)
          (= (to_rep
               (rec__search_trees__search_tree__root
                 (us_split_fields5 temp___345))) 0)
          (and
            (and
              (not
                (= (to_rep
                     (rec__search_trees__search_tree__root
                       (us_split_fields5 temp___345))) 0))
              (= (valid_root
                   (rec__search_trees__search_tree__struct
                     (us_split_fields5 temp___345))
                   (to_rep
                     (rec__search_trees__search_tree__root
                       (us_split_fields5 temp___345)))) true))
            (= (ordered_leafs
                 (rec__search_trees__search_tree__struct
                   (us_split_fields5 temp___345))
                 (to_rep
                   (rec__search_trees__search_tree__root
                     (us_split_fields5 temp___345)))
                 (rec__search_trees__search_tree__values
                   (us_split_fields5 temp___345))) true)))))
    (=>
      (= temp___do_typ_inv_343 true)
      (= (tree_structure
           (rec__search_trees__search_tree__struct
             (us_split_fields5
               (rec__red_black_trees__rbt__struct
                 (us_split_fields7 temp___expr_344))))) true))))

(declare-sort us_rep4 0)

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; "value__size_axiom"
(assert (<= 0 value__size7))

;; "object__size_axiom"
(assert (<= 0 object__size7))

;; "alignment_axiom"
(assert (<= 0 alignment7))

(declare-const dummy4 us_rep4)

;; "last"
(declare-fun last (us_rep4) Int)

;; "in_range"
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

(declare-datatypes ((us_split_fields8 0))
  (((us_split_fieldsqtmk4
    (rec__tree_model__path_type__a us_rep4)(rec__tree_model__path_type__k Bool)))))

(declare-datatypes ((us_rep5 0))
  (((us_repqtmk4 (us_split_fields9 us_split_fields8)))))

(declare-const value__size8 Int)

(declare-const object__size8 Int)

(declare-const alignment8 Int)

;; "value__size_axiom"
(assert (<= 0 value__size8))

;; "object__size_axiom"
(assert (<= 0 object__size8))

;; "alignment_axiom"
(assert (<= 0 alignment8))

(declare-const tree_model__path_type__a__first__bit Int)

(declare-const tree_model__path_type__a__last__bit Int)

(declare-const tree_model__path_type__a__position Int)

;; "tree_model__path_type__a__first__bit_axiom"
(assert (<= 0 tree_model__path_type__a__first__bit))

;; "tree_model__path_type__a__last__bit_axiom"
(assert
  (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))

;; "tree_model__path_type__a__position_axiom"
(assert (<= 0 tree_model__path_type__a__position))

(declare-const tree_model__path_type__k__first__bit Int)

(declare-const tree_model__path_type__k__last__bit Int)

(declare-const tree_model__path_type__k__position Int)

;; "tree_model__path_type__k__first__bit_axiom"
(assert (<= 0 tree_model__path_type__k__first__bit))

;; "tree_model__path_type__k__last__bit_axiom"
(assert
  (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))

;; "tree_model__path_type__k__position_axiom"
(assert (<= 0 tree_model__path_type__k__position))

(declare-const dummy5 us_rep5)

;; "model"
(declare-fun model1 (us_rep2) (Array Int us_rep5))

;; "model"
(declare-fun model2 (us_rep1
  Int) (Array Int us_rep5))

(declare-const value__size9 Int)

(declare-const object__size9 Int)

(declare-const alignment9 Int)

;; "value__size_axiom"
(assert (<= 0 value__size9))

;; "object__size_axiom"
(assert (<= 0 object__size9))

;; "alignment_axiom"
(assert (<= 0 alignment9))

(declare-const dummy6 Int)

;; "length"
(define-fun length ((param__container us_rep4)) Int
  (- (+ (last param__container) 1) 1))

;; "in_range"
(define-fun in_range6 ((x Int)) Bool
  (and (<= 1 x) (<= x 100)))

(declare-const value__size10 Int)

(declare-const object__size10 Int)

(declare-const component__size3 Int)

(declare-const alignment10 Int)

;; "value__size_axiom"
(assert (<= 0 value__size10))

;; "object__size_axiom"
(assert (<= 0 object__size10))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment10))

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_497 (Array Int us_rep5)) (temp___is_init_493 Bool) (temp___skip_constant_494 Bool) (temp___do_toplevel_495 Bool) (temp___do_typ_inv_496 Bool)) Bool
  (forall ((temp___498 Int))
    (=>
      (and (<= 1 temp___498) (<= temp___498 100))
      (< (length
           (rec__tree_model__path_type__a
             (us_split_fields9 (select temp___expr_497 temp___498)))) 100))))

(declare-const t us_rep3)

;; "peek"
(declare-fun peek (us_rep2
  Int
  Int) Int)

;; "peek"
(declare-fun peek1 (us_rep1
  Int
  Int) Int)

(declare-datatypes ((us_split_fields10 0))
  (((us_split_fieldsqtmk5
    (rec__red_black_trees__black_count__status Bool)(rec__red_black_trees__black_count__depth extended_index_type)(rec__red_black_trees__black_count__count extended_index_type)))))

(declare-datatypes ((us_rep6 0))
  (((us_repqtmk5 (us_split_fields11 us_split_fields10)))))

;; "bool_eq"
(define-fun bool_eq ((a us_rep6) (b us_rep6)) Bool
  (ite (and
         (= (ite (rec__red_black_trees__black_count__status
                   (us_split_fields11 a)) 1 0) (ite (rec__red_black_trees__black_count__status
                                                      (us_split_fields11 b)) 1 0))
         (and
           (= (to_rep
                (rec__red_black_trees__black_count__depth
                  (us_split_fields11 a))) (to_rep
                                            (rec__red_black_trees__black_count__depth
                                              (us_split_fields11 b))))
           (= (to_rep
                (rec__red_black_trees__black_count__count
                  (us_split_fields11 a))) (to_rep
                                            (rec__red_black_trees__black_count__count
                                              (us_split_fields11 b))))))
    true
    false))

(declare-const value__size11 Int)

(declare-const object__size11 Int)

(declare-const alignment11 Int)

;; "value__size_axiom"
(assert (<= 0 value__size11))

;; "object__size_axiom"
(assert (<= 0 object__size11))

;; "alignment_axiom"
(assert (<= 0 alignment11))

(declare-const red_black_trees__black_count__status__first__bit Int)

(declare-const red_black_trees__black_count__status__last__bit Int)

(declare-const red_black_trees__black_count__status__position Int)

;; "red_black_trees__black_count__status__first__bit_axiom"
(assert (<= 0 red_black_trees__black_count__status__first__bit))

;; "red_black_trees__black_count__status__last__bit_axiom"
(assert
  (< red_black_trees__black_count__status__first__bit red_black_trees__black_count__status__last__bit))

;; "red_black_trees__black_count__status__position_axiom"
(assert (<= 0 red_black_trees__black_count__status__position))

(declare-const red_black_trees__black_count__depth__first__bit Int)

(declare-const red_black_trees__black_count__depth__last__bit Int)

(declare-const red_black_trees__black_count__depth__position Int)

;; "red_black_trees__black_count__depth__first__bit_axiom"
(assert (<= 0 red_black_trees__black_count__depth__first__bit))

;; "red_black_trees__black_count__depth__last__bit_axiom"
(assert
  (< red_black_trees__black_count__depth__first__bit red_black_trees__black_count__depth__last__bit))

;; "red_black_trees__black_count__depth__position_axiom"
(assert (<= 0 red_black_trees__black_count__depth__position))

(declare-const red_black_trees__black_count__count__first__bit Int)

(declare-const red_black_trees__black_count__count__last__bit Int)

(declare-const red_black_trees__black_count__count__position Int)

;; "red_black_trees__black_count__count__first__bit_axiom"
(assert (<= 0 red_black_trees__black_count__count__first__bit))

;; "red_black_trees__black_count__count__last__bit_axiom"
(assert
  (< red_black_trees__black_count__count__first__bit red_black_trees__black_count__count__last__bit))

;; "red_black_trees__black_count__count__position_axiom"
(assert (<= 0 red_black_trees__black_count__count__position))

(declare-const dummy7 us_rep6)

(declare-const m (Array Int us_rep5))

(declare-const count_r us_rep6)

(declare-const count_l us_rep6)

(declare-const value__size12 Int)

(declare-const object__size12 Int)

(declare-const component__size4 Int)

(declare-const alignment12 Int)

;; "value__size_axiom"
(assert (<= 0 value__size12))

;; "object__size_axiom"
(assert (<= 0 object__size12))

;; "component__size_axiom"
(assert (<= 0 component__size4))

;; "alignment_axiom"
(assert (<= 0 alignment12))

(declare-const value__size13 Int)

(declare-const object__size13 Int)

(declare-const component__size5 Int)

(declare-const alignment13 Int)

;; "value__size_axiom"
(assert (<= 0 value__size13))

;; "object__size_axiom"
(assert (<= 0 object__size13))

;; "component__size_axiom"
(assert (<= 0 component__size5))

;; "alignment_axiom"
(assert (<= 0 alignment13))

;; "red_black_trees__nb_blacks__res__aggregate_def"
(declare-fun red_black_trees__nb_blacks__res__aggregate_def (us_rep6
  us_rep6) (Array Int us_rep6))

;; "get"
(declare-fun get (us_rep4
  Int) Int)

;; "oeq"
(define-fun oeq ((param__left us_rep4) (param__right us_rep4)) Bool
  (and (= (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "parent"
(declare-fun parent (us_rep1
  Int) Int)

;; "olt"
(define-fun olt ((param__left us_rep4) (param__right us_rep4)) Bool
  (and (< (length param__left) (length param__right)) (ite (forall ((n Int))
                                                             (=>
                                                               (and
                                                                 (<= 1 n)
                                                                 (<= n 
                                                                 (last
                                                                   param__left)))
                                                               (= (get
                                                                    param__left
                                                                    n) 
                                                               (get
                                                                 param__right
                                                                 n))))
                                                        true
                                                        false)))

;; "is_add"
(declare-fun is_add (us_rep4
  Int
  us_rep4) Bool)

;; "position"
(declare-fun position (us_rep1
  Int) Int)

;; "dynamic_invariant"
(define-fun dynamic_invariant2 ((temp___expr_301 us_rep2) (temp___is_init_297 Bool) (temp___skip_constant_298 Bool) (temp___do_toplevel_299 Bool) (temp___do_typ_inv_300 Bool)) Bool
  (and
    (=>
      (= temp___do_typ_inv_300 true)
      (ite (= (size1
                (rec__search_trees__search_tree__struct
                  (us_split_fields5 temp___expr_301))) 0)
        (= (to_rep
             (rec__search_trees__search_tree__root
               (us_split_fields5 temp___expr_301))) 0)
        (and
          (and
            (not
              (= (to_rep
                   (rec__search_trees__search_tree__root
                     (us_split_fields5 temp___expr_301))) 0))
            (= (valid_root
                 (rec__search_trees__search_tree__struct
                   (us_split_fields5 temp___expr_301))
                 (to_rep
                   (rec__search_trees__search_tree__root
                     (us_split_fields5 temp___expr_301)))) true))
          (= (ordered_leafs
               (rec__search_trees__search_tree__struct
                 (us_split_fields5 temp___expr_301))
               (to_rep
                 (rec__search_trees__search_tree__root
                   (us_split_fields5 temp___expr_301)))
               (rec__search_trees__search_tree__values
                 (us_split_fields5 temp___expr_301))) true))))
    (=>
      (= temp___do_typ_inv_300 true)
      (= (tree_structure
           (rec__search_trees__search_tree__struct
             (us_split_fields5 temp___expr_301))) true))))

;; "dynamic_invariant"
(define-fun dynamic_invariant3 ((temp___expr_276 us_rep1) (temp___is_init_272 Bool) (temp___skip_constant_273 Bool) (temp___do_toplevel_274 Bool) (temp___do_typ_inv_275 Bool)) Bool
  (=>
    (= temp___do_typ_inv_275 true)
    (= (tree_structure temp___expr_276) true)))

;; "in_range"
(define-fun in_range7 ((x Int)) Bool
  (and (<= 0 x) (<= x 1)))

;; "size__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (! (=>
         (dynamic_invariant3 param__f true false true true)
         (in_range1 (size1 param__f))) :pattern ((size1 param__f)) )))

;; "size__post_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (=>
         (dynamic_invariant2 param__t true false true true)
         (in_range1 (size param__t))) :pattern ((size param__t)) )))

;; "size__def_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (= (size param__t) (size1
                            (rec__search_trees__search_tree__struct
                              (us_split_fields5 param__t)))) :pattern (
    (size
      param__t)) )))

;; "last__post_axiom"
(assert
  (forall ((param__container us_rep4))
    (! (in_range5 (last param__container)) :pattern ((last param__container)) )))

;; "get__post_axiom"
(assert
  (forall ((param__container us_rep4))
    (forall ((param__position Int))
      (! (=>
           (and
             (in_range5 param__position)
             (and
               (<= 1 param__position)
               (<= param__position (last param__container))))
           (in_range7 (get param__container param__position))) :pattern (
      (get
        param__container
        param__position)) ))))

;; "valid_root__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant3 param__f true false true true)
             (in_range6 param__i))
           (=>
             (< (size1 param__f) param__i)
             (not (= (valid_root param__f param__i) true)))) :pattern (
      (valid_root
        param__f
        param__i)) ))))

;; "parent__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (dynamic_invariant3 param__f true false true true)
             (in_range6 param__i))
           (let ((result (parent param__f param__i)))
             (and
               (and
                 (=> (= (valid_root param__f param__i) true) (= result 0))
                 (=> (= (size1 param__f) 0) (= result 0)))
               (in_range1 result)))) :pattern ((parent param__f param__i)) ))))

;; "is_add__post_axiom"
(assert true)

;; "is_add__def_axiom"
(assert
  (forall ((param__s1 us_rep4) (param__s2 us_rep4))
    (forall ((param__d Int))
      (! (=
           (= (is_add param__s1 param__d param__s2) true)
           (and
             (and
               (= (- (length param__s2) 1) (length param__s1))
               (= (olt param__s1 param__s2) true))
             (= (get param__s2 (last param__s2)) param__d))) :pattern (
      (is_add
        param__s1
        param__d
        param__s2)) ))))

;; "position__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int))
      (! (=>
           (and
             (and
               (dynamic_invariant3 param__f true false true true)
               (in_range6 param__i))
             (not (= (parent param__f param__i) 0)))
           (in_range7 (position param__f param__i))) :pattern ((position
                                                                 param__f
                                                                 param__i)) ))))

;; "model__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (! (=>
           (and
             (and
               (dynamic_invariant3 param__f true false true true)
               (in_range6 param__root))
             (= (valid_root param__f param__root) true))
           (let ((result (model2 param__f param__root)))
             (and
               (and
                 (and
                   (and
                     (and
                       (= (rec__tree_model__path_type__k
                            (us_split_fields9 (select result param__root))) true)
                       (= (last
                            (rec__tree_model__path_type__a
                              (us_split_fields9 (select result param__root)))) 0))
                     (forall ((i Int))
                       (=>
                         (and (<= 1 i) (<= i 100))
                         (=>
                           (not (= i param__root))
                           (ite (and
                                  (not (= (parent param__f i) 0))
                                  (= (rec__tree_model__path_type__k
                                       (us_split_fields9
                                         (select result (parent param__f i)))) true))
                             (= (rec__tree_model__path_type__k
                                  (us_split_fields9 (select result i))) true)
                             (not
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields9 (select result i))) true)))))))
                   (forall ((i Int))
                     (=>
                       (and (<= 1 i) (<= i 100))
                       (ite (and
                              (= (rec__tree_model__path_type__k
                                   (us_split_fields9 (select result i))) true)
                              (not (= i param__root)))
                         (= (is_add
                              (rec__tree_model__path_type__a
                                (us_split_fields9
                                  (select result (parent param__f i))))
                              (position param__f i)
                              (rec__tree_model__path_type__a
                                (us_split_fields9 (select result i)))) true)
                         (= (last
                              (rec__tree_model__path_type__a
                                (us_split_fields9 (select result i)))) 0)))))
                 (forall ((i Int))
                   (=>
                     (and (<= 1 i) (<= i 100))
                     (=>
                       (= (rec__tree_model__path_type__k
                            (us_split_fields9 (select result i))) true)
                       (forall ((j Int))
                         (=>
                           (and (<= 1 j) (<= j 100))
                           (=>
                             (and
                               (= (rec__tree_model__path_type__k
                                    (us_split_fields9 (select result j))) true)
                               (= (oeq
                                    (rec__tree_model__path_type__a
                                      (us_split_fields9 (select result i)))
                                    (rec__tree_model__path_type__a
                                      (us_split_fields9 (select result j)))) true))
                             (= j i))))))))
               (dynamic_invariant1 result true false true true)))) :pattern (
      (model2
        param__f
        param__root)) ))))

;; "model__post_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (=>
         (and
           (dynamic_invariant2 param__t true false true true)
           (not (= (size param__t) 0)))
         (dynamic_invariant1 (model1 param__t) true false true true)) :pattern (
    (model1
      param__t)) )))

;; "model__def_axiom"
(assert
  (forall ((param__t us_rep2))
    (! (= (model1 param__t) (model2
                              (rec__search_trees__search_tree__struct
                                (us_split_fields5 param__t))
                              (to_rep
                                (rec__search_trees__search_tree__root
                                  (us_split_fields5 param__t))))) :pattern (
    (model1
      param__t)) )))

;; "peek__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__i Int) (param__d Int))
      (! (=>
           (and
             (and
               (dynamic_invariant3 param__f true false true true)
               (in_range6 param__i))
             (in_range7 param__d))
           (let ((result (peek1 param__f param__i param__d)))
             (and
               (and
                 (ite (not (= result 0))
                   (and
                     (= (position param__f result) param__d)
                     (= (parent param__f result) param__i))
                   (forall ((j Int))
                     (=>
                       (and (<= 1 j) (<= j 100))
                       (=>
                         (= (parent param__f j) param__i)
                         (not (= (position param__f j) param__d))))))
                 (forall ((j Int))
                   (=>
                     (and (<= 1 j) (<= j 100))
                     (=>
                       (and
                         (= (parent param__f j) param__i)
                         (= (position param__f j) param__d))
                       (= result j)))))
               (in_range1 result)))) :pattern ((peek1
                                                 param__f
                                                 param__i
                                                 param__d)) ))))

;; "peek__post_axiom"
(assert
  (forall ((param__t us_rep2))
    (forall ((param__i Int) (param__d Int))
      (! (=>
           (and
             (and
               (and
                 (dynamic_invariant2 param__t true false true true)
                 (in_range6 param__i))
               (in_range7 param__d))
             (and
               (not (= (size param__t) 0))
               (= (rec__tree_model__path_type__k
                    (us_split_fields9
                      (let ((temp___550qtunused (model1 param__t)))
                        (select (model1 param__t) param__i)))) true)))
           (in_range1 (peek param__t param__i param__d))) :pattern ((peek
                                                                    param__t
                                                                    param__i
                                                                    param__d)) ))))

;; "peek__def_axiom"
(assert
  (forall ((param__t us_rep2))
    (forall ((param__i Int) (param__d Int))
      (! (= (peek param__t param__i param__d) (peek1
                                                (rec__search_trees__search_tree__struct
                                                  (us_split_fields5 param__t))
                                                param__i
                                                param__d)) :pattern (
      (peek
        param__t
        param__i
        param__d)) ))))

;; "tree_structure__post_axiom"
(assert true)

;; "ordered_leafs__post_axiom"
(assert
  (forall ((param__f us_rep1))
    (forall ((param__root Int))
      (forall ((param__values (Array Int natural)))
        (! (=>
             (and
               (and
                 (dynamic_invariant3 param__f true false true true)
                 (in_range6 param__root))
               (= (valid_root param__f param__root) true))
             (in_range
               (ite (ordered_leafs param__f param__root param__values) 1 0))) :pattern (
        (ordered_leafs
          param__f
          param__root
          param__values)) )))))

(declare-const rliteral extended_index_type)

;; "rliteral_axiom"
(assert (= (extended_index_typeqtint rliteral) 100))

(declare-const rliteral1 extended_index_type)

;; "rliteral_axiom"
(assert (= (extended_index_typeqtint rliteral1) 0))

;; Goal "def'vc"
;; File "red_black_trees.adb", line 23, characters 0-0
(assert
  (not
  (=>
    (dynamic_invariant t true false true true)
    (=>
      (not
        (= (size (rec__red_black_trees__rbt__struct (us_split_fields7 t))) 0))
      (let ((o (us_repqtmk5
                 (us_split_fieldsqtmk5 (distinct 0 0) rliteral rliteral))))
        (let ((o1 (us_repqtmk5
                    (us_split_fieldsqtmk5 (distinct 1 0) rliteral1 rliteral1))))
          (forall ((temp___917 (Array Int us_rep6)))
            (=>
              (and
                (and
                  (= (select temp___917 0) o1)
                  (forall ((temp___916 Int))
                    (! (=>
                         (and
                           (not (= temp___916 0))
                           (and (<= 0 temp___916) (<= temp___916 100)))
                         (= (select temp___917 temp___916) o)) :pattern ((select temp___917 temp___916)) )))
                (= temp___917 (red_black_trees__nb_blacks__res__aggregate_def
                                o1
                                o)))
              (forall ((res (Array Int us_rep6)))
                (=>
                  (= res temp___917)
                  (let ((o2 (rec__red_black_trees__rbt__struct
                              (us_split_fields7 t))))
                    (let ((red_black_trees__nb_blacks__m__assume (model1 o2)))
                      (=>
                        (and
                          (dynamic_invariant1
                            red_black_trees__nb_blacks__m__assume
                            true
                            false
                            true
                            true)
                          (= red_black_trees__nb_blacks__m__assume (model2
                                                                    (rec__search_trees__search_tree__struct
                                                                    (us_split_fields5
                                                                    o2))
                                                                    (to_rep
                                                                    (rec__search_trees__search_tree__root
                                                                    (us_split_fields5
                                                                    o2))))))
                        (=>
                          (= red_black_trees__nb_blacks__m__assume m)
                          (=>
                            (dynamic_invariant1 m true false true true)
                            (forall ((n Int))
                              (=>
                                (= n 0)
                                (=>
                                  (= (and (ite (<= 0 n) true false) (ite (<= n 99)
                                                                    true
                                                                    false)) true)
                                  (forall ((res1 (Array Int us_rep6)) (n1 Int))
                                    (=>
                                      (and
                                        (= (bool_eq
                                             (select res1 0)
                                             (us_repqtmk5
                                               (us_split_fieldsqtmk5
                                                 (distinct 1 0)
                                                 rliteral1
                                                 rliteral1))) true)
                                        (and
                                          (forall ((i Int))
                                            (=>
                                              (and (<= 1 i) (<= i 100))
                                              (<= (to_rep
                                                    (rec__red_black_trees__black_count__count
                                                      (us_split_fields11
                                                        (select res1 i)))) 
                                              (to_rep
                                                (rec__red_black_trees__black_count__depth
                                                  (us_split_fields11
                                                    (select res1 i)))))))
                                          (and
                                            (forall ((i Int))
                                              (=>
                                                (and (<= 1 i) (<= i 100))
                                                (or
                                                  (= (to_rep
                                                       (rec__red_black_trees__black_count__depth
                                                         (us_split_fields11
                                                           (select res1 i)))) 100)
                                                  (<= (to_rep
                                                        (rec__red_black_trees__black_count__depth
                                                          (us_split_fields11
                                                            (select res1 i)))) n1))))
                                            (and
                                              (forall ((i Int))
                                                (=>
                                                  (and (<= 1 i) (<= i 100))
                                                  (ite (and
                                                         (= (rec__tree_model__path_type__k
                                                              (us_split_fields9
                                                                (select 
                                                                m i))) true)
                                                         (< n1 (to_rep
                                                                 (rec__red_black_trees__black_count__depth
                                                                   (us_split_fields11
                                                                    (select res1 i))))))
                                                    (< (last
                                                         (rec__tree_model__path_type__a
                                                           (us_split_fields9
                                                             (select 
                                                             m i)))) (- 100 n1))
                                                    (=>
                                                      (= (rec__tree_model__path_type__k
                                                           (us_split_fields9
                                                             (select 
                                                             m i))) true)
                                                      (and
                                                        (and
                                                          (and
                                                            (<= (to_rep
                                                                  (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res1 i)))) n1)
                                                            (=
                                                              (= (rec__red_black_trees__black_count__status
                                                                   (us_split_fields11
                                                                    (select res1 i))) true)
                                                              (= (to_rep
                                                                   (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res1 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    0))))) 
                                                              (to_rep
                                                                (rec__red_black_trees__black_count__count
                                                                  (us_split_fields11
                                                                    (select res1 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    1))))))))
                                                          (= (to_rep
                                                               (rec__red_black_trees__black_count__depth
                                                                 (us_split_fields11
                                                                   (select res1 i)))) (+ 1 
                                                          (max
                                                            (to_rep
                                                              (rec__red_black_trees__black_count__depth
                                                                (us_split_fields11
                                                                  (select res1 
                                                                  (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    0)))))
                                                            (to_rep
                                                              (rec__red_black_trees__black_count__depth
                                                                (us_split_fields11
                                                                  (select res1 
                                                                  (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    1)))))))))
                                                        (= (to_rep
                                                             (rec__red_black_trees__black_count__count
                                                               (us_split_fields11
                                                                 (select res1 i)))) (+ 
                                                        (ite (= (to_rep3
                                                                  (select 
                                                                  (rec__red_black_trees__rbt__color
                                                                    (us_split_fields7
                                                                    t)) i)) 0)
                                                          1
                                                          0) (to_rep
                                                               (rec__red_black_trees__black_count__count
                                                                 (us_split_fields11
                                                                   (select res1 
                                                                   (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    i
                                                                    0))))))))))))
                                              (forall ((j Int))
                                                (=>
                                                  (and (<= 1 j) (<= j 100))
                                                  (=>
                                                    (and
                                                      (and
                                                        (= (rec__tree_model__path_type__k
                                                             (us_split_fields9
                                                               (select 
                                                               m j))) true)
                                                        (< (to_rep
                                                             (rec__red_black_trees__black_count__depth
                                                               (us_split_fields11
                                                                 (select res1 
                                                                 (peek
                                                                   (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                   j
                                                                   0))))) n1))
                                                      (< (to_rep
                                                           (rec__red_black_trees__black_count__depth
                                                             (us_split_fields11
                                                               (select res1 
                                                               (peek
                                                                 (rec__red_black_trees__rbt__struct
                                                                   (us_split_fields7
                                                                    t))
                                                                 j
                                                                 1))))) n1))
                                                    (<= (to_rep
                                                          (rec__red_black_trees__black_count__depth
                                                            (us_split_fields11
                                                              (select res1 j)))) n1))))))))
                                      (=>
                                        (= (and (ite true true false) 
                                        (ite (and (<= 0 n1) (<= n1 99))
                                          true
                                          false)) true)
                                        (forall ((i Int))
                                          (=>
                                            (= i 1)
                                            (=>
                                              (= (and (ite (<= 1 i)
                                                        true
                                                        false) (ite (<= i 100)
                                                                 true
                                                                 false)) true)
                                              (forall ((res2 (Array Int us_rep6)) (i1 Int))
                                                (=>
                                                  (and
                                                    (= (bool_eq
                                                         (select res2 0)
                                                         (us_repqtmk5
                                                           (us_split_fieldsqtmk5
                                                             (distinct 1 0)
                                                             rliteral1
                                                             rliteral1))) true)
                                                    (and
                                                      (forall ((i2 Int))
                                                        (=>
                                                          (and
                                                            (<= 1 i2)
                                                            (<= i2 100))
                                                          (<= (to_rep
                                                                (rec__red_black_trees__black_count__count
                                                                  (us_split_fields11
                                                                    (select res2 i2)))) 
                                                          (to_rep
                                                            (rec__red_black_trees__black_count__depth
                                                              (us_split_fields11
                                                                (select res2 i2)))))))
                                                      (and
                                                        (forall ((j Int))
                                                          (=>
                                                            (and
                                                              (<= 1 j)
                                                              (<= j (- i1 1)))
                                                            (or
                                                              (= (to_rep
                                                                   (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) 100)
                                                              (<= (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) (+ n1 1)))))
                                                        (and
                                                          (forall ((j Int))
                                                            (=>
                                                              (and
                                                                (<= i1 j)
                                                                (<= j 100))
                                                              (or
                                                                (= (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) 100)
                                                                (<= (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) n1))))
                                                          (and
                                                            (forall ((j Int))
                                                              (=>
                                                                (and
                                                                  (<= 1 j)
                                                                  (<= j 100))
                                                                (=>
                                                                  (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (< n1 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j))))))
                                                                  (< 
                                                                  (last
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j)))) (- 100 n1)))))
                                                            (and
                                                              (forall 
                                                                ((j Int))
                                                                (=>
                                                                  (and
                                                                    (<= 1 j)
                                                                    (<= j (- i1 1)))
                                                                  (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (< (+ n1 1) 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j))))))
                                                                    (< 
                                                                    (last
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j)))) (- 100 (+ n1 1))))))
                                                              (and
                                                                (forall 
                                                                  ((j Int))
                                                                  (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (or
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) n1)
                                                                    (and
                                                                    (< j i1)
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) (+ n1 1)))))
                                                                    (and
                                                                    (and
                                                                    (=
                                                                    (= 
                                                                    (rec__red_black_trees__black_count__status
                                                                    (us_split_fields11
                                                                    (select res2 j))) true)
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0))))) 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1)))))))
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) (+ 1 
                                                                    (max
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0)))))
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1)))))))))
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res2 j)))) (+ 
                                                                    (ite (= 
                                                                    (to_rep3
                                                                    (select 
                                                                    (rec__red_black_trees__rbt__color
                                                                    (us_split_fields7
                                                                    t)) j)) 0)
                                                                    1
                                                                    0) 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0)))))))))))
                                                                (and
                                                                  (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j 100))
                                                                    (=>
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (< 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0))))) n1))
                                                                    (< 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1))))) n1))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) n1))))
                                                                  (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j (- i1 1)))
                                                                    (=>
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0))))) n1))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1))))) n1))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res2 j)))) (+ n1 1)))))))))))))
                                                  (=>
                                                    (= (and (ite (forall 
                                                                   ((temp___937 Int))
                                                                   (=>
                                                                    (and
                                                                    (<= 0 temp___937)
                                                                    (<= temp___937 100))
                                                                    (=>
                                                                    (or
                                                                    (< 100 temp___937)
                                                                    (or
                                                                    (< temp___937 1)
                                                                    (<= i1 temp___937)))
                                                                    (= (select res2 temp___937) (select res1 temp___937)))))
                                                              true
                                                              false) 
                                                    (ite (and
                                                           (<= 1 i1)
                                                           (<= i1 100))
                                                      true
                                                      false)) true)
                                                    (forall ((res3 (Array Int us_rep6)))
                                                      (=>
                                                        (exists ((spark__branch Bool))
                                                          (and
                                                            (= spark__branch 
                                                            (rec__tree_model__path_type__k
                                                              (us_split_fields9
                                                                (select 
                                                                m i1))))
                                                            (ite (= spark__branch true)
                                                              (let ((o3 
                                                                (rec__red_black_trees__rbt__struct
                                                                  (us_split_fields7
                                                                    t))))
                                                                (let ((o4 
                                                                  (peek
                                                                    o3
                                                                    i1
                                                                    1)))
                                                                  (and
                                                                    (and
                                                                    (in_range1
                                                                    o4)
                                                                    (= o4 
                                                                    (peek1
                                                                    (rec__search_trees__search_tree__struct
                                                                    (us_split_fields5
                                                                    o3))
                                                                    i1
                                                                    1)))
                                                                    (and
                                                                    (= (select res2 o4) 
                                                                    count_r)
                                                                    (let ((o5 
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))))
                                                                    (let ((o6 
                                                                    (peek
                                                                    o5
                                                                    i1
                                                                    0)))
                                                                    (and
                                                                    (and
                                                                    (in_range1
                                                                    o6)
                                                                    (= o6 
                                                                    (peek1
                                                                    (rec__search_trees__search_tree__struct
                                                                    (us_split_fields5
                                                                    o5))
                                                                    i1
                                                                    0)))
                                                                    (and
                                                                    (= (select res2 o6) 
                                                                    count_l)
                                                                    (exists 
                                                                    ((o7 Int))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    count_l))) o7)
                                                                    (exists 
                                                                    ((o8 Int))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    count_r))) o8)
                                                                    (exists 
                                                                    ((spark__branch1 Bool))
                                                                    (and
                                                                    (= spark__branch1 
                                                                    (ite (= 
                                                                    (max
                                                                    o8
                                                                    o7) n1)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch1 true)
                                                                    (let ((usq_ 
                                                                    (us_split_fields11
                                                                    (select res2 i1))))
                                                                    (exists 
                                                                    ((o9 extended_index_type))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o9) (+ n1 1))
                                                                    (exists 
                                                                    ((res4 (Array Int us_rep6)))
                                                                    (and
                                                                    (= res4 (store res2 i1 
                                                                    (us_repqtmk5
                                                                    (us_split_fieldsqtmk5
                                                                    (rec__red_black_trees__black_count__status
                                                                    usq_)
                                                                    o9
                                                                    (rec__red_black_trees__black_count__count
                                                                    usq_)))))
                                                                    (let ((usq_1 
                                                                    (us_split_fields11
                                                                    (select res4 i1))))
                                                                    (exists 
                                                                    ((o10 Int))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    count_l))) o10)
                                                                    (exists 
                                                                    ((o11 Int))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    count_r))) o11)
                                                                    (exists 
                                                                    ((res5 (Array Int us_rep6)))
                                                                    (and
                                                                    (= res5 (store res4 i1 
                                                                    (us_repqtmk5
                                                                    (us_split_fieldsqtmk5
                                                                    (ite (= o11 o10)
                                                                    true
                                                                    false)
                                                                    (rec__red_black_trees__black_count__depth
                                                                    usq_1)
                                                                    (rec__red_black_trees__black_count__count
                                                                    usq_1)))))
                                                                    (exists 
                                                                    ((o12 Int))
                                                                    (and
                                                                    (= 
                                                                    (to_rep3
                                                                    (select 
                                                                    (rec__red_black_trees__rbt__color
                                                                    (us_split_fields7
                                                                    t)) i1)) o12)
                                                                    (exists 
                                                                    ((spark__branch2 Bool))
                                                                    (and
                                                                    (= spark__branch2 
                                                                    (ite (= o12 0)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch2 true)
                                                                    (let ((usq_2 
                                                                    (us_split_fields11
                                                                    (select res5 i1))))
                                                                    (exists 
                                                                    ((o13 Int))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    count_l))) o13)
                                                                    (let ((o14 (+ o13 1)))
                                                                    (and
                                                                    (in_range1
                                                                    o14)
                                                                    (exists 
                                                                    ((o15 extended_index_type))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o15) o14)
                                                                    (= res3 (store res5 i1 
                                                                    (us_repqtmk5
                                                                    (us_split_fieldsqtmk5
                                                                    (rec__red_black_trees__black_count__status
                                                                    usq_2)
                                                                    (rec__red_black_trees__black_count__depth
                                                                    usq_2)
                                                                    o15)))))))))))
                                                                    (let ((usq_2 
                                                                    (us_split_fields11
                                                                    (select res5 i1))))
                                                                    (exists 
                                                                    ((o13 Int))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    count_l))) o13)
                                                                    (exists 
                                                                    ((o14 extended_index_type))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    o14) o13)
                                                                    (= res3 (store res5 i1 
                                                                    (us_repqtmk5
                                                                    (us_split_fieldsqtmk5
                                                                    (rec__red_black_trees__black_count__status
                                                                    usq_2)
                                                                    (rec__red_black_trees__black_count__depth
                                                                    usq_2)
                                                                    o14))))))))))))))))))))))))))
                                                                    (= res3 res2))))))))))))))))
                                                              (= res3 res2))))
                                                        (=>
                                                          (not (= i1 100))
                                                          (forall ((i2 Int))
                                                            (=>
                                                              (= i2 (+ i1 1))
                                                              (=>
                                                                (= (bool_eq
                                                                    (select res3 0)
                                                                    (us_repqtmk5
                                                                    (us_split_fieldsqtmk5
                                                                    (distinct 1 0)
                                                                    rliteral1
                                                                    rliteral1))) true)
                                                                (=>
                                                                  (forall 
                                                                    ((i3 Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 i3)
                                                                    (<= i3 100))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res3 i3)))) 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 i3)))))))
                                                                  (=>
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j (- i2 1)))
                                                                    (or
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) 100)
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) (+ n1 1)))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= i2 j)
                                                                    (<= j 100))
                                                                    (or
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) 100)
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) n1))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (< n1 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j))))))
                                                                    (< 
                                                                    (last
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j)))) (- 100 n1)))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j (- i2 1)))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (< (+ n1 1) 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j))))))
                                                                    (< 
                                                                    (last
                                                                    (rec__tree_model__path_type__a
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j)))) (- 100 (+ n1 1))))))
                                                                    (=>
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j 100))
                                                                    (=>
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (or
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) n1)
                                                                    (and
                                                                    (< j i2)
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) (+ n1 1)))))
                                                                    (and
                                                                    (and
                                                                    (=
                                                                    (= 
                                                                    (rec__red_black_trees__black_count__status
                                                                    (us_split_fields11
                                                                    (select res3 j))) true)
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res3 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0))))) 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res3 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1)))))))
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) (+ 1 
                                                                    (max
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0)))))
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1)))))))))
                                                                    (= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res3 j)))) (+ 
                                                                    (ite (= 
                                                                    (to_rep3
                                                                    (select 
                                                                    (rec__red_black_trees__rbt__color
                                                                    (us_split_fields7
                                                                    t)) j)) 0)
                                                                    1
                                                                    0) 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__count
                                                                    (us_split_fields11
                                                                    (select res3 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0)))))))))))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 1 j)
                                                                    (<= j 100))
                                                                    (=>
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (rec__tree_model__path_type__k
                                                                    (us_split_fields9
                                                                    (select 
                                                                    m j))) true)
                                                                    (< 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    0))))) n1))
                                                                    (< 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 
                                                                    (peek
                                                                    (rec__red_black_trees__rbt__struct
                                                                    (us_split_fields7
                                                                    t))
                                                                    j
                                                                    1))))) n1))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__red_black_trees__black_count__depth
                                                                    (us_split_fields11
                                                                    (select res3 j)))) n1)))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
