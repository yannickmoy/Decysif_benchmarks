(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

type us_private

logic us_null_ext__ : us_private

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

predicate in_range(x: int) = ((x = 0) or (x = 1))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom :
  (forall i:natural. ((0 <= naturalqtint(i)) and
  (naturalqtint(i) <= 2147483647)))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type extended_index_type

logic extended_index_typeqtint : extended_index_type -> int

axiom extended_index_typeqtaxiom :
  (forall i:extended_index_type. ((0 <= extended_index_typeqtint(i)) and
  (extended_index_typeqtint(i) <= 100)))

predicate in_range2(x: int) = ((0 <= x) and (x <= 100))

function to_rep1(x: extended_index_type) : int = extended_index_typeqtint(x)

logic of_rep1 : int -> extended_index_type

axiom inversion_axiom1 :
  (forall x:extended_index_type [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:extended_index_type [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type position_type

predicate in_range3(x: int) = ((0 <= x) and (x <= 2))

logic to_rep2 : position_type -> int

logic of_rep2 : int -> position_type

axiom inversion_axiom2 :
  (forall x:position_type [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:position_type [to_rep2(x)]. in_range3(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range3(x) ->
  (to_rep2(of_rep2(x)) = x)))

type us_split_fields = { rec__binary_trees__cell__left : extended_index_type;
rec__binary_trees__cell__right : extended_index_type;
rec__binary_trees__cell__parent : extended_index_type;
rec__binary_trees__cell__position : position_type }

type us_rep = { us_split_fields1 : us_split_fields
}

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic binary_trees__cell__left__first__bit : int

logic binary_trees__cell__left__last__bit : int

logic binary_trees__cell__left__position : int

axiom binary_trees__cell__left__first__bit_axiom :
  (0 <= binary_trees__cell__left__first__bit)

axiom binary_trees__cell__left__last__bit_axiom :
  (binary_trees__cell__left__first__bit <  binary_trees__cell__left__last__bit)

axiom binary_trees__cell__left__position_axiom :
  (0 <= binary_trees__cell__left__position)

logic binary_trees__cell__right__first__bit : int

logic binary_trees__cell__right__last__bit : int

logic binary_trees__cell__right__position : int

axiom binary_trees__cell__right__first__bit_axiom :
  (0 <= binary_trees__cell__right__first__bit)

axiom binary_trees__cell__right__last__bit_axiom :
  (binary_trees__cell__right__first__bit <  binary_trees__cell__right__last__bit)

axiom binary_trees__cell__right__position_axiom :
  (0 <= binary_trees__cell__right__position)

logic binary_trees__cell__parent__first__bit : int

logic binary_trees__cell__parent__last__bit : int

logic binary_trees__cell__parent__position : int

axiom binary_trees__cell__parent__first__bit_axiom :
  (0 <= binary_trees__cell__parent__first__bit)

axiom binary_trees__cell__parent__last__bit_axiom :
  (binary_trees__cell__parent__first__bit <  binary_trees__cell__parent__last__bit)

axiom binary_trees__cell__parent__position_axiom :
  (0 <= binary_trees__cell__parent__position)

logic binary_trees__cell__position__first__bit : int

logic binary_trees__cell__position__last__bit : int

logic binary_trees__cell__position__position : int

axiom binary_trees__cell__position__first__bit_axiom :
  (0 <= binary_trees__cell__position__first__bit)

axiom binary_trees__cell__position__last__bit_axiom :
  (binary_trees__cell__position__first__bit <  binary_trees__cell__position__last__bit)

axiom binary_trees__cell__position__position_axiom :
  (0 <= binary_trees__cell__position__position)

logic dummy : us_rep

logic value__size1 : int

logic object__size1 : int

logic component__size : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom1 : (0 <= alignment1)

type us_split_fields2 = { rec__binary_trees__forest__s : extended_index_type;
rec__binary_trees__forest__c : (int,us_rep) farray }

type us_rep1 = { us_split_fields3 : us_split_fields2
}

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic binary_trees__forest__s__first__bit : int

logic binary_trees__forest__s__last__bit : int

logic binary_trees__forest__s__position : int

axiom binary_trees__forest__s__first__bit_axiom :
  (0 <= binary_trees__forest__s__first__bit)

axiom binary_trees__forest__s__last__bit_axiom :
  (binary_trees__forest__s__first__bit <  binary_trees__forest__s__last__bit)

axiom binary_trees__forest__s__position_axiom :
  (0 <= binary_trees__forest__s__position)

logic binary_trees__forest__c__first__bit : int

logic binary_trees__forest__c__last__bit : int

logic binary_trees__forest__c__position : int

axiom binary_trees__forest__c__first__bit_axiom :
  (0 <= binary_trees__forest__c__first__bit)

axiom binary_trees__forest__c__last__bit_axiom :
  (binary_trees__forest__c__first__bit <  binary_trees__forest__c__last__bit)

axiom binary_trees__forest__c__position_axiom :
  (0 <= binary_trees__forest__c__position)

logic dummy1 : us_rep1

logic value__size3 : int

logic object__size3 : int

logic component__size1 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom3 : (0 <= alignment3)

type us_split_fields4 = { rec__search_trees__search_tree__root :
extended_index_type; rec__search_trees__search_tree__struct : us_rep1;
rec__search_trees__search_tree__values : (int,natural) farray }

type us_rep2 = { us_split_fields5 : us_split_fields4
}

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic search_trees__search_tree__root__first__bit : int

logic search_trees__search_tree__root__last__bit : int

logic search_trees__search_tree__root__position : int

axiom search_trees__search_tree__root__first__bit_axiom :
  (0 <= search_trees__search_tree__root__first__bit)

axiom search_trees__search_tree__root__last__bit_axiom :
  (search_trees__search_tree__root__first__bit <  search_trees__search_tree__root__last__bit)

axiom search_trees__search_tree__root__position_axiom :
  (0 <= search_trees__search_tree__root__position)

logic search_trees__search_tree__struct__first__bit : int

logic search_trees__search_tree__struct__last__bit : int

logic search_trees__search_tree__struct__position : int

axiom search_trees__search_tree__struct__first__bit_axiom :
  (0 <= search_trees__search_tree__struct__first__bit)

axiom search_trees__search_tree__struct__last__bit_axiom :
  (search_trees__search_tree__struct__first__bit <  search_trees__search_tree__struct__last__bit)

axiom search_trees__search_tree__struct__position_axiom :
  (0 <= search_trees__search_tree__struct__position)

logic search_trees__search_tree__values__first__bit : int

logic search_trees__search_tree__values__last__bit : int

logic search_trees__search_tree__values__position : int

axiom search_trees__search_tree__values__first__bit_axiom :
  (0 <= search_trees__search_tree__values__first__bit)

axiom search_trees__search_tree__values__last__bit_axiom :
  (search_trees__search_tree__values__first__bit <  search_trees__search_tree__values__last__bit)

axiom search_trees__search_tree__values__position_axiom :
  (0 <= search_trees__search_tree__values__position)

logic dummy2 : us_rep2

logic size : us_rep1 -> int

logic valid_root : us_rep1, int -> bool

type us_rep3

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic dummy3 : us_rep3

logic last : us_rep3 -> int

type extended_index

logic extended_indexqtint : extended_index -> int

axiom extended_indexqtaxiom :
  (forall i:extended_index. ((0 <= extended_indexqtint(i)) and
  (extended_indexqtint(i) <= 2147483647)))

predicate in_range4(x: int) = ((0 <= x) and (x <= 2147483647))

logic get : us_rep3, int -> int

predicate in_range5(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq : int, int -> bool

logic bool_lt : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

logic value__size6 : int

logic object__size6 : int

logic alignment6 : int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 : (0 <= object__size6)

axiom alignment_axiom6 : (0 <= alignment6)

logic dummy4 : int

function length(param__container: us_rep3) : int =
  ((last(param__container) + 1) - 1)

function oeq(param__left: us_rep3, param__right: us_rep3) : bool =
  andb(bool_eq(length(param__left), length(param__right)),
  (if (forall n:int. (((1 <= n) and (n <= last(param__left))) ->
      (get(param__left, n) = get(param__right, n)))) then true else false))

function olt(param__left: us_rep3, param__right: us_rep3) : bool =
  andb(bool_lt(length(param__left), length(param__right)),
  (if (forall n:int. (((1 <= n) and (n <= last(param__left))) ->
      (get(param__left, n) = get(param__right, n)))) then true else false))

logic is_add : us_rep3, int, us_rep3 -> bool

type us_split_fields6 = { rec__tree_model__path_type__a : us_rep3;
rec__tree_model__path_type__k : bool }

type us_rep4 = { us_split_fields7 : us_split_fields6
}

logic value__size7 : int

logic object__size7 : int

logic alignment7 : int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 : (0 <= object__size7)

axiom alignment_axiom7 : (0 <= alignment7)

logic tree_model__path_type__a__first__bit : int

logic tree_model__path_type__a__last__bit : int

logic tree_model__path_type__a__position : int

axiom tree_model__path_type__a__first__bit_axiom :
  (0 <= tree_model__path_type__a__first__bit)

axiom tree_model__path_type__a__last__bit_axiom :
  (tree_model__path_type__a__first__bit <  tree_model__path_type__a__last__bit)

axiom tree_model__path_type__a__position_axiom :
  (0 <= tree_model__path_type__a__position)

logic tree_model__path_type__k__first__bit : int

logic tree_model__path_type__k__last__bit : int

logic tree_model__path_type__k__position : int

axiom tree_model__path_type__k__first__bit_axiom :
  (0 <= tree_model__path_type__k__first__bit)

axiom tree_model__path_type__k__last__bit_axiom :
  (tree_model__path_type__k__first__bit <  tree_model__path_type__k__last__bit)

axiom tree_model__path_type__k__position_axiom :
  (0 <= tree_model__path_type__k__position)

logic dummy5 : us_rep4

logic model : us_rep1, int -> (int,us_rep4) farray

logic parent : us_rep1, int -> int

logic position : us_rep1, int -> int

type index_type

logic index_typeqtint : index_type -> int

axiom index_typeqtaxiom :
  (forall i:index_type. ((1 <= index_typeqtint(i)) and
  (index_typeqtint(i) <= 100)))

predicate in_range6(x: int) = ((1 <= x) and (x <= 100))

logic value__size8 : int

logic object__size8 : int

logic component__size2 : int

logic alignment8 : int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 : (0 <= object__size8)

axiom component__size_axiom2 : (0 <= component__size2)

axiom alignment_axiom8 : (0 <= alignment8)

predicate dynamic_invariant(temp___expr_403: (int,us_rep4) farray,
  temp___is_init_399: bool, temp___skip_constant_400: bool,
  temp___do_toplevel_401: bool, temp___do_typ_inv_402: bool) =
  (forall temp___404:int. (((1 <= temp___404) and (temp___404 <= 100)) ->
  (length((((temp___expr_403[temp___404])).us_split_fields7).rec__tree_model__path_type__a) <  100)))

logic peek : us_rep1, int, int -> int

logic tree_structure : us_rep1 -> bool

predicate dynamic_invariant1(temp___expr_299: us_rep2,
  temp___is_init_295: bool, temp___skip_constant_296: bool,
  temp___do_toplevel_297: bool, temp___do_typ_inv_298: bool) =
  ((temp___do_typ_inv_298 = true) ->
  (tree_structure(((temp___expr_299).us_split_fields5).rec__search_trees__search_tree__struct) = true))

logic ordered_leafs : us_rep1, int, (int,natural) farray -> bool

predicate type_invariant(temp___318: us_rep2) =
  (if (size(((temp___318).us_split_fields5).rec__search_trees__search_tree__struct) = 0) then (to_rep1(((temp___318).us_split_fields5).rec__search_trees__search_tree__root) = 0) else (((not (to_rep1(((temp___318).us_split_fields5).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((temp___318).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((temp___318).us_split_fields5).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((temp___318).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((temp___318).us_split_fields5).rec__search_trees__search_tree__root),
  ((temp___318).us_split_fields5).rec__search_trees__search_tree__values) = true)))

logic v : int

logic ordered_prefix : (int,us_rep4) farray, (int,natural) farray, int,
  int -> bool

logic t : us_rep2

logic l : int

logic d : int

type tcount_typeB

logic tcount_typeBqtint : tcount_typeB -> int

axiom tcount_typeBqtaxiom :
  (forall i:tcount_typeB. (((- 2147483648) <= tcount_typeBqtint(i)) and
  (tcount_typeBqtint(i) <= 2147483647)))

predicate dynamic_invariant2(temp___expr_274: us_rep1,
  temp___is_init_270: bool, temp___skip_constant_271: bool,
  temp___do_toplevel_272: bool, temp___do_typ_inv_273: bool) =
  ((temp___do_typ_inv_273 = true) ->
  (tree_structure(temp___expr_274) = true))

axiom size__post_axiom :
  (forall param__f:us_rep1 [size(param__f)]. (dynamic_invariant2(param__f,
  true, false, true, true) -> in_range2(size(param__f))))

axiom valid_root__post_axiom :
  (forall param__f:us_rep1.
  (forall param__i:int [valid_root(param__f, param__i)].
  ((dynamic_invariant2(param__f, true, false, true, true) and
  in_range6(param__i)) -> ((size(param__f) <  param__i) ->
  (not (valid_root(param__f, param__i) = true))))))

axiom parent__post_axiom :
  (forall param__f:us_rep1.
  (forall param__i:int [parent(param__f, param__i)].
  ((dynamic_invariant2(param__f, true, false, true, true) and
  in_range6(param__i)) -> (let result = parent(param__f, param__i) : int in
  ((((valid_root(param__f, param__i) = true) -> (result = 0)) and
  ((size(param__f) = 0) -> (result = 0))) and in_range2(result))))))

axiom position__post_axiom :
  (forall param__f:us_rep1.
  (forall param__i:int [position(param__f, param__i)].
  (((dynamic_invariant2(param__f, true, false, true, true) and
  in_range6(param__i)) and (not (parent(param__f, param__i) = 0))) ->
  in_range5(position(param__f, param__i)))))

axiom last__post_axiom :
  (forall param__container:us_rep3 [last(param__container)].
  in_range4(last(param__container)))

axiom get__post_axiom :
  (forall param__container:us_rep3.
  (forall param__position:int [get(param__container, param__position)].
  ((in_range4(param__position) and ((1 <= param__position) and
  (param__position <= last(param__container)))) ->
  in_range5(get(param__container, param__position)))))

axiom is_add__post_axiom : true

axiom is_add__def_axiom :
  (forall param__s1:us_rep3. forall param__s2:us_rep3.
  (forall param__d:int [is_add(param__s1, param__d, param__s2)].
  ((is_add(param__s1, param__d, param__s2) = true) <->
  ((((length(param__s2) - 1) = length(param__s1)) and (olt(param__s1,
  param__s2) = true)) and (get(param__s2, last(param__s2)) = param__d)))))

axiom model__post_axiom :
  (forall param__f:us_rep1.
  (forall param__root:int [model(param__f, param__root)].
  (((dynamic_invariant2(param__f, true, false, true, true) and
  in_range6(param__root)) and (valid_root(param__f, param__root) = true)) ->
  (let result = model(param__f, param__root) : (int,us_rep4) farray in
  (((((((((result[param__root])).us_split_fields7).rec__tree_model__path_type__k = true) and
  (last((((result[param__root])).us_split_fields7).rec__tree_model__path_type__a) = 0)) and
  (forall i:int. (((1 <= i) and (i <= 100)) -> ((not (i = param__root)) ->
  (if ((not (parent(param__f, i) = 0)) and ((((result[parent(param__f,
  i)])).us_split_fields7).rec__tree_model__path_type__k = true)) then ((((result[i])).us_split_fields7).rec__tree_model__path_type__k = true) else (not ((((result[i])).us_split_fields7).rec__tree_model__path_type__k = true))))))) and
  (forall i:int. (((1 <= i) and (i <= 100)) ->
  (if (((((result[i])).us_split_fields7).rec__tree_model__path_type__k = true) and
  (not (i = param__root))) then (is_add((((result[parent(param__f,
  i)])).us_split_fields7).rec__tree_model__path_type__a, position(param__f,
  i),
  (((result[i])).us_split_fields7).rec__tree_model__path_type__a) = true) else (last((((result[i])).us_split_fields7).rec__tree_model__path_type__a) = 0))))) and
  (forall i:int. (((1 <= i) and (i <= 100)) ->
  (((((result[i])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  ((((((result[j])).us_split_fields7).rec__tree_model__path_type__k = true) and
  (oeq((((result[i])).us_split_fields7).rec__tree_model__path_type__a,
  (((result[j])).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
  (j = i)))))))) and dynamic_invariant(result, true, false, true, true))))))

axiom peek__post_axiom :
  (forall param__f:us_rep1.
  (forall param__i:int. forall param__d:int [peek(param__f, param__i,
  param__d)]. (((dynamic_invariant2(param__f, true, false, true, true) and
  in_range6(param__i)) and in_range5(param__d)) -> (let result =
  peek(param__f, param__i, param__d) : int in
  (((if (not (result = 0)) then ((position(param__f, result) = param__d) and
  (parent(param__f,
  result) = param__i)) else (forall j:int. (((1 <= j) and (j <= 100)) ->
                            ((parent(param__f, j) = param__i) ->
                            (not (position(param__f, j) = param__d)))))) and
  (forall j:int. (((1 <= j) and (j <= 100)) -> (((parent(param__f,
  j) = param__i) and (position(param__f, j) = param__d)) -> (result = j))))) and
  in_range2(result))))))

axiom ordered_prefix__post_axiom :
  (forall param__model:(int,us_rep4) farray.
  (forall param__values:(int,natural) farray.
  (forall param__i:int. forall param__j:int [ordered_prefix(param__model,
  param__values, param__i, param__j)]. ((((dynamic_invariant(param__model,
  true, false, true, true) and in_range6(param__i)) and
  in_range6(param__j)) and
  ((((((param__model[param__i])).us_split_fields7).rec__tree_model__path_type__k = true) and
  ((((param__model[param__j])).us_split_fields7).rec__tree_model__path_type__k = true)) and
  (olt((((param__model[param__i])).us_split_fields7).rec__tree_model__path_type__a,
  (((param__model[param__j])).us_split_fields7).rec__tree_model__path_type__a) = true))) ->
  in_range(to_int(ordered_prefix(param__model, param__values, param__i,
  param__j)))))))

axiom ordered_prefix__def_axiom :
  (forall param__model:(int,us_rep4) farray.
  (forall param__values:(int,natural) farray.
  (forall param__i:int. forall param__j:int [ordered_prefix(param__model,
  param__values, param__i, param__j)]. ((ordered_prefix(param__model,
  param__values, param__i, param__j) = true) <->
  (if (get((((param__model[param__j])).us_split_fields7).rec__tree_model__path_type__a,
  (last((((param__model[param__i])).us_split_fields7).rec__tree_model__path_type__a) + 1)) = 0) then (to_rep((param__values[param__j])) <  to_rep((param__values[param__i]))) else (to_rep((param__values[param__i])) <  to_rep((param__values[param__j]))))))))

axiom ordered_leafs__post_axiom :
  (forall param__f:us_rep1.
  (forall param__root:int.
  (forall param__values:(int,natural) farray [ordered_leafs(param__f,
  param__root, param__values)]. (((dynamic_invariant2(param__f, true, false,
  true, true) and in_range6(param__root)) and (valid_root(param__f,
  param__root) = true)) -> in_range(to_int(ordered_leafs(param__f,
  param__root, param__values)))))))

axiom ordered_leafs__def_axiom :
  (forall param__f:us_rep1.
  (forall param__root:int.
  (forall param__values:(int,natural) farray [ordered_leafs(param__f,
  param__root, param__values)]. ((ordered_leafs(param__f, param__root,
  param__values) = true) <->
  (forall i:int. (((1 <= i) and (i <= 100)) ->
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  (((((((let temp___517qtunused = model(param__f, param__root)
  : (int,us_rep4) farray in (model(param__f,
  param__root)[i]))).us_split_fields7).rec__tree_model__path_type__k = true) and
  ((((let temp___518qtunused = model(param__f, param__root)
  : (int,us_rep4) farray in (model(param__f,
  param__root)[j]))).us_split_fields7).rec__tree_model__path_type__k = true)) and
  (olt((((let temp___519qtunused = model(param__f, param__root)
  : (int,us_rep4) farray in (model(param__f,
  param__root)[i]))).us_split_fields7).rec__tree_model__path_type__a,
  (((let temp___520qtunused = model(param__f, param__root)
  : (int,us_rep4) farray in (model(param__f,
  param__root)[j]))).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
  (ordered_prefix(model(param__f, param__root), param__values, i,
  j) = true))))))))))

axiom tree_structure__post_axiom : true

 (* "search_trees.adb", line 1335, characters 0-0 *)
goal defqtvc :
  (forall i:int. forall t_old__split_fields:us_split_fields4.
  (in_range1(v) -> (dynamic_invariant1({ us_split_fields5 =
  t_old__split_fields }, true, false, true, true) -> (dynamic_invariant1(t,
  true, false, true, true) -> (in_range6(l) -> (in_range5(d) ->
  (in_range1(v) -> (in_range2(i) -> (type_invariant({ us_split_fields5 =
  t_old__split_fields }) ->
  ((((((((((((((((((0 <  size((t_old__split_fields).rec__search_trees__search_tree__struct)) and
  (not (to_rep(((t_old__split_fields).rec__search_trees__search_tree__values[l])) = v))) and
  ((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root))[l])).us_split_fields7).rec__tree_model__path_type__k = true)) and
  (if (v <  to_rep(((t_old__split_fields).rec__search_trees__search_tree__values[l]))) then (d = 0) else (d = 1))) and
  (peek((t_old__split_fields).rec__search_trees__search_tree__struct, l,
  d) = 0)) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root))[i1])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  ((olt((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root))[i1])).us_split_fields7).rec__tree_model__path_type__a,
  (((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root))[l])).us_split_fields7).rec__tree_model__path_type__a) = true) ->
  (if (get((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root))[l])).us_split_fields7).rec__tree_model__path_type__a,
  (last((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root))[i1])).us_split_fields7).rec__tree_model__path_type__a) + 1)) = 0) then (v <  to_rep(((t_old__split_fields).rec__search_trees__search_tree__values[i1]))) else (to_rep(((t_old__split_fields).rec__search_trees__search_tree__values[i1])) <  v))))))) and
  (size(((t).us_split_fields5).rec__search_trees__search_tree__struct) = (size((t_old__split_fields).rec__search_trees__search_tree__struct) + 1))) and
  (to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root) = to_rep1((t_old__split_fields).rec__search_trees__search_tree__root))) and
  (valid_root(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root)) = true)) and
  (not (i = 0))) and
  (peek(((t).us_split_fields5).rec__search_trees__search_tree__struct, l,
  d) = i)) and
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  (((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  (((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true) or
  (j = i)))))) and
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  (((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  ((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true))))) and
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  (((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  (oeq((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a,
  (((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a) = true))))) and
  (is_add((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[l])).us_split_fields7).rec__tree_model__path_type__a,
  d, (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[i])).us_split_fields7).rec__tree_model__path_type__a) = true)) and
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  (((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  (to_rep((((t).us_split_fields5).rec__search_trees__search_tree__values[j])) = to_rep(((t_old__split_fields).rec__search_trees__search_tree__values[j]))))))) and
  (to_rep((((t).us_split_fields5).rec__search_trees__search_tree__values[i])) = v)) ->
  (forall ki:int. ((ki = 1) -> ((andb((if (1 <= ki) then true else false),
  (if (ki <= 100) then true else false)) = true) ->
  (forall spark__branch:bool.
  (((spark__branch = (if (ki = i) then true else false)) and
  (if (spark__branch = true) then (let o = l : int in
  (exists o1:int.
  ((to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root) = o1) and
  (in_range6(o1) and (let o2 =
  (t_old__split_fields).rec__search_trees__search_tree__struct : us_rep1 in
  ((forall j:int. (((1 <= j) and (j <= 100)) -> ((((((model(o2,
   o1)[j])).us_split_fields7).rec__tree_model__path_type__k = true) and
   (olt((((model(o2,
   o1)[o])).us_split_fields7).rec__tree_model__path_type__a, (((model(o2,
   o1)[j])).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
   (not (get((((model(o2,
   o1)[j])).us_split_fields7).rec__tree_model__path_type__a,
   (last((((model(o2,
   o1)[o])).us_split_fields7).rec__tree_model__path_type__a) + 1)) = d))))) and
  ((forall j:int. (((1 <= j) and (j <= 100)) ->
   ((((((model((t_old__split_fields).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true) and
   (olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[l])).us_split_fields7).rec__tree_model__path_type__a,
   (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
   (not (get((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a,
   (last((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[l])).us_split_fields7).rec__tree_model__path_type__a) + 1)) = d))))) and
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  (((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  (not (olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[i])).us_split_fields7).rec__tree_model__path_type__a,
  (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a) = true)))))))))))) else (
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  ((((((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki])).us_split_fields7).rec__tree_model__path_type__k = true) and
  ((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true)) and
  (not (j = i))) and
  (olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki])).us_split_fields7).rec__tree_model__path_type__a,
  (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
  (ordered_prefix(model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root)),
  (t_old__split_fields).rec__search_trees__search_tree__values, ki,
  j) = true)))) and
  ((((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki])).us_split_fields7).rec__tree_model__path_type__k = true) ->
  ((olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki])).us_split_fields7).rec__tree_model__path_type__a,
  (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[i])).us_split_fields7).rec__tree_model__path_type__a) = true) ->
  ((ki = l) or
  (olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki])).us_split_fields7).rec__tree_model__path_type__a,
  (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[l])).us_split_fields7).rec__tree_model__path_type__a) = true)))) and
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  ((((((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki])).us_split_fields7).rec__tree_model__path_type__k = true) and
  (not (ki = l))) and
  ((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true)) and
  (olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki])).us_split_fields7).rec__tree_model__path_type__a,
  (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
  (ordered_prefix(model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root)),
  ((t).us_split_fields5).rec__search_trees__search_tree__values, ki,
  j) = true)))))))) ->
  (forall ki1:int.
  ((forall i1:int. (((1 <= i1) and (i1 <= ki1)) ->
   (forall j:int. (((1 <= j) and (j <= 100)) ->
   (((((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[i1])).us_split_fields7).rec__tree_model__path_type__k = true) and
   ((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true)) and
   (olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[i1])).us_split_fields7).rec__tree_model__path_type__a,
   (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
   (ordered_prefix(model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
   to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root)),
   ((t).us_split_fields5).rec__search_trees__search_tree__values, i1,
   j) = true)))))) ->
  (((1 <= ki1) and (ki1 <= 100)) -> ((not (ki1 = 100)) ->
  (forall ki2:int. ((ki2 = (ki1 + 1)) ->
  (forall spark__branch1:bool.
  ((spark__branch1 = (if (ki2 = i) then true else false)) ->
  ((not (spark__branch1 = true)) ->
  (forall j:int. (((1 <= j) and (j <= 100)) ->
  ((((((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki2])).us_split_fields7).rec__tree_model__path_type__k = true) and
  ((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__k = true)) and
  (not (j = i))) and
  (olt((((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[ki2])).us_split_fields7).rec__tree_model__path_type__a,
  (((model(((t).us_split_fields5).rec__search_trees__search_tree__struct,
  to_rep1(((t).us_split_fields5).rec__search_trees__search_tree__root))[j])).us_split_fields7).rec__tree_model__path_type__a) = true)) ->
  (ordered_prefix(model((t_old__split_fields).rec__search_trees__search_tree__struct,
  to_rep1((t_old__split_fields).rec__search_trees__search_tree__root)),
  (t_old__split_fields).rec__search_trees__search_tree__values, ki2,
  j) = true))))))))))))))))))))))))))))
