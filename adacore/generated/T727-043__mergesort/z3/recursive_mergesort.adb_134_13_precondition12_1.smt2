;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                               (of_rep x))) )))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

(declare-sort us_rep 0)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const dummy us_rep)

;; "oeq"
(declare-fun oeq (us_rep
  us_rep) Bool)

;; "has_key"
(declare-fun has_key (us_rep
  Int) Bool)

;; "get"
(declare-fun get (us_rep
  Int) Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const dummy1 us_rep)

;; "keys_included"
(declare-fun keys_included (us_rep
  us_rep) Bool)

;; "is_add"
(declare-fun is_add (us_rep
  Int
  us_rep) Bool)

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483646)))

(declare-datatypes ()
  ((map__ref (map__refqtmk (map__content (Array Int integer))))))

;; "slide"
(declare-fun slide ((Array Int integer)
  Int
  Int) (Array Int integer))

;; "slide_eq"
(assert
  (forall ((a (Array Int integer)))
    (forall ((first Int))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; "slide_def"
(assert
  (forall ((a (Array Int integer)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

(declare-datatypes ()
  ((t (tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep (rec__first (mk f l))) f)
             (= (to_rep (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range low)
    (and
      (in_range high)
      (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ()
  ((us_t (us_tqtmk (elts (Array Int integer))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array Int integer)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

;; "first"
(define-fun first ((a us_t)) Int
  (to_rep (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) Int
  (to_rep (rec__last (rt a))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment2))

;; "occurrences"
(declare-fun occurrences (us_t
  Int
  Int) us_rep)

;; "occurrences__function_guard"
(declare-fun occurrences__function_guard (us_rep
  us_t
  Int
  Int) Bool)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-const dummy2 Int)

;; "length"
(declare-fun length (us_rep) Int)

;; "is_empty"
(declare-fun is_empty (us_rep) Bool)

;; "is_sorted"
(define-fun is_sorted ((param__a us_t)) Bool
  (ite (forall ((i Int))
         (=>
           (and (<= (first param__a) i) (<= i (last param__a)))
           (forall ((j Int))
             (=>
               (and (<= (first param__a) j) (<= j (last param__a)))
               (=>
                 (<= i j)
                 (<= (to_rep (select (to_array param__a) i)) (to_rep
                                                               (select 
                                                               (to_array
                                                                 param__a) j))))))))
    true
    false))

(declare-const a__first integer)

(declare-const a__last integer)

(declare-const l Int)

(declare-const m Int)

(declare-const r Int)

(declare-const n1 Int)

(declare-const n2 Int)

(declare-const a_copy us_t)

(declare-const a_iterm__first integer)

(declare-const a_iterm__last integer)

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_228 us_t) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool
  (=>
    (not (= temp___skip_constant_225 true))
    (dynamic_property
      1
      2147483646
      (first temp___expr_228)
      (last temp___expr_228))))

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_531 us_t) (temp___is_init_527 Bool) (temp___skip_constant_528 Bool) (temp___do_toplevel_529 Bool) (temp___do_typ_inv_530 Bool)) Bool
  (=>
    (not (= temp___skip_constant_528 true))
    (and
      (and
        (dynamic_property
          (to_rep a__first)
          (to_rep a__last)
          (first temp___expr_531)
          (last temp___expr_531))
        (= (first temp___expr_531) (to_rep a__first)))
      (= (last temp___expr_531) (to_rep a__last)))))

;; "default_initial_assumption"
(define-fun default_initial_assumption ((temp___expr_537 us_t) (temp___skip_top_level_538 Bool)) Bool
  (and
    (= (first temp___expr_537) (to_rep a__first))
    (= (last temp___expr_537) (to_rep a__last))))

;; "ole"
(declare-fun ole (us_rep
  us_rep) Bool)

;; "same_keys"
(define-fun same_keys ((param__left us_rep) (param__right us_rep)) Bool
  (and (keys_included param__left param__right) (keys_included
                                                  param__right
                                                  param__left)))

;; "keys_included_except"
(declare-fun keys_included_except (us_rep
  us_rep
  Int) Bool)

;; "elements_equal_except"
(declare-fun elements_equal_except (us_rep
  us_rep
  Int) Bool)

;; "dynamic_invariant"
(define-fun dynamic_invariant2 ((temp___expr_266 Int) (temp___is_init_262 Bool) (temp___skip_constant_263 Bool) (temp___do_toplevel_264 Bool) (temp___do_typ_inv_265 Bool)) Bool
  (=>
    (= temp___is_init_262 true)
    (=> (= temp___do_toplevel_264 true) (<= 0 temp___expr_266))))

;; "has_key__post_axiom"
(assert true)

;; "lemma_has_key_equivalent__post_axiom"
(assert
  (forall ((param__container us_rep))
    (forall ((param__key Int))
      (=>
        (and
          (in_range param__key)
          (and
            (= (distinct 1 0) true)
            (not (= (has_key param__container param__key) true))))
        (forall ((k Int))
          (=>
            (and (in_range k) (= (has_key param__container k) true))
            (not (= param__key k))))))))

;; "get__post_axiom"
(assert
  (forall ((param__container us_rep))
    (forall ((param__key Int))
      (! (=>
           (and
             (in_range param__key)
             (= (has_key param__container param__key) true))
           (in_range2 (get param__container param__key))) :pattern ((get
                                                                    param__container
                                                                    param__key)) ))))

;; "lemma_get_equivalent__post_axiom"
(assert
  (forall ((param__container us_rep))
    (forall ((param__key_1 Int) (param__key_2 Int))
      (=>
        (and
          (and (in_range param__key_1) (in_range param__key_2))
          (and
            (and (= (distinct 1 0) true) (= param__key_1 param__key_2))
            (or
              (= (has_key param__container param__key_1) true)
              (= (has_key param__container param__key_2) true))))
        (= (get param__container param__key_1) (get
                                                 param__container
                                                 param__key_2))))))

;; "length__post_axiom"
(assert
  (forall ((param__container us_rep))
    (! (dynamic_invariant2 (length param__container) true false true true) :pattern (
    (length
      param__container)) )))

;; "is_empty__post_axiom"
(assert
  (forall ((param__container us_rep))
    (! (let ((result (is_empty param__container)))
         (and
           (=
             (= result true)
             (forall ((key Int))
               (not
                 (and (in_range key) (= (has_key param__container key) true)))))
           (= (= result true) (= (length param__container) 0)))) :pattern (
    (is_empty
      param__container)) )))

;; "ole__post_axiom"
(assert
  (forall ((param__left us_rep) (param__right us_rep))
    (! (=
         (= (ole param__left param__right) true)
         (forall ((key Int))
           (=>
             (and (in_range key) (= (has_key param__left key) true))
             (and
               (= (has_key param__right key) true)
               (= (get param__right key) (get param__left key)))))) :pattern (
    (ole
      param__left
      param__right)) )))

;; "oeq__post_axiom"
(assert
  (forall ((param__left us_rep) (param__right us_rep))
    (! (=
         (= (oeq param__left param__right) true)
         (and
           (forall ((key Int))
             (=>
               (and (in_range key) (= (has_key param__left key) true))
               (and
                 (= (has_key param__right key) true)
                 (= (get param__right key) (get param__left key)))))
           (forall ((key Int))
             (=>
               (and (in_range key) (= (has_key param__right key) true))
               (= (has_key param__left key) true))))) :pattern ((oeq
                                                                  param__left
                                                                  param__right)) )))

;; "keys_included__post_axiom"
(assert
  (forall ((param__left us_rep) (param__right us_rep))
    (! (=
         (= (keys_included param__left param__right) true)
         (forall ((key Int))
           (=>
             (and (in_range key) (= (has_key param__left key) true))
             (= (has_key param__right key) true)))) :pattern ((keys_included
                                                                param__left
                                                                param__right)) )))

;; "keys_included_except__post_axiom"
(assert
  (forall ((param__left us_rep) (param__right us_rep))
    (forall ((param__new_key Int))
      (! (=>
           (in_range param__new_key)
           (=
             (= (keys_included_except
                  param__left
                  param__right
                  param__new_key) true)
             (forall ((key Int))
               (=>
                 (and (in_range key) (= (has_key param__left key) true))
                 (=>
                   (not (= key param__new_key))
                   (= (has_key param__right key) true)))))) :pattern (
      (keys_included_except
        param__left
        param__right
        param__new_key)) ))))

;; "elements_equal_except__post_axiom"
(assert
  (forall ((param__left us_rep) (param__right us_rep))
    (forall ((param__new_key Int))
      (! (=>
           (in_range param__new_key)
           (=
             (= (elements_equal_except
                  param__left
                  param__right
                  param__new_key) true)
             (forall ((key Int))
               (=>
                 (and (in_range key) (= (has_key param__left key) true))
                 (=>
                   (not (= key param__new_key))
                   (and
                     (= (has_key param__right key) true)
                     (= (get param__left key) (get param__right key)))))))) :pattern (
      (elements_equal_except
        param__left
        param__right
        param__new_key)) ))))

;; "is_add__post_axiom"
(assert true)

;; "is_add__def_axiom"
(assert
  (forall ((param__occ us_rep) (param__res us_rep))
    (forall ((param__k Int))
      (! (=
           (= (is_add param__occ param__k param__res) true)
           (ite (= (has_key param__occ param__k) true)
             (and
               (and
                 (= (same_keys param__res param__occ) true)
                 (= (- (get param__res param__k) 1) (get param__occ param__k)))
               (= (elements_equal_except param__res param__occ param__k) true))
             (and
               (and
                 (and
                   (= (has_key param__res param__k) true)
                   (= (get param__res param__k) 1))
                 (= (ole param__occ param__res) true))
               (= (keys_included_except param__res param__occ param__k) true)))) :pattern (
      (is_add
        param__occ
        param__k
        param__res)) ))))

;; "occurrences__post_axiom"
(assert
  (forall ((param__a us_t))
    (forall ((param__i Int) (param__j Int))
      (! (=>
           (and
             (and
               (and
                 (dynamic_invariant param__a true false true true)
                 (in_range2 param__i))
               (in_range1 param__j))
             (or
               (< param__j param__i)
               (and
                 (and
                   (<= (first param__a) param__i)
                   (<= param__i (last param__a)))
                 (and
                   (<= (first param__a) param__j)
                   (<= param__j (last param__a))))))
           (let ((result (occurrences param__a param__i param__j)))
             (and
               (forall ((temp___336 Int))
                 (occurrences__function_guard
                   (occurrences param__a param__i temp___336)
                   param__a
                   param__i
                   temp___336))
               (=>
                 (occurrences__function_guard
                   result
                   param__a
                   param__i
                   param__j)
                 (and
                   (or
                     (< param__j param__i)
                     (and
                       (<= (length result) (+ (- param__j param__i) 1))
                       (forall ((k Int))
                         (=>
                           (and (in_range k) (= (has_key result k) true))
                           (<= (get result k) (+ (- param__j param__i) 1))))))
                   (ite (< param__j param__i)
                     (and (= (is_empty result) true) (= (length result) 0))
                     (= (is_add
                          (let ((temp___336 (- param__j 1)))
                            (occurrences param__a param__i temp___336))
                          (to_rep (select (to_array param__a) param__j))
                          result) true))))))) :pattern ((occurrences
                                                          param__a
                                                          param__i
                                                          param__j)) ))))

(declare-const a (Array Int integer))

(declare-const a_iterm (Array Int integer))

;; "a_iterm'unused"
(define-fun a_itermqtunused () map__ref
  (map__refqtmk a_iterm))

;; "a'unused"
(define-fun aqtunused () map__ref
  (map__refqtmk a))

;; "a'unused"
(define-fun aqtunused1 () map__ref
  (map__refqtmk a))

;; "Assume"
(assert (dynamic_property 1 2147483646 (to_rep a__first) (to_rep a__last)))

;; "Assume"
(assert (in_range2 l))

;; "Assume"
(assert (in_range2 m))

;; "Assume"
(assert (in_range2 r))

;; "Assume"
(assert
  (and
    (and
      (and
        (and
          (and
            (and (<= (to_rep a__first) l) (<= l (to_rep a__last)))
            (and (<= (to_rep a__first) r) (<= r (to_rep a__last))))
          (<= l r))
        (and (<= l m) (<= m r)))
      (= (is_sorted (let ((temp___812 (of_array a l m))) (of_array a l m))) true))
    (= (is_sorted
         (let ((temp___816 (let ((temp___815 (+ m 1)))
                             (of_array a temp___815 r))))
           (let ((temp___815 (+ m 1))) (of_array a temp___815 r)))) true)))

(declare-const o Int)

;; "Ensures"
(assert (= (to_rep a__last) o))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused () Int
  o)

(declare-const o1 Int)

;; "Ensures"
(assert (= (to_rep a__first) o1))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused1 () Int
  o1)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused () (Array Int integer)
  a)

;; "temp___old_786"
(define-fun temp___old_786 () us_t
  (of_array a o1 o))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused () us_t
  temp___old_786)

(declare-const o2 Int)

;; "Ensures"
(assert (= (to_rep a__last) o2))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused2 () Int
  o2)

(declare-const o3 Int)

;; "Ensures"
(assert (= (to_rep a__first) o3))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused3 () Int
  o3)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused1 () (Array Int integer)
  a)

;; "temp___old_774"
(define-fun temp___old_774 () us_t
  (of_array a o3 o2))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused1 () us_t
  temp___old_774)

(declare-const o4 Int)

;; "Ensures"
(assert (= (to_rep a__last) o4))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused4 () Int
  o4)

(declare-const o5 Int)

;; "Ensures"
(assert (= (to_rep a__first) o5))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused5 () Int
  o5)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused2 () (Array Int integer)
  a)

;; "temp___old_765"
(define-fun temp___old_765 () us_t
  (of_array a o5 o4))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused2 () us_t
  temp___old_765)

(declare-const lii Int)

;; "lii'unused"
(define-fun liiqtunused () int__ref
  (int__refqtmk lii))

;; "H"
(assert (= lii 0))

;; "Assume"
(assert (in_range1 lii))

(declare-const rii Int)

;; "rii'unused"
(define-fun riiqtunused () int__ref
  (int__refqtmk rii))

;; "H"
(assert (= rii 0))

;; "Assume"
(assert (in_range1 rii))

(declare-const aii Int)

;; "aii'unused"
(define-fun aiiqtunused () int__ref
  (int__refqtmk aii))

;; "H"
(assert (= aii 0))

;; "Assume"
(assert (in_range1 aii))

;; "o"
(define-fun o6 () Int
  (- m l))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused () Int
  o6)

;; "o"
(define-fun o7 () Int
  (+ o6 1))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused () Int
  o7)

;; "Ensures"
(assert (in_range o7))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused () Int
  o7)

;; "recursive_mergesort__merge__n1__assume'unused"
(define-fun recursive_mergesort__merge__n1__assumeqtunused () Int
  o7)

;; "Ensures"
(assert (in_range2 o7))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused1 () Int
  o7)

;; "Assume"
(assert (= o7 n1))

;; "Assume"
(assert (in_range2 n1))

;; "o"
(define-fun o8 () Int
  (- r m))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused1 () Int
  o8)

;; "recursive_mergesort__merge__n2__assume'unused"
(define-fun recursive_mergesort__merge__n2__assumeqtunused () Int
  o8)

;; "Ensures"
(assert (in_range1 o8))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused2 () Int
  o8)

;; "Assume"
(assert (= o8 n2))

;; "Assume"
(assert (in_range1 n2))

(declare-const o9 Int)

;; "Ensures"
(assert (= (to_rep a__last) o9))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused6 () Int
  o9)

(declare-const o10 Int)

;; "Ensures"
(assert (= (to_rep a__first) o10))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused7 () Int
  o10)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused3 () (Array Int integer)
  a)

;; "temp___595"
(define-fun temp___595 () us_t
  (of_array a o10 o9))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused3 () us_t
  temp___595)

;; "temp___596"
(define-fun temp___596 () (Array Int integer)
  a)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused () (Array Int integer)
  temp___596)

;; "o"
(define-fun o11 () Int
  o9)

;; "last'result'unused"
(define-fun lastqtresultqtunused () Int
  o11)

;; "o"
(define-fun o12 () Int
  o10)

;; "first'result'unused"
(define-fun firstqtresultqtunused () Int
  o12)

;; "recursive_mergesort__merge__a_copy__assume"
(define-fun recursive_mergesort__merge__a_copy__assume () us_t
  (of_array temp___596 o12 o11))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused4 () us_t
  recursive_mergesort__merge__a_copy__assume)

;; "Assume"
(assert (= recursive_mergesort__merge__a_copy__assume a_copy))

;; "Assume"
(assert (dynamic_invariant a_copy true false true true))

;; "Assume"
(assert
  (default_initial_assumption
    (of_array a_iterm (to_rep a_iterm__first) (to_rep a_iterm__last))
    false))

;; "Assume"
(assert
  (dynamic_invariant1
    (of_array a_iterm (to_rep a_iterm__first) (to_rep a_iterm__last))
    false
    false
    true
    true))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  rii)

;; "o"
(define-fun o13 () Bool
  (ite (< rii n2) true false))

;; "infix <'result'unused"
(define-fun infix_lsqtresultqtunused () Bool
  o13)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  lii)

;; "o"
(define-fun o14 () Bool
  (ite (< lii n1) true false))

;; "infix <'result'unused"
(define-fun infix_lsqtresultqtunused1 () Bool
  o14)

;; "o"
(define-fun o15 () Bool
  (or o14 o13))

;; "orb'result'unused"
(define-fun orbqtresultqtunused () Bool
  o15)

;; "H"
(assert (= o15 true))

(declare-const o16 Int)

;; "Ensures"
(assert (= (to_rep a_iterm__last) o16))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused8 () Int
  o16)

(declare-const o17 Int)

;; "Ensures"
(assert (= (to_rep a_iterm__first) o17))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused9 () Int
  o17)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused4 () (Array Int integer)
  a_iterm)

;; "temp___loop_entry_661'unused"
(define-fun temp___loop_entry_661qtunused () us_t
  (of_array a_iterm o17 o16))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused5 () us_t
  (of_array a_iterm o17 o16))

;; "temp___loop_entry_660'unused"
(define-fun temp___loop_entry_660qtunused () Int
  aii)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused2 () Int
  aii)

;; "temp___loop_entry_659'unused"
(define-fun temp___loop_entry_659qtunused () Int
  rii)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  rii)

;; "temp___loop_entry_658'unused"
(define-fun temp___loop_entry_658qtunused () Int
  lii)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused4 () Int
  lii)

(declare-const o18 Int)

;; "Ensures"
(assert (= (to_rep a__last) o18))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused10 () Int
  o18)

(declare-const o19 Int)

;; "Ensures"
(assert (= (to_rep a__first) o19))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused11 () Int
  o19)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused5 () (Array Int integer)
  a)

;; "temp___loop_entry_656"
(define-fun temp___loop_entry_656 () us_t
  (of_array a o19 o18))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused6 () us_t
  temp___loop_entry_656)

(declare-const o20 Bool)

(declare-const int__contentqtresultqtunused5 Int)

;; "H"
(assert (= int__contentqtresultqtunused5 rii))

(declare-const infix_eqqtresultqtunused Bool)

;; "H"
(assert (= infix_eqqtresultqtunused (ite (= rii n2) true false)))

(declare-const int__contentqtresultqtunused6 Int)

(declare-const infix_lsqtresultqtunused2 Bool)

(declare-const int__contentqtresultqtunused7 Int)

(declare-const o21 Int)

(declare-const infix_plqtresultqtunused1 Int)

(declare-const range_check_qtresultqtunused3 Int)

(declare-const o22 Int)

(declare-const infix_plqtresultqtunused2 Int)

(declare-const range_check_qtresultqtunused4 Int)

(declare-const o23 (Array Int integer))

(declare-const to_arrayqtresultqtunused1 (Array Int integer))

(declare-const o24 integer)

(declare-const getqtresultqtunused integer)

(declare-const o25 Int)

(declare-const to_repqtresultqtunused12 Int)

(declare-const int__contentqtresultqtunused8 Int)

(declare-const o26 Int)

(declare-const infix_plqtresultqtunused3 Int)

(declare-const range_check_qtresultqtunused5 Int)

(declare-const o27 (Array Int integer))

(declare-const to_arrayqtresultqtunused2 (Array Int integer))

(declare-const o28 integer)

(declare-const getqtresultqtunused1 integer)

(declare-const o29 Int)

(declare-const to_repqtresultqtunused13 Int)

(declare-const infix_lseqqtresultqtunused Bool)

;; "H"
(assert
  (ite (= rii n2)
    (= o20 true)
    (and
      (= int__contentqtresultqtunused6 lii)
      (and
        (= infix_lsqtresultqtunused2 (ite (< lii n1) true false))
        (ite (< lii n1)
          (and
            (= int__contentqtresultqtunused7 rii)
            (and
              (= o21 (+ m 1))
              (and
                (= infix_plqtresultqtunused1 o21)
                (and
                  (in_range o21)
                  (and
                    (= range_check_qtresultqtunused3 o21)
                    (and
                      (= o22 (+ o21 rii))
                      (and
                        (= infix_plqtresultqtunused2 o22)
                        (and
                          (in_range o22)
                          (and
                            (= range_check_qtresultqtunused4 o22)
                            (and
                              (and
                                (<= (first a_copy) o22)
                                (<= o22 (last a_copy)))
                              (and
                                (= o23 (to_array a_copy))
                                (and
                                  (= to_arrayqtresultqtunused1 o23)
                                  (and
                                    (= o24 (select o23 o22))
                                    (and
                                      (= getqtresultqtunused o24)
                                      (and
                                        (= (to_rep o24) o25)
                                        (and
                                          (= to_repqtresultqtunused12 
                                          o25)
                                          (and
                                            (= int__contentqtresultqtunused8 
                                            lii)
                                            (and
                                              (= o26 (+ l lii))
                                              (and
                                                (= infix_plqtresultqtunused3 
                                                o26)
                                                (and
                                                  (in_range o26)
                                                  (and
                                                    (= range_check_qtresultqtunused5 
                                                    o26)
                                                    (and
                                                      (and
                                                        (<= (first a_copy) 
                                                        o26)
                                                        (<= o26 (last a_copy)))
                                                      (and
                                                        (= o27 (to_array
                                                                 a_copy))
                                                        (and
                                                          (= to_arrayqtresultqtunused2 
                                                          o27)
                                                          (and
                                                            (= o28 (select 
                                                            o27 o26))
                                                            (and
                                                              (= getqtresultqtunused1 
                                                              o28)
                                                              (and
                                                                (= (to_rep
                                                                    o28) 
                                                                o29)
                                                                (and
                                                                  (= 
                                                                  to_repqtresultqtunused13 
                                                                  o29)
                                                                  (and
                                                                    (= 
                                                                    o20 
                                                                    (ite (<= 
                                                                    o29 
                                                                    o25)
                                                                    true
                                                                    false))
                                                                    (= 
                                                                    infix_lseqqtresultqtunused 
                                                                    o20))))))))))))))))))))))))))))))
          (= o20 false))))))

(declare-const spark__branch Bool)

;; "spark__branch'unused"
(define-fun spark__branchqtunused () bool__ref
  (bool__refqtmk spark__branch))

;; "H"
(assert (= spark__branch o20))

;; "bool__content'result'unused"
(define-fun bool__contentqtresultqtunused () Bool
  spark__branch)

;; "H"
(assert (= spark__branch true))

(declare-const o30 Int)

;; "Ensures"
(assert (= (to_rep a__last) o30))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused14 () Int
  o30)

(declare-const o31 Int)

;; "Ensures"
(assert (= (to_rep a__first) o31))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused15 () Int
  o31)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused6 () (Array Int integer)
  a)

;; "temp___603"
(define-fun temp___603 () us_t
  (of_array a o31 o30))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused7 () us_t
  temp___603)

(declare-const o32 Int)

;; "Ensures"
(assert (= (to_rep a__first) o32))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused16 () Int
  o32)

;; "o"
(define-fun o33 () Int
  o31)

;; "first'result'unused"
(define-fun firstqtresultqtunused1 () Int
  o33)

;; "o"
(define-fun o34 () (Array Int integer)
  a)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused3 () (Array Int integer)
  o34)

;; "temp___607"
(define-fun temp___607 () (Array Int integer)
  (slide o34 o33 o32))

;; "slide'result'unused"
(define-fun slideqtresultqtunused () (Array Int integer)
  temp___607)

;; "Assert"
(assert
  (ite (<= o31 o30)
    (and
      (<= (to_rep a__first) (to_rep a__last))
      (= (- o30 o31) (- (to_rep a__last) (to_rep a__first))))
    (< (to_rep a__last) (to_rep a__first))))

(declare-const o35 Int)

;; "Ensures"
(assert (= (to_rep a__last) o35))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused17 () Int
  o35)

(declare-const o36 Int)

;; "Ensures"
(assert (= (to_rep a__first) o36))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused18 () Int
  o36)

;; "temp___610"
(define-fun temp___610 () us_t
  (of_array temp___607 o36 o35))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused8 () us_t
  temp___610)

(declare-const o37 Int)

;; "Ensures"
(assert (= (to_rep a_iterm__last) o37))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused19 () Int
  o37)

(declare-const o38 Int)

;; "Ensures"
(assert (= (to_rep a_iterm__first) o38))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused20 () Int
  o38)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused7 () (Array Int integer)
  a_iterm)

;; "temp___611"
(define-fun temp___611 () us_t
  (of_array a_iterm o38 o37))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused9 () us_t
  temp___611)

;; "Assert"
(assert
  (ite (<= o36 o35)
    (and (<= o38 o37) (= (- o35 o36) (- o37 o38)))
    (< o37 o38)))

;; "o"
(define-fun o39 () (Array Int integer)
  temp___607)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused4 () (Array Int integer)
  o39)

(declare-const a_iterm1 (Array Int integer))

;; "a_iterm'unused"
(define-fun a_itermqtunused1 () map__ref
  (map__refqtmk a_iterm1))

;; "H"
(assert (= a_iterm1 o39))

(declare-const o40 Int)

;; "Ensures"
(assert (= (to_rep a__last) o40))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused21 () Int
  o40)

(declare-const o41 Int)

;; "Ensures"
(assert (= (to_rep a__first) o41))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused22 () Int
  o41)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused8 () (Array Int integer)
  a)

;; "temp___614"
(define-fun temp___614 () us_t
  (of_array a o41 o40))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused10 () us_t
  temp___614)

;; "o"
(define-fun o42 () t
  (rt temp___614))

;; "rt'result'unused"
(define-fun rtqtresultqtunused () t
  o42)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused9 () Int
  lii)

;; "o"
(define-fun o43 () Int
  (+ l lii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused4 () Int
  o43)

;; "Ensures"
(assert (in_range o43))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused6 () Int
  o43)

;; "Assert"
(assert (and (<= (first a_copy) o43) (<= o43 (last a_copy))))

;; "o"
(define-fun o44 () (Array Int integer)
  (to_array a_copy))

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused5 () (Array Int integer)
  o44)

;; "o"
(define-fun o45 () integer
  (select o44 o43))

;; "get'result'unused"
(define-fun getqtresultqtunused2 () integer
  o45)

(declare-const o46 Int)

;; "Ensures"
(assert (= (to_rep o45) o46))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused23 () Int
  o46)

(declare-const o47 integer)

;; "Ensures"
(assert (= (to_rep o47) o46))

;; "of_rep'result'unused"
(define-fun of_repqtresultqtunused () integer
  o47)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused10 () Int
  aii)

;; "o"
(define-fun o48 () Int
  (+ l aii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused5 () Int
  o48)

;; "Ensures"
(assert (in_range o48))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused7 () Int
  o48)

;; "Assert"
(assert (and (<= o41 o48) (<= o48 o40)))

;; "o"
(define-fun o49 () (Array Int integer)
  a)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused6 () (Array Int integer)
  o49)

;; "o"
(define-fun o50 () (Array Int integer)
  (store o49 o48 o47))

;; "set'result'unused"
(define-fun setqtresultqtunused () (Array Int integer)
  o50)

;; "o"
(define-fun o51 () us_t
  (us_tqtmk o50 o42))

;; "__t'mk'result'unused"
(define-fun us_tqtmkqtresultqtunused () us_t
  o51)

;; "o"
(define-fun o52 () (Array Int integer)
  (to_array o51))

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused7 () (Array Int integer)
  o52)

(declare-const a1 (Array Int integer))

;; "a'unused"
(define-fun aqtunused2 () map__ref
  (map__refqtmk a1))

;; "H"
(assert (= a1 o52))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused11 () Int
  aii)

;; "o"
(define-fun o53 () Int
  (+ l aii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused6 () Int
  o53)

;; "Ensures"
(assert (in_range o53))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused8 () Int
  o53)

;; "o"
(define-fun o54 () Int
  (- o53 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused2 () Int
  o54)

;; "o"
(define-fun o55 () Int
  l)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused12 () Int
  aii)

;; "o"
(define-fun o56 () Int
  (+ l aii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused7 () Int
  o56)

;; "Ensures"
(assert (in_range o56))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused9 () Int
  o56)

;; "o"
(define-fun o57 () Int
  (- o56 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused3 () Int
  o57)

;; "o"
(define-fun o58 () Int
  l)

(declare-const o59 Int)

;; "Ensures"
(assert (= (to_rep a_iterm__last) o59))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused24 () Int
  o59)

(declare-const o60 Int)

;; "Ensures"
(assert (= (to_rep a_iterm__first) o60))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused25 () Int
  o60)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused9 () (Array Int integer)
  a_iterm1)

;; "temp___619"
(define-fun temp___619 () us_t
  (of_array a_iterm1 o60 o59))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused11 () us_t
  temp___619)

;; "temp___620"
(define-fun temp___620 () (Array Int integer)
  a_iterm1)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused8 () (Array Int integer)
  temp___620)

;; "o"
(define-fun o61 () Int
  o59)

;; "last'result'unused"
(define-fun lastqtresultqtunused1 () Int
  o61)

;; "o"
(define-fun o62 () Int
  o60)

;; "first'result'unused"
(define-fun firstqtresultqtunused2 () Int
  o62)

;; "o"
(define-fun o63 () us_t
  (of_array temp___620 o62 o61))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused12 () us_t
  o63)

(declare-const o64 Int)

;; "Ensures"
(assert (= (to_rep a__last) o64))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused26 () Int
  o64)

(declare-const o65 Int)

;; "Ensures"
(assert (= (to_rep a__first) o65))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused27 () Int
  o65)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused10 () (Array Int integer)
  a1)

;; "temp___617"
(define-fun temp___617 () us_t
  (of_array a1 o65 o64))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused13 () us_t
  temp___617)

;; "temp___618"
(define-fun temp___618 () (Array Int integer)
  a1)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused9 () (Array Int integer)
  temp___618)

;; "o"
(define-fun o66 () Int
  o64)

;; "last'result'unused"
(define-fun lastqtresultqtunused2 () Int
  o66)

;; "o"
(define-fun o67 () Int
  o65)

;; "first'result'unused"
(define-fun firstqtresultqtunused3 () Int
  o67)

;; "o"
(define-fun o68 () us_t
  (of_array temp___618 o67 o66))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused14 () us_t
  o68)

;; "H"
(assert
  (forall ((o69 Int) (o70 Int) (o71 us_t))
    (occurrences__function_guard (occurrences o71 o70 o69) o71 o70 o69)))

;; "H"
(assert
  (forall ((o69 Int) (o70 Int) (o71 us_t))
    (occurrences__function_guard (occurrences o71 o70 o69) o71 o70 o69)))

;; "H"
(assert (= (oeq (occurrences o68 o58 o57) (occurrences o63 o55 o54)) true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert true)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused13 () Int
  lii)

;; "o"
(define-fun o69 () Int
  (+ l lii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused8 () Int
  o69)

;; "Ensures"
(assert (in_range o69))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused10 () Int
  o69)

;; "Assert"
(assert (and (<= (first a_copy) o69) (<= o69 (last a_copy))))

;; "o"
(define-fun o70 () (Array Int integer)
  (to_array a_copy))

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused10 () (Array Int integer)
  o70)

;; "o"
(define-fun o71 () integer
  (select o70 o69))

;; "get'result'unused"
(define-fun getqtresultqtunused3 () integer
  o71)

(declare-const o72 Int)

;; "Ensures"
(assert (= (to_rep o71) o72))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused28 () Int
  o72)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused14 () Int
  aii)

;; "o"
(define-fun o73 () Int
  (+ l aii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused9 () Int
  o73)

;; "Ensures"
(assert (in_range o73))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused11 () Int
  o73)

;; "o"
(define-fun o74 () Int
  l)

(declare-const o75 Int)

;; "Ensures"
(assert (= (to_rep a__last) o75))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused29 () Int
  o75)

(declare-const o76 Int)

;; "Ensures"
(assert (= (to_rep a__first) o76))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused30 () Int
  o76)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused11 () (Array Int integer)
  a1)

;; "temp___623"
(define-fun temp___623 () us_t
  (of_array a1 o76 o75))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused15 () us_t
  temp___623)

;; "temp___624"
(define-fun temp___624 () (Array Int integer)
  a1)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused11 () (Array Int integer)
  temp___624)

;; "o"
(define-fun o77 () Int
  o75)

;; "last'result'unused"
(define-fun lastqtresultqtunused3 () Int
  o77)

;; "o"
(define-fun o78 () Int
  o76)

;; "first'result'unused"
(define-fun firstqtresultqtunused4 () Int
  o78)

;; "o"
(define-fun o79 () us_t
  (of_array temp___624 o78 o77))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused16 () us_t
  o79)

;; "o"
(define-fun o80 () us_rep
  (occurrences o79 o74 o73))

;; "H"
(assert
  (forall ((o81 Int) (o82 us_t) (temp___330 Int))
    (occurrences__function_guard
      (occurrences o82 o81 temp___330)
      o82
      o81
      temp___330)))

;; "H"
(assert (occurrences__function_guard o80 o79 o74 o73))

;; "H"
(assert true)

;; "H"
(assert
  (or
    (< o73 o74)
    (and
      (<= (length o80) (+ (- o73 o74) 1))
      (forall ((k Int))
        (=>
          (and (in_range k) (= (has_key o80 k) true))
          (<= (get o80 k) (+ (- o73 o74) 1)))))))

;; "H"
(assert
  (ite (= (< o73 o74) true)
    (and (= (is_empty o80) true) (= (length o80) 0))
    (= (is_add
         (let ((temp___330 (- o73 1))) (occurrences o79 o74 temp___330))
         (to_rep (select temp___624 o73))
         o80) true)))

;; "occurrences'result'unused"
(define-fun occurrencesqtresultqtunused () us_rep
  o80)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused15 () Int
  aii)

;; "o"
(define-fun o81 () Int
  (+ l aii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused10 () Int
  o81)

;; "Ensures"
(assert (in_range o81))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused12 () Int
  o81)

;; "o"
(define-fun o82 () Int
  (- o81 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused4 () Int
  o82)

;; "o"
(define-fun o83 () Int
  l)

(declare-const o84 Int)

;; "Ensures"
(assert (= (to_rep a__last) o84))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused31 () Int
  o84)

(declare-const o85 Int)

;; "Ensures"
(assert (= (to_rep a__first) o85))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused32 () Int
  o85)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused12 () (Array Int integer)
  a1)

;; "temp___621"
(define-fun temp___621 () us_t
  (of_array a1 o85 o84))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused17 () us_t
  temp___621)

;; "temp___622"
(define-fun temp___622 () (Array Int integer)
  a1)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused12 () (Array Int integer)
  temp___622)

;; "o"
(define-fun o86 () Int
  o84)

;; "last'result'unused"
(define-fun lastqtresultqtunused4 () Int
  o86)

;; "o"
(define-fun o87 () Int
  o85)

;; "first'result'unused"
(define-fun firstqtresultqtunused5 () Int
  o87)

;; "o"
(define-fun o88 () us_t
  (of_array temp___622 o87 o86))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused18 () us_t
  o88)

;; "o"
(define-fun o89 () us_rep
  (occurrences o88 o83 o82))

;; "H"
(assert
  (forall ((o90 Int) (o91 us_t) (temp___330 Int))
    (occurrences__function_guard
      (occurrences o91 o90 temp___330)
      o91
      o90
      temp___330)))

;; "H"
(assert (occurrences__function_guard o89 o88 o83 o82))

;; "H"
(assert true)

;; "H"
(assert
  (or
    (< o82 o83)
    (and
      (<= (length o89) (+ (- o82 o83) 1))
      (forall ((k Int))
        (=>
          (and (in_range k) (= (has_key o89 k) true))
          (<= (get o89 k) (+ (- o82 o83) 1)))))))

;; "H"
(assert
  (ite (= (< o82 o83) true)
    (and (= (is_empty o89) true) (= (length o89) 0))
    (= (is_add
         (let ((temp___330 (- o82 1))) (occurrences o88 o83 temp___330))
         (to_rep (select temp___622 o82))
         o89) true)))

;; "occurrences'result'unused"
(define-fun occurrencesqtresultqtunused1 () us_rep
  o89)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused16 () Int
  rii)

;; "o"
(define-fun o90 () Int
  (+ m 1))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused11 () Int
  o90)

;; "Ensures"
(assert (in_range o90))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused13 () Int
  o90)

;; "o"
(define-fun o91 () Int
  (+ o90 rii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused12 () Int
  o91)

;; "Ensures"
(assert (in_range o91))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused14 () Int
  o91)

;; "o"
(define-fun o92 () Int
  (- o91 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused5 () Int
  o92)

;; "o"
(define-fun o93 () Int
  (+ m 1))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused13 () Int
  o93)

;; "Ensures"
(assert (in_range o93))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused15 () Int
  o93)

;; "o"
(define-fun o94 () us_t
  a_copy)

;; "o"
(define-fun o95 () us_rep
  (occurrences o94 o93 o92))

;; "H"
(assert
  (forall ((o96 Int) (o97 us_t) (temp___330 Int))
    (occurrences__function_guard
      (occurrences o97 o96 temp___330)
      o97
      o96
      temp___330)))

;; "H"
(assert (occurrences__function_guard o95 o94 o93 o92))

;; "H"
(assert true)

;; "H"
(assert
  (or
    (< o92 o93)
    (and
      (<= (length o95) (+ (- o92 o93) 1))
      (forall ((k Int))
        (=>
          (and (in_range k) (= (has_key o95 k) true))
          (<= (get o95 k) (+ (- o92 o93) 1)))))))

;; "H"
(assert
  (ite (= (< o92 o93) true)
    (and (= (is_empty o95) true) (= (length o95) 0))
    (= (is_add
         (let ((temp___330 (- o92 1))) (occurrences o94 o93 temp___330))
         (to_rep (select (to_array o94) o92))
         o95) true)))

;; "occurrences'result'unused"
(define-fun occurrencesqtresultqtunused2 () us_rep
  o95)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused17 () Int
  lii)

;; "o"
(define-fun o96 () Int
  (+ l lii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused14 () Int
  o96)

;; "Ensures"
(assert (in_range o96))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused16 () Int
  o96)

;; "o"
(define-fun o97 () Int
  l)

;; "o"
(define-fun o98 () us_t
  a_copy)

;; "o"
(define-fun o99 () us_rep
  (occurrences o98 o97 o96))

;; "H"
(assert
  (forall ((o100 Int) (o101 us_t) (temp___330 Int))
    (occurrences__function_guard
      (occurrences o101 o100 temp___330)
      o101
      o100
      temp___330)))

;; "H"
(assert (occurrences__function_guard o99 o98 o97 o96))

;; "H"
(assert true)

;; "H"
(assert
  (or
    (< o96 o97)
    (and
      (<= (length o99) (+ (- o96 o97) 1))
      (forall ((k Int))
        (=>
          (and (in_range k) (= (has_key o99 k) true))
          (<= (get o99 k) (+ (- o96 o97) 1)))))))

;; "H"
(assert
  (ite (= (< o96 o97) true)
    (and (= (is_empty o99) true) (= (length o99) 0))
    (= (is_add
         (let ((temp___330 (- o96 1))) (occurrences o98 o97 temp___330))
         (to_rep (select (to_array o98) o96))
         o99) true)))

;; "occurrences'result'unused"
(define-fun occurrencesqtresultqtunused3 () us_rep
  o99)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused18 () Int
  lii)

;; "o"
(define-fun o100 () Int
  (+ l lii))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused15 () Int
  o100)

;; "Ensures"
(assert (in_range o100))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused17 () Int
  o100)

;; "o"
(define-fun o101 () Int
  (- o100 1))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused6 () Int
  o101)

;; "o"
(define-fun o102 () Int
  l)

;; "o"
(define-fun o103 () us_t
  a_copy)

;; "o"
(define-fun o104 () us_rep
  (occurrences o103 o102 o101))

;; "H"
(assert
  (forall ((o105 Int) (o106 us_t) (temp___330 Int))
    (occurrences__function_guard
      (occurrences o106 o105 temp___330)
      o106
      o105
      temp___330)))

;; "H"
(assert (occurrences__function_guard o104 o103 o102 o101))

;; "H"
(assert true)

;; "H"
(assert
  (or
    (< o101 o102)
    (and
      (<= (length o104) (+ (- o101 o102) 1))
      (forall ((k Int))
        (=>
          (and (in_range k) (= (has_key o104 k) true))
          (<= (get o104 k) (+ (- o101 o102) 1)))))))

;; "H"
(assert
  (ite (= (< o101 o102) true)
    (and (= (is_empty o104) true) (= (length o104) 0))
    (= (is_add
         (let ((temp___330 (- o101 1))) (occurrences o103 o102 temp___330))
         (to_rep (select (to_array o103) o101))
         o104) true)))

;; "occurrences'result'unused"
(define-fun occurrencesqtresultqtunused4 () us_rep
  o104)

;; "dummy"
(define-fun dummy3 () Bool
  true)

;; "H"
(assert (not (= (has_key o89 o72) true)))

;; Goal "def'vc"
;; File "recursive_mergesort.ads", line 92, characters 0-0
(assert
  (not (= (get o80 o72) 1)))

(check-sat)
