;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun __cdiv ((x Int) (y Int)) Int (ite (>= x 0) (div x y) (- (div (- x) y))))
(define-fun __cmod ((x Int) (y Int)) Int (ite (>= x 0) (mod x y) (- (mod (- x) y))))
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

;; "min"
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; "max"
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; "Min_r"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; "Max_l"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; "Min_comm"
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; "Max_comm"
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; "Min_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; "Max_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "mod"
(define-fun mod1 ((x Int) (y Int)) Int
  (ite (<= 0 y) (mod x y) (- (mod (- x) y))))

;; "is_prime"
(define-fun is_prime ((param__value Int)) Bool
  (and (>= param__value 2) (ite (forall ((v Int))
                                  (=>
                                    (and (<= 2 v) (<= v (- param__value 1)))
                                    (not (= (mod1 param__value v) 0))))
                             true
                             false)))

;; "valid_prime_data"
(declare-fun valid_prime_data ((Array Int Bool)) Bool)

;; "has_prime"
(declare-fun has_prime (Int
  Int) Bool)

;; "nearest_number"
(declare-fun nearest_number ((Array Int Bool)
  Int
  Int) Int)

;; "nearest_number__function_guard"
(declare-fun nearest_number__function_guard (Int
  (Array Int Bool)
  Int
  Int) Bool)

(declare-const value Int)

(declare-const mode Int)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2)))

;; "valid_prime_data__post_axiom"
(assert true)

;; "valid_prime_data__def_axiom"
(assert
  (forall ((Test_prime_and_coprime_numbers__p__set__is_prime___is_prime___ (Array Int Bool)))
    (! (=
         (= (valid_prime_data
              Test_prime_and_coprime_numbers__p__set__is_prime___is_prime___) true)
         (forall ((v Int))
           (=>
             (and (<= 0 v) (<= v 100000))
             (=
               (= (select Test_prime_and_coprime_numbers__p__set__is_prime___is_prime___ v) true)
               (= (is_prime v) true))))) :pattern ((valid_prime_data
                                                     Test_prime_and_coprime_numbers__p__set__is_prime___is_prime___)) )))

;; "has_prime__post_axiom"
(assert true)

;; "has_prime__def_axiom"
(assert
  (forall ((param__low Int) (param__high Int))
    (! (=
         (= (has_prime param__low param__high) true)
         (exists ((v Int))
           (and
             (and (<= param__low v) (<= v param__high))
             (= (is_prime v) true)))) :pattern ((has_prime
                                                  param__low
                                                  param__high)) )))

;; Goal "def'vc"
;; File "prime_and_coprime_numbers.ads", line 105, characters 0-0
(assert
  (not
  (forall ((is_prime1 (Array Int Bool)))
    (=>
      (in_range value)
      (=>
        (in_range1 mode)
        (=>
          (and
            (and
              (and (<= 0 value) (<= value 100000))
              (= (valid_prime_data is_prime1) true))
            (ite (= mode 0)
              (= (has_prime value 100000) true)
              (ite (= mode 1)
                (= (has_prime 0 value) true)
                (= (has_prime 0 100000) true))))
          (let ((o value))
            (=>
              (=
                (= (is_prime o) true)
                (and
                  (<= 2 o)
                  (forall ((v Int))
                    (=> (and (<= 2 v) (<= v (- o 1))) (not (= (mod1 o v) 0))))))
              (let ((o1 value))
                (=>
                  (=
                    (= (is_prime o1) true)
                    (and
                      (<= 2 o1)
                      (forall ((v Int))
                        (=>
                          (and (<= 2 v) (<= v (- o1 1)))
                          (not (= (mod1 o1 v) 0))))))
                  (let ((o2 value))
                    (let ((o3 (is_prime o2)))
                      (=>
                        (=
                          (= o3 true)
                          (and
                            (<= 2 o2)
                            (forall ((v Int))
                              (=>
                                (and (<= 2 v) (<= v (- o2 1)))
                                (not (= (mod1 o2 v) 0))))))
                        (let ((o4 value))
                          (let ((temp___273 (is_prime o4)))
                            (=>
                              (=
                                (= temp___273 true)
                                (and
                                  (<= 2 o4)
                                  (forall ((v Int))
                                    (=>
                                      (and (<= 2 v) (<= v (- o4 1)))
                                      (not (= (mod1 o4 v) 0))))))
                              (let ((o5 value))
                                (let ((o6 mode))
                                  (let ((o7 (nearest_number is_prime1 o6 o5)))
                                    (=>
                                      (and
                                        (nearest_number__function_guard
                                          o7
                                          is_prime1
                                          o6
                                          o5)
                                        (and
                                          (in_range o7)
                                          (and
                                            (and
                                              (and (<= 0 o7) (<= o7 100000))
                                              (= (select is_prime1 o7) true))
                                            (ite (= (= (ite (select is_prime1 o5) 1 0) (ite (distinct 1 0) 1 0)) true)
                                              (= o7 o5)
                                              (ite (= (and (= (ite (select is_prime1 o5) 1 0) (ite (distinct 0 0) 1 0)) (= o6 0)) true)
                                                (and
                                                  (< o5 o7)
                                                  (forall ((v Int))
                                                    (=>
                                                      (and
                                                        (<= o5 v)
                                                        (<= v (- o7 1)))
                                                      (not
                                                        (= (select is_prime1 v) true)))))
                                                (ite (= (and (= (ite (select is_prime1 o5) 1 0) (ite (distinct 0 0) 1 0)) (= o6 1)) true)
                                                  (and
                                                    (< o7 o5)
                                                    (forall ((v Int))
                                                      (=>
                                                        (and
                                                          (<= (+ o7 1) v)
                                                          (<= v o5))
                                                        (not
                                                          (= (select is_prime1 v) true)))))
                                                  (=>
                                                    (= (and (= (ite (select is_prime1 o5) 1 0) (ite (distinct 0 0) 1 0)) (= o6 2)) true)
                                                    (and
                                                      (forall ((v Int))
                                                        (=>
                                                          (and
                                                            (<= (max
                                                                  0
                                                                  (+ (- o5 (abs (- o5 o7))) 1)) v)
                                                            (<= v o5))
                                                          (not
                                                            (= (select is_prime1 v) true))))
                                                      (forall ((v Int))
                                                        (=>
                                                          (and
                                                            (<= o5 v)
                                                            (<= v (min
                                                                    100000
                                                                    (- (+ o5 (abs (- o5 o7))) 1))))
                                                          (not
                                                            (= (select is_prime1 v) true))))))))))))
                                      (forall ((test_prime_and_coprime_numbers__p__nearest_prime_number__result Int))
                                        (=>
                                          (= test_prime_and_coprime_numbers__p__nearest_prime_number__result o7)
                                          (=>
                                            (=>
                                              (= temp___273 true)
                                              (= test_prime_and_coprime_numbers__p__nearest_prime_number__result 
                                              value))
                                            (=>
                                              (= (and (ite (= o3 true)
                                                        false
                                                        true) (ite (= 
                                                                mode 0)
                                                                true
                                                                false)) true)
                                              (forall ((v Int))
                                                (=>
                                                  (and
                                                    (<= value v)
                                                    (<= v (- test_prime_and_coprime_numbers__p__nearest_prime_number__result 1)))
                                                  (not (= (is_prime v) true))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
