;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-sort element 0)

;; "element'int"
(declare-fun elementqtint (element) Int)

;; "element'axiom"
(assert
  (forall ((i element))
    (and (<= 0 (elementqtint i)) (<= (elementqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep ((x element)) Int
  (elementqtint x))

;; "of_rep"
(declare-fun of_rep (Int) element)

;; "inversion_axiom"
(assert
  (forall ((x element)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x element)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                               (of_rep x))) )))

;; "concat_singleton_right"
(declare-fun concat_singleton_right ((Array Int element)
  Int
  Int
  element) (Array Int element))

;; "concat_singleton_right_def"
(assert
  (forall ((a (Array Int element)))
    (forall ((b element))
      (forall ((a_first Int) (a_last Int))
        (! (and
             (=>
               (< a_last (+ a_last 1))
               (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b))
             (forall ((i Int))
               (! (=>
                    (and (<= a_first i) (<= i a_last))
                    (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select 
               (concat_singleton_right
                 a
                 a_first
                 a_last
                 b) i)) :pattern ((select a i)) ))) :pattern ((concat_singleton_right
                                                                a
                                                                a_first
                                                                a_last
                                                                b)) )))))

;; "singleton"
(declare-fun singleton1 (element
  Int) (Array Int element))

;; "singleton_def"
(assert
  (forall ((v element))
    (forall ((i Int))
      (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

;; "bool_eq"
(define-fun bool_eq ((a (Array Int element)) (a__first Int) (a__last Int) (b (Array Int element)) (b__first Int) (b__last Int)) Bool
  (ite (and
         (ite (<= a__first a__last)
           (and
             (<= b__first b__last)
             (= (- a__last a__first) (- b__last b__first)))
           (< b__last b__first))
         (forall ((temp___idx_168 Int))
           (=>
             (and (<= a__first temp___idx_168) (<= temp___idx_168 a__last))
             (= (to_rep (select a temp___idx_168)) (to_rep
                                                     (select b (+ (- b__first a__first) temp___idx_168)))))))
    true
    false))

;; "bool_eq_rev"
(assert
  (forall ((a (Array Int element)) (b (Array Int element)))
    (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
      (=>
        (= (bool_eq b b__first b__last a a__first a__last) true)
        (and
          (ite (<= a__first a__last)
            (and
              (<= b__first b__last)
              (= (- a__last a__first) (- b__last b__first)))
            (< b__last b__first))
          (forall ((temp___idx_168 Int))
            (=>
              (and (<= a__first temp___idx_168) (<= temp___idx_168 a__last))
              (= (to_rep (select a temp___idx_168)) (to_rep
                                                      (select b (+ (- b__first a__first) temp___idx_168)))))))))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-sort less_than_max 0)

;; "less_than_max'int"
(declare-fun less_than_maxqtint (less_than_max) Int)

;; "less_than_max'axiom"
(assert
  (forall ((i less_than_max))
    (and (<= 0 (less_than_maxqtint i)) (<= (less_than_maxqtint i) 100))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 100)))

;; "to_rep"
(define-fun to_rep1 ((x less_than_max)) Int
  (less_than_maxqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) less_than_max)

;; "inversion_axiom"
(assert
  (forall ((x less_than_max))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x less_than_max))
    (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-sort us_ext_type 0)

(declare-const null__ext__ us_ext_type)

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__stacks__stack_root__content (Array Int element))(rec__stacks__stack_root__length less_than_max)(rec__ext__ us_ext_type)))))

(declare-datatypes ()
  ((us_split_fields__ref
   (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const stacks__stack_root__content__first__bit Int)

(declare-const stacks__stack_root__content__last__bit Int)

(declare-const stacks__stack_root__content__position Int)

;; "stacks__stack_root__content__first__bit_axiom"
(assert (<= 0 stacks__stack_root__content__first__bit))

;; "stacks__stack_root__content__last__bit_axiom"
(assert
  (< stacks__stack_root__content__first__bit stacks__stack_root__content__last__bit))

;; "stacks__stack_root__content__position_axiom"
(assert (<= 0 stacks__stack_root__content__position))

(declare-const stacks__stack_root__length__first__bit Int)

(declare-const stacks__stack_root__length__last__bit Int)

(declare-const stacks__stack_root__length__position Int)

;; "stacks__stack_root__length__first__bit_axiom"
(assert (<= 0 stacks__stack_root__length__first__bit))

;; "stacks__stack_root__length__last__bit_axiom"
(assert
  (< stacks__stack_root__length__first__bit stacks__stack_root__length__last__bit))

;; "stacks__stack_root__length__position_axiom"
(assert (<= 0 stacks__stack_root__length__position))

(declare-const dummy us_rep)

(declare-const s__attr__tag Int)

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_202 us_rep) (temp___is_init_198 Bool) (temp___skip_constant_199 Bool) (temp___do_toplevel_200 Bool) (temp___do_typ_inv_201 Bool)) Bool
  true)

;; "is_empty"
(declare-fun is_empty (us_rep) Bool)

;; "size"
(declare-fun size (us_rep) Int)

;; "size__function_guard"
(declare-fun size__function_guard (Int
  us_rep) Bool)

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; "in_range"
(define-fun in_range3 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep2 ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep2 (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer))
    (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                                  (of_rep2 x))) )))

(declare-datatypes ()
  ((t (tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range2 f)
         (=>
           (in_range2 l)
           (and
             (= (to_rep2 (rec__first (mk f l))) f)
             (= (to_rep2 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range2 low)
    (and
      (in_range2 high)
      (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ()
  ((us_t (us_tqtmk (elts (Array Int element))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array Int element)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array Int element)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

;; "first"
(define-fun first ((a us_t)) Int
  (to_rep2 (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) Int
  (to_rep2 (rec__last (rt a))))

;; "length"
(define-fun length ((a us_t)) Int
  (ite (<= (first a) (last a)) (+ (- (last a) (first a)) 1) 0))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size1 Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment2))

;; "get_model"
(declare-fun get_model (Int
  us_rep) us_t)

;; "get_model__function_guard"
(declare-fun get_model__function_guard (us_t
  Int
  us_rep) Bool)

;; "reset__specific_post"
(declare-fun reset__specific_post (Int
  us_split_fields
  Int
  us_split_fields) Bool)

;; "stacks__stack_root__compat_axiom"
(assert
  (forall ((param__s__split_fields us_split_fields) (param__s__split_fields___old us_split_fields))
    (forall ((param__s__attr__tag Int))
      (! (=>
           (reset__specific_post
             1
             param__s__split_fields
             param__s__attr__tag
             param__s__split_fields___old)
           (= (is_empty
                (us_repqtmk param__s__split_fields param__s__attr__tag)) true)) :pattern (
      (reset__specific_post
        1
        param__s__split_fields
        param__s__attr__tag
        param__s__split_fields___old)) ))))

;; "get_model"
(declare-fun get_model1 (us_rep) us_t)

;; "get_model__function_guard"
(declare-fun get_model__function_guard1 (us_t
  us_rep) Bool)

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_239 us_t) (temp___is_init_235 Bool) (temp___skip_constant_236 Bool) (temp___do_toplevel_237 Bool) (temp___do_typ_inv_238 Bool)) Bool
  (=>
    (not (= temp___skip_constant_236 true))
    (dynamic_property
      1
      2147483647
      (first temp___expr_239)
      (last temp___expr_239))))

;; "stacks__stack_root__compat_axiom"
(assert
  (forall ((param__s us_rep))
    (! (=>
         (get_model__function_guard (get_model 1 param__s) 1 param__s)
         (and
           (get_model__function_guard1 (get_model1 param__s) param__s)
           (= (get_model1 param__s) (get_model 1 param__s)))) :pattern (
    (get_model
      1
      param__s)) )))

;; "length"
(define-fun length1 ((x Int) (y Int)) Int
  (ite (<= x y) (+ (- y x) 1) 0))

;; "push__specific_post"
(declare-fun push__specific_post (Int
  us_split_fields
  Int
  Int
  us_split_fields) Bool)

;; "stacks__stack_root__compat_axiom"
(assert
  (forall ((param__s__split_fields us_split_fields) (param__s__split_fields___old us_split_fields))
    (forall ((param__s__attr__tag Int) (param__e Int))
      (! (=>
           (push__specific_post
             1
             param__s__split_fields
             param__s__attr__tag
             param__e
             param__s__split_fields___old)
           (and
             (forall ((temp___291 us_rep))
               (get_model__function_guard1
                 (get_model1 temp___291)
                 temp___291))
             (let ((temp___old_285 (let ((temp___291 (us_repqtmk
                                                       param__s__split_fields___old
                                                       param__s__attr__tag)))
                                     (get_model1 temp___291))))
               (and
                 (forall ((temp___284 us_rep))
                   (get_model__function_guard1
                     (get_model1 temp___284)
                     temp___284))
                 (= (let ((temp___289 (ite (= (length temp___old_285) 0)
                                        (of_array
                                          (singleton1 (of_rep param__e) 1)
                                          1
                                          1)
                                        (of_array
                                          (concat_singleton_right
                                            (to_array temp___old_285)
                                            (first temp___old_285)
                                            (last temp___old_285)
                                            (of_rep param__e))
                                          (first temp___old_285)
                                          (- (+ (first temp___old_285) (+ 
                                          (length1
                                            (first temp___old_285)
                                            (last temp___old_285)) 1)) 1)))))
                      (let ((temp___287 (let ((temp___284 (us_repqtmk
                                                            param__s__split_fields
                                                            param__s__attr__tag)))
                                          (get_model1 temp___284))))
                        (bool_eq
                          (to_array temp___287)
                          (first temp___287)
                          (last temp___287)
                          (to_array temp___289)
                          (first temp___289)
                          (last temp___289)))) true))))) :pattern ((push__specific_post
                                                                    1
                                                                    param__s__split_fields
                                                                    param__s__attr__tag
                                                                    param__e
                                                                    param__s__split_fields___old)) ))))

;; "pop__specific_post"
(declare-fun pop__specific_post (Int
  us_split_fields
  Int
  Int
  us_split_fields
  Int) Bool)

;; "stacks__stack_root__compat_axiom"
(assert
  (forall ((param__s__split_fields us_split_fields) (param__s__split_fields___old us_split_fields))
    (forall ((param__s__attr__tag Int) (param__e Int) (param__e___old Int))
      (! (=>
           (pop__specific_post
             1
             param__s__split_fields
             param__s__attr__tag
             param__e
             param__s__split_fields___old
             param__e___old)
           (and
             (forall ((temp___369 us_rep))
               (get_model__function_guard1
                 (get_model1 temp___369)
                 temp___369))
             (and
               (forall ((temp___367 us_rep))
                 (get_model__function_guard1
                   (get_model1 temp___367)
                   temp___367))
               (and
                 (forall ((temp___365 us_rep))
                   (get_model__function_guard1
                     (get_model1 temp___365)
                     temp___365))
                 (and
                   (forall ((temp___363 us_rep))
                     (get_model__function_guard1
                       (get_model1 temp___363)
                       temp___363))
                   (and
                     (forall ((temp___361 us_rep))
                       (get_model__function_guard1
                         (get_model1 temp___361)
                         temp___361))
                     (and
                       (and
                         (forall ((temp___347 us_rep))
                           (get_model__function_guard1
                             (get_model1 temp___347)
                             temp___347))
                         (= (let ((temp___356 (let ((temp___352 (- (last
                                                                    (let ((temp___365 
                                                                    (us_repqtmk
                                                                    param__s__split_fields___old
                                                                    param__s__attr__tag)))
                                                                    (get_model1
                                                                    temp___365))) 1)))
                                                (let ((temp___350 (first
                                                                    (let ((temp___363 
                                                                    (us_repqtmk
                                                                    param__s__split_fields___old
                                                                    param__s__attr__tag)))
                                                                    (get_model1
                                                                    temp___363)))))
                                                  (of_array
                                                    (to_array
                                                      (let ((temp___361 
                                                        (us_repqtmk
                                                          param__s__split_fields___old
                                                          param__s__attr__tag)))
                                                        (get_model1
                                                          temp___361)))
                                                    temp___350
                                                    temp___352)))))
                              (let ((temp___354 (let ((temp___347 (us_repqtmk
                                                                    param__s__split_fields
                                                                    param__s__attr__tag)))
                                                  (get_model1 temp___347))))
                                (bool_eq
                                  (to_array temp___354)
                                  (first temp___354)
                                  (last temp___354)
                                  (to_array temp___356)
                                  (first temp___356)
                                  (last temp___356)))) true))
                       (=>
                         (not
                           (= (is_empty
                                (us_repqtmk
                                  param__s__split_fields___old
                                  param__s__attr__tag)) true))
                         (= param__e (to_rep
                                       (select (to_array
                                                 (let ((temp___367 (us_repqtmk
                                                                    param__s__split_fields___old
                                                                    param__s__attr__tag)))
                                                   (get_model1 temp___367))) 
                                       (let ((temp___370 (let ((temp___369 
                                                           (us_repqtmk
                                                             param__s__split_fields___old
                                                             param__s__attr__tag)))
                                                           (get_model1
                                                             temp___369))))
                                         (last temp___370))))))))))))) :pattern (
      (pop__specific_post
        1
        param__s__split_fields
        param__s__attr__tag
        param__e
        param__s__split_fields___old
        param__e___old)) ))))

;; "temp_____aggregate_def_411"
(declare-fun temp_____aggregate_def_411 (Int
  Int
  Int
  Int
  Int) (Array Int element))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size2 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment3))

;; "size__post_axiom"
(assert
  (forall ((param__s us_rep))
    (! (=>
         (dynamic_invariant param__s true false true true)
         (let ((result (size param__s)))
           (=> (size__function_guard result param__s) (in_range1 result)))) :pattern (
    (size
      param__s)) )))

;; "size__def_axiom"
(assert
  (forall ((param__s us_rep))
    (! (= (size param__s) (to_rep1
                            (rec__stacks__stack_root__length
                              (us_split_fields1 param__s)))) :pattern (
    (size
      param__s)) )))

;; "is_empty__post_axiom"
(assert true)

;; "is_empty__def_axiom"
(assert
  (forall ((param__s us_rep))
    (! (and
         (forall ((temp___227 us_rep))
           (size__function_guard (size temp___227) temp___227))
         (=
           (= (is_empty param__s) true)
           (= (let ((temp___227 param__s)) (size temp___227)) 0))) :pattern (
    (is_empty
      param__s)) )))

;; "get_model__post_axiom"
(assert
  (forall ((param__s us_rep))
    (! (=>
         (dynamic_invariant param__s true false true true)
         (let ((result (get_model1 param__s)))
           (and
             (forall ((temp___257 us_rep))
               (size__function_guard (size temp___257) temp___257))
             (=>
               (get_model__function_guard1 result param__s)
               (and
                 (and
                   (and (in_range1 (first result)) (in_range1 (last result)))
                   (= (length result) (let ((temp___257 param__s))
                                        (size temp___257))))
                 (dynamic_invariant1 result true false true true)))))) :pattern (
    (get_model1
      param__s)) )))

;; "get_model__post__dispatch_axiom"
(assert
  (forall ((attr__tag1 Int))
    (forall ((param__s us_rep))
      (! (=>
           (dynamic_invariant param__s true false true true)
           (let ((result (get_model attr__tag1 param__s)))
             (and
               (forall ((temp___253 us_rep))
                 (size__function_guard (size temp___253) temp___253))
               (=>
                 (get_model__function_guard result attr__tag1 param__s)
                 (and
                   (and
                     (and
                       (in_range1 (first result))
                       (in_range1 (last result)))
                     (= (length result) (let ((temp___253 param__s))
                                          (size temp___253))))
                   (dynamic_invariant1 result true false true true)))))) :pattern (
      (get_model
        attr__tag1
        param__s)) ))))

(declare-const rliteral element)

;; "rliteral_axiom"
(assert (= (elementqtint rliteral) 1))

(declare-const rliteral1 element)

;; "rliteral_axiom"
(assert (= (elementqtint rliteral1) 2))

(declare-const rliteral2 element)

;; "rliteral_axiom"
(assert (= (elementqtint rliteral2) 3))

(declare-const rliteral3 element)

;; "rliteral_axiom"
(assert (= (elementqtint rliteral3) 4))

(declare-const rliteral4 element)

;; "rliteral_axiom"
(assert (= (elementqtint rliteral4) 5))

;; "def_axiom"
(assert
  (forall ((temp___406 Int) (temp___407 Int) (temp___408 Int) (temp___409 Int) (temp___410 Int))
    (let ((temp___412 (temp_____aggregate_def_411
                        temp___406
                        temp___407
                        temp___408
                        temp___409
                        temp___410)))
      (and
        (and
          (= (select temp___412 1) rliteral)
          (= (select temp___412 2) rliteral1))
        (and
          (and
            (= (select temp___412 3) rliteral2)
            (= (select temp___412 4) rliteral3))
          (= (select temp___412 5) rliteral4))))))

(declare-const s__split_fields us_split_fields)

(declare-const e Int)

;; "e'unused"
(define-fun eqtunused () int__ref
  (int__refqtmk e))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields))

;; "Assume"
(assert
  (dynamic_invariant
    (us_repqtmk s__split_fields s__attr__tag)
    true
    false
    true
    true))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range e))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused () us_split_fields
  s__split_fields)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused () us_rep
  (us_repqtmk s__split_fields s__attr__tag))

;; "o"
(define-fun o () Int
  s__attr__tag)

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields))

(declare-const s__split_fields1 us_split_fields)

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused1 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields1))

;; "H"
(assert (= (is_empty (us_repqtmk s__split_fields1 o)) true))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields1 o) true true true true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (reset__specific_post o s__split_fields1 o s__split_fields))

;; "o"
(define-fun o1 () Int
  s__attr__tag)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused1 () us_split_fields
  s__split_fields1)

;; "temp___loop_entry_405'unused"
(define-fun temp___loop_entry_405qtunused () us_rep
  (us_repqtmk s__split_fields1 o1))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused1 () us_rep
  (us_repqtmk s__split_fields1 o1))

(declare-const i Int)

;; "i'unused"
(define-fun iqtunused () int__ref
  (int__refqtmk i))

;; "H"
(assert (= i 1))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused2 () us_split_fields
  s__split_fields1)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused2 () us_rep
  (us_repqtmk s__split_fields1 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  i)

;; "o"
(define-fun o2 () Int
  s__attr__tag)

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused1 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields1))

(declare-const s__split_fields2 us_split_fields)

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused2 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields2))

;; "H"
(assert
  (forall ((o3 Int) (temp___266 us_rep))
    (get_model__function_guard (get_model o3 temp___266) o3 temp___266)))

;; "H"
(assert
  (forall ((o3 Int) (temp___263 us_rep))
    (get_model__function_guard (get_model o3 temp___263) o3 temp___263)))

;; "H"
(assert
  (= (let ((temp___271 (let ((temp___267 (let ((temp___266 (us_repqtmk
                                                             s__split_fields1
                                                             o2)))
                                           (get_model o2 temp___266))))
                         (ite (= (length temp___267) 0)
                           (of_array (singleton1 (of_rep i) 1) 1 1)
                           (of_array
                             (concat_singleton_right
                               (to_array temp___267)
                               (first temp___267)
                               (last temp___267)
                               (of_rep i))
                             (first temp___267)
                             (- (+ (first temp___267) (+ (length1
                                                           (first temp___267)
                                                           (last temp___267)) 1)) 1))))))
       (let ((temp___269 (let ((temp___263 (us_repqtmk s__split_fields2 o2)))
                           (get_model o2 temp___263))))
         (bool_eq
           (to_array temp___269)
           (first temp___269)
           (last temp___269)
           (to_array temp___271)
           (first temp___271)
           (last temp___271)))) true))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields2 o2) true true true true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (push__specific_post o2 s__split_fields2 o2 i s__split_fields1))

(declare-const i1 Int)

;; "i'unused"
(define-fun iqtunused1 () int__ref
  (int__refqtmk i1))

;; "H"
(assert (= i1 2))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused3 () us_split_fields
  s__split_fields2)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused3 () us_rep
  (us_repqtmk s__split_fields2 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  i1)

;; "o"
(define-fun o3 () Int
  s__attr__tag)

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused2 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields2))

(declare-const s__split_fields3 us_split_fields)

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused3 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields3))

;; "H"
(assert
  (forall ((o4 Int) (temp___266 us_rep))
    (get_model__function_guard (get_model o4 temp___266) o4 temp___266)))

;; "H"
(assert
  (forall ((o4 Int) (temp___263 us_rep))
    (get_model__function_guard (get_model o4 temp___263) o4 temp___263)))

;; "H"
(assert
  (= (let ((temp___271 (let ((temp___267 (let ((temp___266 (us_repqtmk
                                                             s__split_fields2
                                                             o3)))
                                           (get_model o3 temp___266))))
                         (ite (= (length temp___267) 0)
                           (of_array (singleton1 (of_rep i1) 1) 1 1)
                           (of_array
                             (concat_singleton_right
                               (to_array temp___267)
                               (first temp___267)
                               (last temp___267)
                               (of_rep i1))
                             (first temp___267)
                             (- (+ (first temp___267) (+ (length1
                                                           (first temp___267)
                                                           (last temp___267)) 1)) 1))))))
       (let ((temp___269 (let ((temp___263 (us_repqtmk s__split_fields3 o3)))
                           (get_model o3 temp___263))))
         (bool_eq
           (to_array temp___269)
           (first temp___269)
           (last temp___269)
           (to_array temp___271)
           (first temp___271)
           (last temp___271)))) true))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields3 o3) true true true true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (push__specific_post o3 s__split_fields3 o3 i1 s__split_fields2))

(declare-const i2 Int)

;; "i'unused"
(define-fun iqtunused2 () int__ref
  (int__refqtmk i2))

;; "H"
(assert (= i2 3))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused4 () us_split_fields
  s__split_fields3)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused4 () us_rep
  (us_repqtmk s__split_fields3 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused2 () Int
  i2)

;; "o"
(define-fun o4 () Int
  s__attr__tag)

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused3 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields3))

(declare-const s__split_fields4 us_split_fields)

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused4 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields4))

;; "H"
(assert
  (forall ((o5 Int) (temp___266 us_rep))
    (get_model__function_guard (get_model o5 temp___266) o5 temp___266)))

;; "H"
(assert
  (forall ((o5 Int) (temp___263 us_rep))
    (get_model__function_guard (get_model o5 temp___263) o5 temp___263)))

;; "H"
(assert
  (= (let ((temp___271 (let ((temp___267 (let ((temp___266 (us_repqtmk
                                                             s__split_fields3
                                                             o4)))
                                           (get_model o4 temp___266))))
                         (ite (= (length temp___267) 0)
                           (of_array (singleton1 (of_rep i2) 1) 1 1)
                           (of_array
                             (concat_singleton_right
                               (to_array temp___267)
                               (first temp___267)
                               (last temp___267)
                               (of_rep i2))
                             (first temp___267)
                             (- (+ (first temp___267) (+ (length1
                                                           (first temp___267)
                                                           (last temp___267)) 1)) 1))))))
       (let ((temp___269 (let ((temp___263 (us_repqtmk s__split_fields4 o4)))
                           (get_model o4 temp___263))))
         (bool_eq
           (to_array temp___269)
           (first temp___269)
           (last temp___269)
           (to_array temp___271)
           (first temp___271)
           (last temp___271)))) true))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields4 o4) true true true true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (push__specific_post o4 s__split_fields4 o4 i2 s__split_fields3))

(declare-const i3 Int)

;; "i'unused"
(define-fun iqtunused3 () int__ref
  (int__refqtmk i3))

;; "H"
(assert (= i3 4))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused5 () us_split_fields
  s__split_fields4)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused5 () us_rep
  (us_repqtmk s__split_fields4 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  i3)

;; "o"
(define-fun o5 () Int
  s__attr__tag)

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused4 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields4))

(declare-const s__split_fields5 us_split_fields)

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused5 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields5))

;; "H"
(assert
  (forall ((o6 Int) (temp___266 us_rep))
    (get_model__function_guard (get_model o6 temp___266) o6 temp___266)))

;; "H"
(assert
  (forall ((o6 Int) (temp___263 us_rep))
    (get_model__function_guard (get_model o6 temp___263) o6 temp___263)))

;; "H"
(assert
  (= (let ((temp___271 (let ((temp___267 (let ((temp___266 (us_repqtmk
                                                             s__split_fields4
                                                             o5)))
                                           (get_model o5 temp___266))))
                         (ite (= (length temp___267) 0)
                           (of_array (singleton1 (of_rep i3) 1) 1 1)
                           (of_array
                             (concat_singleton_right
                               (to_array temp___267)
                               (first temp___267)
                               (last temp___267)
                               (of_rep i3))
                             (first temp___267)
                             (- (+ (first temp___267) (+ (length1
                                                           (first temp___267)
                                                           (last temp___267)) 1)) 1))))))
       (let ((temp___269 (let ((temp___263 (us_repqtmk s__split_fields5 o5)))
                           (get_model o5 temp___263))))
         (bool_eq
           (to_array temp___269)
           (first temp___269)
           (last temp___269)
           (to_array temp___271)
           (first temp___271)
           (last temp___271)))) true))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields5 o5) true true true true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (push__specific_post o5 s__split_fields5 o5 i3 s__split_fields4))

(declare-const i4 Int)

;; "i'unused"
(define-fun iqtunused4 () int__ref
  (int__refqtmk i4))

;; "H"
(assert (= i4 5))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused6 () us_split_fields
  s__split_fields5)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused6 () us_rep
  (us_repqtmk s__split_fields5 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused4 () Int
  i4)

;; "o"
(define-fun o6 () Int
  s__attr__tag)

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused5 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields5))

(declare-const s__split_fields6 us_split_fields)

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused6 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields6))

;; "H"
(assert
  (forall ((o7 Int) (temp___266 us_rep))
    (get_model__function_guard (get_model o7 temp___266) o7 temp___266)))

;; "H"
(assert
  (forall ((o7 Int) (temp___263 us_rep))
    (get_model__function_guard (get_model o7 temp___263) o7 temp___263)))

;; "H"
(assert
  (= (let ((temp___271 (let ((temp___267 (let ((temp___266 (us_repqtmk
                                                             s__split_fields5
                                                             o6)))
                                           (get_model o6 temp___266))))
                         (ite (= (length temp___267) 0)
                           (of_array (singleton1 (of_rep i4) 1) 1 1)
                           (of_array
                             (concat_singleton_right
                               (to_array temp___267)
                               (first temp___267)
                               (last temp___267)
                               (of_rep i4))
                             (first temp___267)
                             (- (+ (first temp___267) (+ (length1
                                                           (first temp___267)
                                                           (last temp___267)) 1)) 1))))))
       (let ((temp___269 (let ((temp___263 (us_repqtmk s__split_fields6 o6)))
                           (get_model o6 temp___263))))
         (bool_eq
           (to_array temp___269)
           (first temp___269)
           (last temp___269)
           (to_array temp___271)
           (first temp___271)
           (last temp___271)))) true))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields6 o6) true true true true))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (push__specific_post o6 s__split_fields6 o6 i4 s__split_fields5))

;; "H"
(assert
  (forall ((temp___421 us_rep) (temp___420 Int))
    (get_model__function_guard
      (get_model temp___420 temp___421)
      temp___420
      temp___421)))

;; "Assert"
(assert
  (= (let ((temp___428 (let ((temp___421 (us_repqtmk
                                           s__split_fields6
                                           s__attr__tag)))
                         (let ((temp___420 s__attr__tag))
                           (get_model temp___420 temp___421)))))
       (bool_eq
         (to_array temp___428)
         (first temp___428)
         (last temp___428)
         (temp_____aggregate_def_411 1 2 3 4 5)
         1
         5)) true))

;; "temp___loop_entry_436'unused"
(define-fun temp___loop_entry_436qtunused () Int
  e)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused5 () Int
  e)

;; "o"
(define-fun o7 () Int
  s__attr__tag)

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused7 () us_split_fields
  s__split_fields6)

;; "temp___loop_entry_435'unused"
(define-fun temp___loop_entry_435qtunused () us_rep
  (us_repqtmk s__split_fields6 o7))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused7 () us_rep
  (us_repqtmk s__split_fields6 o7))

(declare-const i5 Int)

;; "i'unused"
(define-fun iqtunused5 () int__ref
  (int__refqtmk i5))

;; "H"
(assert (= i5 5))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused8 () us_split_fields
  s__split_fields6)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused8 () us_rep
  (us_repqtmk s__split_fields6 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused6 () Int
  e)

;; "o"
(define-fun o8 () Int
  s__attr__tag)

;; "param__e'unused"
(define-fun param__eqtunused () int__ref
  (int__refqtmk e))

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused6 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields6))

(declare-const s__split_fields7 us_split_fields)

(declare-const e1 Int)

;; "e'unused"
(define-fun eqtunused1 () int__ref
  (int__refqtmk e1))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused7 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields7))

;; "H"
(assert
  (forall ((o9 Int) (temp___306 us_rep))
    (get_model__function_guard (get_model o9 temp___306) o9 temp___306)))

;; "H"
(assert
  (forall ((o9 Int) (temp___301 us_rep))
    (get_model__function_guard (get_model o9 temp___301) o9 temp___301)))

;; "H"
(assert
  (forall ((o9 Int) (temp___297 us_rep))
    (get_model__function_guard (get_model o9 temp___297) o9 temp___297)))

;; "H"
(assert
  (forall ((o9 Int) (temp___294 us_rep))
    (get_model__function_guard (get_model o9 temp___294) o9 temp___294)))

;; "H"
(assert
  (forall ((o9 Int) (temp___315 us_rep))
    (get_model__function_guard (get_model o9 temp___315) o9 temp___315)))

;; "H"
(assert
  (forall ((o9 Int) (temp___319 us_rep))
    (get_model__function_guard (get_model o9 temp___319) o9 temp___319)))

;; "H"
(assert
  (= (let ((temp___312 (let ((temp___308 (- (last
                                              (let ((temp___306 (us_repqtmk
                                                                  s__split_fields6
                                                                  o8)))
                                                (get_model o8 temp___306))) 1)))
                         (let ((temp___303 (first
                                             (let ((temp___301 (us_repqtmk
                                                                 s__split_fields6
                                                                 o8)))
                                               (get_model o8 temp___301)))))
                           (of_array
                             (to_array
                               (let ((temp___297 (us_repqtmk
                                                   s__split_fields6
                                                   o8)))
                                 (get_model o8 temp___297)))
                             temp___303
                             temp___308)))))
       (let ((temp___310 (let ((temp___294 (us_repqtmk s__split_fields7 o8)))
                           (get_model o8 temp___294))))
         (bool_eq
           (to_array temp___310)
           (first temp___310)
           (last temp___310)
           (to_array temp___312)
           (first temp___312)
           (last temp___312)))) true))

;; "H"
(assert
  (=>
    (not (= (is_empty (us_repqtmk s__split_fields6 o8)) true))
    (= e1 (to_rep
            (select (to_array
                      (let ((temp___315 (us_repqtmk s__split_fields6 o8)))
                        (get_model o8 temp___315))) (last
                                                      (let ((temp___319 
                                                        (us_repqtmk
                                                          s__split_fields6
                                                          o8)))
                                                        (get_model
                                                          o8
                                                          temp___319))))))))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields7 o8) true true true true))

;; "H"
(assert (in_range e1))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (pop__specific_post o8 s__split_fields7 o8 e1 s__split_fields6 e))

;; "Assert"
(assert (= e1 i5))

(declare-const i6 Int)

;; "i'unused"
(define-fun iqtunused6 () int__ref
  (int__refqtmk i6))

;; "H"
(assert (= i6 4))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused9 () us_split_fields
  s__split_fields7)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused9 () us_rep
  (us_repqtmk s__split_fields7 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused7 () Int
  e1)

;; "o"
(define-fun o9 () Int
  s__attr__tag)

;; "param__e'unused"
(define-fun param__eqtunused1 () int__ref
  (int__refqtmk e1))

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused7 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields7))

(declare-const s__split_fields8 us_split_fields)

(declare-const e2 Int)

;; "e'unused"
(define-fun eqtunused2 () int__ref
  (int__refqtmk e2))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused8 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields8))

;; "H"
(assert
  (forall ((o10 Int) (temp___306 us_rep))
    (get_model__function_guard (get_model o10 temp___306) o10 temp___306)))

;; "H"
(assert
  (forall ((o10 Int) (temp___301 us_rep))
    (get_model__function_guard (get_model o10 temp___301) o10 temp___301)))

;; "H"
(assert
  (forall ((o10 Int) (temp___297 us_rep))
    (get_model__function_guard (get_model o10 temp___297) o10 temp___297)))

;; "H"
(assert
  (forall ((o10 Int) (temp___294 us_rep))
    (get_model__function_guard (get_model o10 temp___294) o10 temp___294)))

;; "H"
(assert
  (forall ((o10 Int) (temp___315 us_rep))
    (get_model__function_guard (get_model o10 temp___315) o10 temp___315)))

;; "H"
(assert
  (forall ((o10 Int) (temp___319 us_rep))
    (get_model__function_guard (get_model o10 temp___319) o10 temp___319)))

;; "H"
(assert
  (= (let ((temp___312 (let ((temp___308 (- (last
                                              (let ((temp___306 (us_repqtmk
                                                                  s__split_fields7
                                                                  o9)))
                                                (get_model o9 temp___306))) 1)))
                         (let ((temp___303 (first
                                             (let ((temp___301 (us_repqtmk
                                                                 s__split_fields7
                                                                 o9)))
                                               (get_model o9 temp___301)))))
                           (of_array
                             (to_array
                               (let ((temp___297 (us_repqtmk
                                                   s__split_fields7
                                                   o9)))
                                 (get_model o9 temp___297)))
                             temp___303
                             temp___308)))))
       (let ((temp___310 (let ((temp___294 (us_repqtmk s__split_fields8 o9)))
                           (get_model o9 temp___294))))
         (bool_eq
           (to_array temp___310)
           (first temp___310)
           (last temp___310)
           (to_array temp___312)
           (first temp___312)
           (last temp___312)))) true))

;; "H"
(assert
  (=>
    (not (= (is_empty (us_repqtmk s__split_fields7 o9)) true))
    (= e2 (to_rep
            (select (to_array
                      (let ((temp___315 (us_repqtmk s__split_fields7 o9)))
                        (get_model o9 temp___315))) (last
                                                      (let ((temp___319 
                                                        (us_repqtmk
                                                          s__split_fields7
                                                          o9)))
                                                        (get_model
                                                          o9
                                                          temp___319))))))))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields8 o9) true true true true))

;; "H"
(assert (in_range e2))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (pop__specific_post o9 s__split_fields8 o9 e2 s__split_fields7 e1))

;; "Assert"
(assert (= e2 i6))

(declare-const i7 Int)

;; "i'unused"
(define-fun iqtunused7 () int__ref
  (int__refqtmk i7))

;; "H"
(assert (= i7 3))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused10 () us_split_fields
  s__split_fields8)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused10 () us_rep
  (us_repqtmk s__split_fields8 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused8 () Int
  e2)

;; "o"
(define-fun o10 () Int
  s__attr__tag)

;; "param__e'unused"
(define-fun param__eqtunused2 () int__ref
  (int__refqtmk e2))

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused8 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields8))

(declare-const s__split_fields9 us_split_fields)

(declare-const e3 Int)

;; "e'unused"
(define-fun eqtunused3 () int__ref
  (int__refqtmk e3))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused9 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields9))

;; "H"
(assert
  (forall ((o11 Int) (temp___306 us_rep))
    (get_model__function_guard (get_model o11 temp___306) o11 temp___306)))

;; "H"
(assert
  (forall ((o11 Int) (temp___301 us_rep))
    (get_model__function_guard (get_model o11 temp___301) o11 temp___301)))

;; "H"
(assert
  (forall ((o11 Int) (temp___297 us_rep))
    (get_model__function_guard (get_model o11 temp___297) o11 temp___297)))

;; "H"
(assert
  (forall ((o11 Int) (temp___294 us_rep))
    (get_model__function_guard (get_model o11 temp___294) o11 temp___294)))

;; "H"
(assert
  (forall ((o11 Int) (temp___315 us_rep))
    (get_model__function_guard (get_model o11 temp___315) o11 temp___315)))

;; "H"
(assert
  (forall ((o11 Int) (temp___319 us_rep))
    (get_model__function_guard (get_model o11 temp___319) o11 temp___319)))

;; "H"
(assert
  (= (let ((temp___312 (let ((temp___308 (- (last
                                              (let ((temp___306 (us_repqtmk
                                                                  s__split_fields8
                                                                  o10)))
                                                (get_model o10 temp___306))) 1)))
                         (let ((temp___303 (first
                                             (let ((temp___301 (us_repqtmk
                                                                 s__split_fields8
                                                                 o10)))
                                               (get_model o10 temp___301)))))
                           (of_array
                             (to_array
                               (let ((temp___297 (us_repqtmk
                                                   s__split_fields8
                                                   o10)))
                                 (get_model o10 temp___297)))
                             temp___303
                             temp___308)))))
       (let ((temp___310 (let ((temp___294 (us_repqtmk s__split_fields9 o10)))
                           (get_model o10 temp___294))))
         (bool_eq
           (to_array temp___310)
           (first temp___310)
           (last temp___310)
           (to_array temp___312)
           (first temp___312)
           (last temp___312)))) true))

;; "H"
(assert
  (=>
    (not (= (is_empty (us_repqtmk s__split_fields8 o10)) true))
    (= e3 (to_rep
            (select (to_array
                      (let ((temp___315 (us_repqtmk s__split_fields8 o10)))
                        (get_model o10 temp___315))) (last
                                                       (let ((temp___319 
                                                         (us_repqtmk
                                                           s__split_fields8
                                                           o10)))
                                                         (get_model
                                                           o10
                                                           temp___319))))))))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields9 o10) true true true true))

;; "H"
(assert (in_range e3))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert (pop__specific_post o10 s__split_fields9 o10 e3 s__split_fields8 e2))

;; "Assert"
(assert (= e3 i7))

(declare-const i8 Int)

;; "i'unused"
(define-fun iqtunused8 () int__ref
  (int__refqtmk i8))

;; "H"
(assert (= i8 2))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused11 () us_split_fields
  s__split_fields9)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused11 () us_rep
  (us_repqtmk s__split_fields9 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused9 () Int
  e3)

;; "o"
(define-fun o11 () Int
  s__attr__tag)

;; "param__e'unused"
(define-fun param__eqtunused3 () int__ref
  (int__refqtmk e3))

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused9 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields9))

(declare-const s__split_fields10 us_split_fields)

(declare-const e4 Int)

;; "e'unused"
(define-fun eqtunused4 () int__ref
  (int__refqtmk e4))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused10 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields10))

;; "H"
(assert
  (forall ((o12 Int) (temp___306 us_rep))
    (get_model__function_guard (get_model o12 temp___306) o12 temp___306)))

;; "H"
(assert
  (forall ((o12 Int) (temp___301 us_rep))
    (get_model__function_guard (get_model o12 temp___301) o12 temp___301)))

;; "H"
(assert
  (forall ((o12 Int) (temp___297 us_rep))
    (get_model__function_guard (get_model o12 temp___297) o12 temp___297)))

;; "H"
(assert
  (forall ((o12 Int) (temp___294 us_rep))
    (get_model__function_guard (get_model o12 temp___294) o12 temp___294)))

;; "H"
(assert
  (forall ((o12 Int) (temp___315 us_rep))
    (get_model__function_guard (get_model o12 temp___315) o12 temp___315)))

;; "H"
(assert
  (forall ((o12 Int) (temp___319 us_rep))
    (get_model__function_guard (get_model o12 temp___319) o12 temp___319)))

;; "H"
(assert
  (= (let ((temp___312 (let ((temp___308 (- (last
                                              (let ((temp___306 (us_repqtmk
                                                                  s__split_fields9
                                                                  o11)))
                                                (get_model o11 temp___306))) 1)))
                         (let ((temp___303 (first
                                             (let ((temp___301 (us_repqtmk
                                                                 s__split_fields9
                                                                 o11)))
                                               (get_model o11 temp___301)))))
                           (of_array
                             (to_array
                               (let ((temp___297 (us_repqtmk
                                                   s__split_fields9
                                                   o11)))
                                 (get_model o11 temp___297)))
                             temp___303
                             temp___308)))))
       (let ((temp___310 (let ((temp___294 (us_repqtmk s__split_fields10 o11)))
                           (get_model o11 temp___294))))
         (bool_eq
           (to_array temp___310)
           (first temp___310)
           (last temp___310)
           (to_array temp___312)
           (first temp___312)
           (last temp___312)))) true))

;; "H"
(assert
  (=>
    (not (= (is_empty (us_repqtmk s__split_fields9 o11)) true))
    (= e4 (to_rep
            (select (to_array
                      (let ((temp___315 (us_repqtmk s__split_fields9 o11)))
                        (get_model o11 temp___315))) (last
                                                       (let ((temp___319 
                                                         (us_repqtmk
                                                           s__split_fields9
                                                           o11)))
                                                         (get_model
                                                           o11
                                                           temp___319))))))))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields10 o11) true true true true))

;; "H"
(assert (in_range e4))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert
  (pop__specific_post o11 s__split_fields10 o11 e4 s__split_fields9 e3))

;; "Assert"
(assert (= e4 i8))

(declare-const i9 Int)

;; "i'unused"
(define-fun iqtunused9 () int__ref
  (int__refqtmk i9))

;; "H"
(assert (= i9 1))

;; "__split_fields__content'result'unused"
(define-fun us_split_fields__contentqtresultqtunused12 () us_split_fields
  s__split_fields10)

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused12 () us_rep
  (us_repqtmk s__split_fields10 s__attr__tag))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused10 () Int
  e4)

;; "o"
(define-fun o12 () Int
  s__attr__tag)

;; "param__e'unused"
(define-fun param__eqtunused4 () int__ref
  (int__refqtmk e4))

;; "param__s__split_fields'unused"
(define-fun param__s__split_fieldsqtunused10 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields10))

(declare-const s__split_fields11 us_split_fields)

(declare-const e5 Int)

;; "e'unused"
(define-fun eqtunused5 () int__ref
  (int__refqtmk e5))

;; "s__split_fields'unused"
(define-fun s__split_fieldsqtunused11 () us_split_fields__ref
  (us_split_fields__refqtmk s__split_fields11))

;; "H"
(assert
  (forall ((o13 Int) (temp___306 us_rep))
    (get_model__function_guard (get_model o13 temp___306) o13 temp___306)))

;; "H"
(assert
  (forall ((o13 Int) (temp___301 us_rep))
    (get_model__function_guard (get_model o13 temp___301) o13 temp___301)))

;; "H"
(assert
  (forall ((o13 Int) (temp___297 us_rep))
    (get_model__function_guard (get_model o13 temp___297) o13 temp___297)))

;; "H"
(assert
  (forall ((o13 Int) (temp___294 us_rep))
    (get_model__function_guard (get_model o13 temp___294) o13 temp___294)))

;; "H"
(assert
  (forall ((o13 Int) (temp___315 us_rep))
    (get_model__function_guard (get_model o13 temp___315) o13 temp___315)))

;; "H"
(assert
  (forall ((o13 Int) (temp___319 us_rep))
    (get_model__function_guard (get_model o13 temp___319) o13 temp___319)))

;; "H"
(assert
  (= (let ((temp___312 (let ((temp___308 (- (last
                                              (let ((temp___306 (us_repqtmk
                                                                  s__split_fields10
                                                                  o12)))
                                                (get_model o12 temp___306))) 1)))
                         (let ((temp___303 (first
                                             (let ((temp___301 (us_repqtmk
                                                                 s__split_fields10
                                                                 o12)))
                                               (get_model o12 temp___301)))))
                           (of_array
                             (to_array
                               (let ((temp___297 (us_repqtmk
                                                   s__split_fields10
                                                   o12)))
                                 (get_model o12 temp___297)))
                             temp___303
                             temp___308)))))
       (let ((temp___310 (let ((temp___294 (us_repqtmk s__split_fields11 o12)))
                           (get_model o12 temp___294))))
         (bool_eq
           (to_array temp___310)
           (first temp___310)
           (last temp___310)
           (to_array temp___312)
           (first temp___312)
           (last temp___312)))) true))

;; "H"
(assert
  (=>
    (not (= (is_empty (us_repqtmk s__split_fields10 o12)) true))
    (= e5 (to_rep
            (select (to_array
                      (let ((temp___315 (us_repqtmk s__split_fields10 o12)))
                        (get_model o12 temp___315))) (last
                                                       (let ((temp___319 
                                                         (us_repqtmk
                                                           s__split_fields10
                                                           o12)))
                                                         (get_model
                                                           o12
                                                           temp___319))))))))

;; "H"
(assert
  (dynamic_invariant (us_repqtmk s__split_fields11 o12) true true true true))

;; "H"
(assert (in_range e5))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert
  (pop__specific_post o12 s__split_fields11 o12 e5 s__split_fields10 e4))

;; Goal "def'vc"
;; File "test_stack.adb", line 2, characters 0-0
(assert
  (not (= e5 i9)))

(check-sat)
