;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-const two_power_size_minus_one Int)

;; "uint_in_range"
(define-fun uint_in_range ((i Int)) Bool
  (and (<= 0 i) (<= i 18446744073709551615)))

(declare-sort unsigned_64 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

(declare-const two_power_size_minus_one1 Int)

(declare-sort byte 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 8))

;; "to_rep"
(declare-fun to_rep (unsigned_64) (_ BitVec 64))

;; "of_rep"
(declare-fun of_rep ((_ BitVec 64)) unsigned_64)

;; "inversion_axiom"
(assert
  (forall ((x unsigned_64))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 64)))
    (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))) )))

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 64))

;; "to_rep"
(declare-fun to_rep1 (byte) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep1 ((_ BitVec 8)) byte)

;; "inversion_axiom"
(assert
  (forall ((x byte)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))) )))

(declare-datatypes ()
  ((t (tqtmk (rec__first unsigned_64)(rec__last unsigned_64)))))

;; "dynamic_property"
(define-fun dynamic_property ((range_first (_ BitVec 64)) (range_last (_ BitVec 64)) (low (_ BitVec 64)) (high (_ BitVec 64))) Bool
  true)

(declare-datatypes ()
  ((us_t (us_tqtmk (elts (Array (_ BitVec 64) byte))(rt t)))))

;; "first"
(define-fun first ((a us_t)) (_ BitVec 64)
  (to_rep (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) (_ BitVec 64)
  (to_rep (rec__last (rt a))))

;; "length"
(define-fun length ((a us_t)) Int
  (ite (bvule (first a) (last a))
    (+ (- (bv2int (last a)) (bv2int (first a))) 1)
    0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const s us_t)

(declare-const count (_ BitVec 64))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_363 us_t) (temp___is_init_359 Bool) (temp___skip_constant_360 Bool) (temp___do_toplevel_361 Bool) (temp___do_typ_inv_362 Bool)) Bool
  (and
    (=>
      (not (= temp___skip_constant_360 true))
      (dynamic_property
        #x0000000000000000
        #xFFFFFFFFFFFFFFFF
        (first temp___expr_363)
        (last temp___expr_363)))
    (=>
      (= temp___is_init_359 true)
      (=>
        (= temp___do_toplevel_361 true)
        (bvult (last temp___expr_363) #xFFFFFFFFFFFFFFFF)))))

;; "Assume"
(assert (dynamic_invariant s true false true true))

;; "Assume"
(assert true)

;; "o"
(define-fun o () Int
  (length s))

;; "length'result'unused"
(define-fun lengthqtresultqtunused () Int
  o)

;; Goal "def'vc"
;; File "skein.adb", line 104, characters 0-0
(assert
  (not (uint_in_range o)))

(check-sat)
