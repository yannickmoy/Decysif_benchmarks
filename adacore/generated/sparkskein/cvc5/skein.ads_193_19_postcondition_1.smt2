;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

;; "pow2"
(declare-fun pow2 (Int) Int)

(declare-const two_power_size_minus_one Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one (pow2 (- 8 1))))

;; "min"
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; "max"
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; "Min_r"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; "Max_l"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; "Min_comm"
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; "Max_comm"
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; "Min_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; "Max_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(declare-const two_power_size_minus_one1 Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one1 (pow2 (- 64 1))))

;; "add_in_range"
(define-fun add_in_range ((param__x (_ BitVec 64)) (param__y (_ BitVec 64))) Bool
  (bvule param__y (bvsub #xFFFFFFFFFFFFFFFF param__x)))

(declare-const two_power_size_minus_one2 Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one2 (pow2 (- 16 1))))

(declare-const two_power_size_minus_one3 Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one3 (pow2 (- 32 1))))

(declare-sort u16 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 16))

;; "to_rep"
(declare-fun to_rep (u16) (_ BitVec 16))

;; "of_rep"
(declare-fun of_rep ((_ BitVec 16)) u16)

;; "inversion_axiom"
(assert
  (forall ((x u16)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 16)))
    (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))) )))

(declare-sort u32 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))

;; "to_rep"
(declare-fun to_rep1 (u32) (_ BitVec 32))

;; "of_rep"
(declare-fun of_rep1 ((_ BitVec 32)) u32)

;; "inversion_axiom"
(assert
  (forall ((x u32)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 32)))
    (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))) )))

(declare-sort u64 0)

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 64))

;; "to_rep"
(declare-fun to_rep2 (u64) (_ BitVec 64))

;; "of_rep"
(declare-fun of_rep2 ((_ BitVec 64)) u64)

;; "inversion_axiom"
(assert
  (forall ((x u64)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 64)))
    (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(declare-sort u7 0)

;; "in_range"
(define-fun in_range ((x (_ BitVec 8))) Bool
  (and (bvule #x00 x) (bvule x #x7F)))

;; "to_rep"
(declare-fun to_rep3 (u7) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep3 ((_ BitVec 8)) u7)

;; "inversion_axiom"
(assert
  (forall ((x u7)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; "range_axiom"
(assert (forall ((x u7)) (! (in_range (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (let ((y (bvurem x #x80)))
         (=> (in_range y) (= (to_rep3 (of_rep3 x)) y))) :pattern ((to_rep3
                                                                    (of_rep3
                                                                    x))) )))

(declare-sort u6 0)

;; "in_range"
(define-fun in_range1 ((x (_ BitVec 8))) Bool
  (and (bvule #x00 x) (bvule x #x3F)))

;; "to_rep"
(declare-fun to_rep4 (u6) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep4 ((_ BitVec 8)) u6)

;; "inversion_axiom"
(assert
  (forall ((x u6)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; "range_axiom"
(assert
  (forall ((x u6)) (! (in_range1 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (let ((y (bvurem x #x40)))
         (=> (in_range1 y) (= (to_rep4 (of_rep4 x)) y))) :pattern ((to_rep4
                                                                    (of_rep4
                                                                    x))) )))

(declare-datatypes ((us_split_fields 0))
  (((us_split_fieldsqtmk
    (rec__skein__tweak_value__byte_count_lsb u64)(rec__skein__tweak_value__byte_count_msb u32)(rec__skein__tweak_value__reserved u16)(rec__skein__tweak_value__tree_level u7)(rec__skein__tweak_value__bit_pad Bool)(rec__skein__tweak_value__field_type u6)(rec__skein__tweak_value__first_block Bool)(rec__skein__tweak_value__final_block Bool)))))

(declare-datatypes ((us_rep 0))
  (((us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const skein__tweak_value__byte_count_lsb__first__bit Int)

(declare-const skein__tweak_value__byte_count_lsb__last__bit Int)

(declare-const skein__tweak_value__byte_count_lsb__position Int)

;; "skein__tweak_value__byte_count_lsb__first__bit_axiom"
(assert (<= 0 skein__tweak_value__byte_count_lsb__first__bit))

;; "skein__tweak_value__byte_count_lsb__last__bit_axiom"
(assert
  (< skein__tweak_value__byte_count_lsb__first__bit skein__tweak_value__byte_count_lsb__last__bit))

;; "skein__tweak_value__byte_count_lsb__position_axiom"
(assert (<= 0 skein__tweak_value__byte_count_lsb__position))

(declare-const skein__tweak_value__byte_count_msb__first__bit Int)

(declare-const skein__tweak_value__byte_count_msb__last__bit Int)

(declare-const skein__tweak_value__byte_count_msb__position Int)

;; "skein__tweak_value__byte_count_msb__first__bit_axiom"
(assert (<= 0 skein__tweak_value__byte_count_msb__first__bit))

;; "skein__tweak_value__byte_count_msb__last__bit_axiom"
(assert
  (< skein__tweak_value__byte_count_msb__first__bit skein__tweak_value__byte_count_msb__last__bit))

;; "skein__tweak_value__byte_count_msb__position_axiom"
(assert (<= 0 skein__tweak_value__byte_count_msb__position))

(declare-const skein__tweak_value__reserved__first__bit Int)

(declare-const skein__tweak_value__reserved__last__bit Int)

(declare-const skein__tweak_value__reserved__position Int)

;; "skein__tweak_value__reserved__first__bit_axiom"
(assert (<= 0 skein__tweak_value__reserved__first__bit))

;; "skein__tweak_value__reserved__last__bit_axiom"
(assert
  (< skein__tweak_value__reserved__first__bit skein__tweak_value__reserved__last__bit))

;; "skein__tweak_value__reserved__position_axiom"
(assert (<= 0 skein__tweak_value__reserved__position))

(declare-const skein__tweak_value__tree_level__first__bit Int)

(declare-const skein__tweak_value__tree_level__last__bit Int)

(declare-const skein__tweak_value__tree_level__position Int)

;; "skein__tweak_value__tree_level__first__bit_axiom"
(assert (<= 0 skein__tweak_value__tree_level__first__bit))

;; "skein__tweak_value__tree_level__last__bit_axiom"
(assert
  (< skein__tweak_value__tree_level__first__bit skein__tweak_value__tree_level__last__bit))

;; "skein__tweak_value__tree_level__position_axiom"
(assert (<= 0 skein__tweak_value__tree_level__position))

(declare-const skein__tweak_value__bit_pad__first__bit Int)

(declare-const skein__tweak_value__bit_pad__last__bit Int)

(declare-const skein__tweak_value__bit_pad__position Int)

;; "skein__tweak_value__bit_pad__first__bit_axiom"
(assert (<= 0 skein__tweak_value__bit_pad__first__bit))

;; "skein__tweak_value__bit_pad__last__bit_axiom"
(assert
  (< skein__tweak_value__bit_pad__first__bit skein__tweak_value__bit_pad__last__bit))

;; "skein__tweak_value__bit_pad__position_axiom"
(assert (<= 0 skein__tweak_value__bit_pad__position))

(declare-const skein__tweak_value__field_type__first__bit Int)

(declare-const skein__tweak_value__field_type__last__bit Int)

(declare-const skein__tweak_value__field_type__position Int)

;; "skein__tweak_value__field_type__first__bit_axiom"
(assert (<= 0 skein__tweak_value__field_type__first__bit))

;; "skein__tweak_value__field_type__last__bit_axiom"
(assert
  (< skein__tweak_value__field_type__first__bit skein__tweak_value__field_type__last__bit))

;; "skein__tweak_value__field_type__position_axiom"
(assert (<= 0 skein__tweak_value__field_type__position))

(declare-const skein__tweak_value__first_block__first__bit Int)

(declare-const skein__tweak_value__first_block__last__bit Int)

(declare-const skein__tweak_value__first_block__position Int)

;; "skein__tweak_value__first_block__first__bit_axiom"
(assert (<= 0 skein__tweak_value__first_block__first__bit))

;; "skein__tweak_value__first_block__last__bit_axiom"
(assert
  (< skein__tweak_value__first_block__first__bit skein__tweak_value__first_block__last__bit))

;; "skein__tweak_value__first_block__position_axiom"
(assert (<= 0 skein__tweak_value__first_block__position))

(declare-const skein__tweak_value__final_block__first__bit Int)

(declare-const skein__tweak_value__final_block__last__bit Int)

(declare-const skein__tweak_value__final_block__position Int)

;; "skein__tweak_value__final_block__first__bit_axiom"
(assert (<= 0 skein__tweak_value__final_block__first__bit))

;; "skein__tweak_value__final_block__last__bit_axiom"
(assert
  (< skein__tweak_value__final_block__first__bit skein__tweak_value__final_block__last__bit))

;; "skein__tweak_value__final_block__position_axiom"
(assert (<= 0 skein__tweak_value__final_block__position))

(declare-const dummy us_rep)

(declare-sort hash_bit_length 0)

(declare-const attr__ATTRIBUTE_MODULUS3 (_ BitVec 64))

;; "in_range"
(define-fun in_range2 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000000 x) (bvule x #xFFFFFFFFFFFFFFF8)))

;; "to_rep"
(declare-fun to_rep5 (hash_bit_length) (_ BitVec 64))

;; "of_rep"
(declare-fun of_rep5 ((_ BitVec 64)) hash_bit_length)

;; "inversion_axiom"
(assert
  (forall ((x hash_bit_length))
    (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; "range_axiom"
(assert
  (forall ((x hash_bit_length))
    (! (in_range2 (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 64)))
    (! (=> (in_range2 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                                  (of_rep5 x))) )))

(declare-datatypes ((us_split_fields2 0))
  (((us_split_fieldsqtmk1
    (rec__skein__context_header__tweak_words us_rep)(rec__skein__context_header__hash_bit_len hash_bit_length)(rec__skein__context_header__byte_count u64)))))

(declare-datatypes ((us_rep1 0))
  (((us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const skein__context_header__tweak_words__first__bit Int)

(declare-const skein__context_header__tweak_words__last__bit Int)

(declare-const skein__context_header__tweak_words__position Int)

;; "skein__context_header__tweak_words__first__bit_axiom"
(assert (<= 0 skein__context_header__tweak_words__first__bit))

;; "skein__context_header__tweak_words__last__bit_axiom"
(assert
  (< skein__context_header__tweak_words__first__bit skein__context_header__tweak_words__last__bit))

;; "skein__context_header__tweak_words__position_axiom"
(assert (<= 0 skein__context_header__tweak_words__position))

(declare-const skein__context_header__hash_bit_len__first__bit Int)

(declare-const skein__context_header__hash_bit_len__last__bit Int)

(declare-const skein__context_header__hash_bit_len__position Int)

;; "skein__context_header__hash_bit_len__first__bit_axiom"
(assert (<= 0 skein__context_header__hash_bit_len__first__bit))

;; "skein__context_header__hash_bit_len__last__bit_axiom"
(assert
  (< skein__context_header__hash_bit_len__first__bit skein__context_header__hash_bit_len__last__bit))

;; "skein__context_header__hash_bit_len__position_axiom"
(assert (<= 0 skein__context_header__hash_bit_len__position))

(declare-const skein__context_header__byte_count__first__bit Int)

(declare-const skein__context_header__byte_count__last__bit Int)

(declare-const skein__context_header__byte_count__position Int)

;; "skein__context_header__byte_count__first__bit_axiom"
(assert (<= 0 skein__context_header__byte_count__first__bit))

;; "skein__context_header__byte_count__last__bit_axiom"
(assert
  (< skein__context_header__byte_count__first__bit skein__context_header__byte_count__last__bit))

;; "skein__context_header__byte_count__position_axiom"
(assert (<= 0 skein__context_header__byte_count__position))

(declare-const dummy1 us_rep1)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-sort byte 0)

(declare-const attr__ATTRIBUTE_MODULUS4 (_ BitVec 8))

;; "to_rep"
(declare-fun to_rep6 (byte) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep6 ((_ BitVec 8)) byte)

;; "inversion_axiom"
(assert
  (forall ((x byte)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (= (to_rep6 (of_rep6 x)) x) :pattern ((to_rep6 (of_rep6 x))) )))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-datatypes ((us_split_fields4 0))
  (((us_split_fieldsqtmk2
    (rec__skein__skein_512_context__h us_rep1)(rec__skein__skein_512_context__x (Array (_ BitVec 64) u64))(rec__skein__skein_512_context__b (Array (_ BitVec 64) byte))))))

(declare-datatypes ((us_rep2 0))
  (((us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const skein__skein_512_context__h__first__bit Int)

(declare-const skein__skein_512_context__h__last__bit Int)

(declare-const skein__skein_512_context__h__position Int)

;; "skein__skein_512_context__h__first__bit_axiom"
(assert (<= 0 skein__skein_512_context__h__first__bit))

;; "skein__skein_512_context__h__last__bit_axiom"
(assert
  (< skein__skein_512_context__h__first__bit skein__skein_512_context__h__last__bit))

;; "skein__skein_512_context__h__position_axiom"
(assert (<= 0 skein__skein_512_context__h__position))

(declare-const skein__skein_512_context__x__first__bit Int)

(declare-const skein__skein_512_context__x__last__bit Int)

(declare-const skein__skein_512_context__x__position Int)

;; "skein__skein_512_context__x__first__bit_axiom"
(assert (<= 0 skein__skein_512_context__x__first__bit))

;; "skein__skein_512_context__x__last__bit_axiom"
(assert
  (< skein__skein_512_context__x__first__bit skein__skein_512_context__x__last__bit))

;; "skein__skein_512_context__x__position_axiom"
(assert (<= 0 skein__skein_512_context__x__position))

(declare-const skein__skein_512_context__b__first__bit Int)

(declare-const skein__skein_512_context__b__last__bit Int)

(declare-const skein__skein_512_context__b__position Int)

;; "skein__skein_512_context__b__first__bit_axiom"
(assert (<= 0 skein__skein_512_context__b__first__bit))

;; "skein__skein_512_context__b__last__bit_axiom"
(assert
  (< skein__skein_512_context__b__first__bit skein__skein_512_context__b__last__bit))

;; "skein__skein_512_context__b__position_axiom"
(assert (<= 0 skein__skein_512_context__b__position))

(declare-const dummy2 us_rep2)

;; "hash_bit_len_of"
(define-fun hash_bit_len_of ((param__ctx us_rep2)) (_ BitVec 64)
  (to_rep5
    (rec__skein__context_header__hash_bit_len
      (us_split_fields3
        (rec__skein__skein_512_context__h (us_split_fields5 param__ctx))))))

;; "byte_count_of"
(define-fun byte_count_of ((param__ctx us_rep2)) (_ BitVec 64)
  (to_rep2
    (rec__skein__context_header__byte_count
      (us_split_fields3
        (rec__skein__skein_512_context__h (us_split_fields5 param__ctx))))))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_623 us_rep2) (temp___is_init_619 Bool) (temp___skip_constant_620 Bool) (temp___do_toplevel_621 Bool) (temp___do_typ_inv_622 Bool)) Bool
  true)

(declare-sort unsigned_64 0)

(declare-const attr__ATTRIBUTE_MODULUS5 (_ BitVec 64))

;; "to_rep"
(declare-fun to_rep7 (unsigned_64) (_ BitVec 64))

;; "of_rep"
(declare-fun of_rep7 ((_ BitVec 64)) unsigned_64)

;; "inversion_axiom"
(assert
  (forall ((x unsigned_64))
    (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 64)))
    (! (= (to_rep7 (of_rep7 x)) x) :pattern ((to_rep7 (of_rep7 x))) )))

(declare-datatypes ((t 0))
  (((tqtmk (rec__first unsigned_64)(rec__last unsigned_64)))))

;; "dynamic_property"
(define-fun dynamic_property ((range_first (_ BitVec 64)) (range_last (_ BitVec 64)) (low (_ BitVec 64)) (high (_ BitVec 64))) Bool
  true)

(declare-datatypes ((us_t 0))
  (((us_tqtmk (elts (Array (_ BitVec 64) byte))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array (_ BitVec 64) byte)
  (elts a))

;; "first"
(define-fun first ((a us_t)) (_ BitVec 64)
  (to_rep7 (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) (_ BitVec 64)
  (to_rep7 (rec__last (rt a))))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const component__size2 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-const msg us_t)

(declare-const attr__ATTRIBUTE_MODULUS6 (_ BitVec 64))

;; "in_range"
(define-fun in_range3 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000001 x) (bvule x #xFFFFFFFFFFFFFFF8)))

(declare-const attr__ATTRIBUTE_MODULUS7 (_ BitVec 64))

;; "in_range"
(define-fun in_range4 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000000 x) (bvule x #x0000000000000040)))

(declare-const c239b (_ BitVec 64))

(declare-const c240b (_ BitVec 64))

(declare-const c242b (_ BitVec 64))

(declare-const c243b (_ BitVec 64))

(declare-const attr__ATTRIBUTE_MODULUS8 (_ BitVec 64))

;; "in_range"
(define-fun in_range5 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000000 x) (bvule x #x000000000000003F)))

(declare-const attr__ATTRIBUTE_MODULUS9 (_ BitVec 64))

;; "in_range"
(define-fun in_range6 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000001 x) (bvule x #x03FFFFFFFFFFFFFF)))

;; "dynamic_invariant"
(define-fun dynamic_invariant1 ((temp___expr_363 us_t) (temp___is_init_359 Bool) (temp___skip_constant_360 Bool) (temp___do_toplevel_361 Bool) (temp___do_typ_inv_362 Bool)) Bool
  (and
    (=>
      (not (= temp___skip_constant_360 true))
      (dynamic_property
        #x0000000000000000
        #xFFFFFFFFFFFFFFFF
        (first temp___expr_363)
        (last temp___expr_363)))
    (=>
      (= temp___is_init_359 true)
      (=>
        (= temp___do_toplevel_361 true)
        (bvult (last temp___expr_363) #xFFFFFFFFFFFFFFFF)))))

;; Goal "def'vc"
;; File "skein.ads", line 184, characters 0-0
(assert
  (not
  (forall ((ctx__split_fields us_split_fields4) (n (_ BitVec 64)) (block_count (_ BitVec 64)) (dst (_ BitVec 64)) (final_dst (_ BitVec 64)) (dst1 (_ BitVec 64)) (final_dst1 (_ BitVec 64)))
    (=>
      (dynamic_invariant
        (us_repqtmk2 ctx__split_fields)
        true
        false
        true
        true)
      (=>
        (dynamic_invariant1 msg true false true true)
        (=>
          (and
            (and
              (and
                (and
                  (and
                    (in_range3
                      (hash_bit_len_of (us_repqtmk2 ctx__split_fields)))
                    (in_range4
                      (byte_count_of (us_repqtmk2 ctx__split_fields))))
                  (= (first msg) #x0000000000000000))
                (bvult (last msg) #xFFFFFFFFFFFFFFFF))
              (= (add_in_range (last msg) #x0000000000000040) true))
            (bvult (bvadd (last msg) #x0000000000000040) #xFFFFFFFFFFFFFFFF))
          (let ((temp___old_1098 (hash_bit_len_of
                                   (us_repqtmk2 ctx__split_fields))))
            (=>
              (and
                (in_range2 temp___old_1098)
                (= temp___old_1098 (to_rep5
                                     (rec__skein__context_header__hash_bit_len
                                       (us_split_fields3
                                         (rec__skein__skein_512_context__h
                                           ctx__split_fields))))))
              (=>
                (in_range5 n)
                (=>
                  (in_range6 block_count)
                  (forall ((msg_byte_count (_ BitVec 64)))
                    (=>
                      (= msg_byte_count (bvadd (last msg) #x0000000000000001))
                      (forall ((current_msg_offset (_ BitVec 64)))
                        (=>
                          (= current_msg_offset #x0000000000000000)
                          (forall ((spark__branch Bool) (ctx__split_fields1 us_split_fields4) (msg_byte_count1 (_ BitVec 64)) (current_msg_offset1 (_ BitVec 64)))
                            (=>
                              (exists ((o (_ BitVec 64)))
                                (and
                                  (= (to_rep2
                                       (rec__skein__context_header__byte_count
                                         (us_split_fields3
                                           (rec__skein__skein_512_context__h
                                             ctx__split_fields)))) o)
                                  (exists ((spark__branch1 Bool))
                                    (and
                                      (= spark__branch1 (ite (bvugt (bvadd msg_byte_count o) #x0000000000000040)
                                                          true
                                                          false))
                                      (ite (= spark__branch1 true)
                                        (exists ((spark__branch2 Bool) (ctx__split_fields2 us_split_fields4) (msg_byte_count2 (_ BitVec 64)) (current_msg_offset2 (_ BitVec 64)))
                                          (and
                                            (exists ((o1 (_ BitVec 64)))
                                              (and
                                                (= (to_rep2
                                                     (rec__skein__context_header__byte_count
                                                       (us_split_fields3
                                                         (rec__skein__skein_512_context__h
                                                           ctx__split_fields)))) o1)
                                                (exists ((spark__branch3 Bool))
                                                  (and
                                                    (= spark__branch3 
                                                    (ite (bvugt o1 #x0000000000000000)
                                                      true
                                                      false))
                                                    (ite (= spark__branch3 true)
                                                      (exists ((o2 (_ BitVec 64)))
                                                        (and
                                                          (= (to_rep2
                                                               (rec__skein__context_header__byte_count
                                                                 (us_split_fields3
                                                                   (rec__skein__skein_512_context__h
                                                                    ctx__split_fields)))) o2)
                                                          (let ((o3 (bvsub #x0000000000000040 o2)))
                                                            (and
                                                              (in_range5 o3)
                                                              (exists 
                                                                ((n1 (_ BitVec 64)))
                                                                (and
                                                                  (= n1 o3)
                                                                  (and
                                                                    (= current_msg_offset 
                                                                    c239b)
                                                                    (and
                                                                    (= n1 
                                                                    c240b)
                                                                    (exists 
                                                                    ((ctx__split_fields3 us_split_fields4))
                                                                    (and
                                                                    (and
                                                                    (in_range5
                                                                    dst)
                                                                    (and
                                                                    (in_range5
                                                                    final_dst)
                                                                    (and
                                                                    (= spark__branch2 
                                                                    (ite (bvugt 
                                                                    c240b #x0000000000000000)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch2 true)
                                                                    (exists 
                                                                    ((src (_ BitVec 64)))
                                                                    (and
                                                                    (= src 
                                                                    c239b)
                                                                    (exists 
                                                                    ((o4 (_ BitVec 64)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields)))) o4)
                                                                    (and
                                                                    (in_range5
                                                                    o4)
                                                                    (exists 
                                                                    ((dst2 (_ BitVec 64)))
                                                                    (and
                                                                    (= dst2 o4)
                                                                    (let ((o5 (bvadd dst2 (bvsub 
                                                                    c240b #x0000000000000001))))
                                                                    (and
                                                                    (in_range5
                                                                    o5)
                                                                    (exists 
                                                                    ((final_dst2 (_ BitVec 64)))
                                                                    (and
                                                                    (= final_dst2 o5)
                                                                    (exists 
                                                                    ((final_src (_ BitVec 64)))
                                                                    (and
                                                                    (= final_src (bvadd src (bvsub 
                                                                    c240b #x0000000000000001)))
                                                                    (exists 
                                                                    ((ctx__split_fields4 us_split_fields4))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (bvule 
                                                                    (first
                                                                    msg) src)
                                                                    (bvule src 
                                                                    (last
                                                                    msg)))
                                                                    (exists 
                                                                    ((o6 (_ BitVec 8)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep6
                                                                    (select 
                                                                    (to_array
                                                                    msg) src)) o6)
                                                                    (exists 
                                                                    ((o7 byte))
                                                                    (and
                                                                    (= 
                                                                    (to_rep6
                                                                    o7) o6)
                                                                    (exists 
                                                                    ((ctx__split_fields5 us_split_fields4))
                                                                    (and
                                                                    (= ctx__split_fields5 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields)
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    ctx__split_fields) dst2 o7)))
                                                                    (exists 
                                                                    ((src1 (_ BitVec 64)) (dst3 (_ BitVec 64)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (in_range5
                                                                    dst3)
                                                                    (dynamic_invariant
                                                                    (us_repqtmk2
                                                                    ctx__split_fields4)
                                                                    true
                                                                    true
                                                                    true
                                                                    true))
                                                                    (and
                                                                    (= 
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4) 
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields))
                                                                    (= 
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields4) 
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields))))
                                                                    (= (or 
                                                                    (ite (bvuge dst3 final_dst2)
                                                                    true
                                                                    false) 
                                                                    (ite (bvuge src1 final_src)
                                                                    true
                                                                    false)) true))))))))))
                                                                    (let ((usq_ 
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4))))
                                                                    (exists 
                                                                    ((o6 (_ BitVec 64)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4)))) o6)
                                                                    (exists 
                                                                    ((o7 u64))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    o7) (bvadd o6 
                                                                    c240b))
                                                                    (= ctx__split_fields3 
                                                                    (us_split_fieldsqtmk2
                                                                    (us_repqtmk1
                                                                    (us_split_fieldsqtmk1
                                                                    (rec__skein__context_header__tweak_words
                                                                    usq_)
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    usq_)
                                                                    o7))
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields4)
                                                                    (rec__skein__skein_512_context__b
                                                                    ctx__split_fields4)))))))))))))))))))))))
                                                                    (= ctx__split_fields3 ctx__split_fields)))))
                                                                    (and
                                                                    (= msg_byte_count2 (bvsub msg_byte_count n1))
                                                                    (and
                                                                    (= current_msg_offset2 (bvadd current_msg_offset n1))
                                                                    (exists 
                                                                    ((tmp_b (Array (_ BitVec 64) byte)))
                                                                    (and
                                                                    (= tmp_b 
                                                                    (rec__skein__skein_512_context__b
                                                                    ctx__split_fields3))
                                                                    (and
                                                                    (bvult #x000000000000003F #xFFFFFFFFFFFFFFFF)
                                                                    (and
                                                                    (dynamic_property
                                                                    #x0000000000000000
                                                                    #xFFFFFFFFFFFFFFFF
                                                                    #x0000000000000000
                                                                    #x000000000000003F)
                                                                    (exists 
                                                                    ((ctx__split_fields4 us_split_fields4))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (in_range3
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4)))))
                                                                    (= 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4)))) 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields3))))))
                                                                    (in_range4
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4))))))
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4)))) 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields3))))))
                                                                    (dynamic_invariant
                                                                    (us_repqtmk2
                                                                    ctx__split_fields4)
                                                                    true
                                                                    true
                                                                    true
                                                                    true))
                                                                    (let ((usq_ 
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields4))))
                                                                    (exists 
                                                                    ((o4 u64))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    o4) #x0000000000000000)
                                                                    (= ctx__split_fields2 
                                                                    (us_split_fieldsqtmk2
                                                                    (us_repqtmk1
                                                                    (us_split_fieldsqtmk1
                                                                    (rec__skein__context_header__tweak_words
                                                                    usq_)
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    usq_)
                                                                    o4))
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields4)
                                                                    (rec__skein__skein_512_context__b
                                                                    ctx__split_fields4))))))))))))))))))))))))
                                                      (and
                                                        (and
                                                          (and
                                                            (= spark__branch2 spark__branch3)
                                                            (= ctx__split_fields2 ctx__split_fields))
                                                          (= msg_byte_count2 msg_byte_count))
                                                        (= current_msg_offset2 current_msg_offset)))))))
                                            (and
                                              (= spark__branch (ite (bvugt msg_byte_count2 #x0000000000000040)
                                                                 true
                                                                 false))
                                              (ite (= spark__branch true)
                                                (let ((o1 (bvudiv (bvsub msg_byte_count2 #x0000000000000001) #x0000000000000040)))
                                                  (and
                                                    (in_range6 o1)
                                                    (exists ((block_count1 (_ BitVec 64)))
                                                      (and
                                                        (= block_count1 o1)
                                                        (and
                                                          (and
                                                            (and
                                                              (and
                                                                (and
                                                                  (in_range3
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields1)))))
                                                                  (= 
                                                                  (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields1)))) 
                                                                  (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields2))))))
                                                                (in_range4
                                                                  (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields1))))))
                                                              (= (to_rep2
                                                                   (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields1)))) 
                                                              (to_rep2
                                                                (rec__skein__context_header__byte_count
                                                                  (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields2))))))
                                                            (dynamic_invariant
                                                              (us_repqtmk2
                                                                ctx__split_fields1)
                                                              true
                                                              true
                                                              true
                                                              true))
                                                          (exists ((bytes_hashed (_ BitVec 64)))
                                                            (and
                                                              (= bytes_hashed (bvmul block_count1 #x0000000000000040))
                                                              (and
                                                                (= msg_byte_count1 (bvsub msg_byte_count2 bytes_hashed))
                                                                (= current_msg_offset1 (bvadd current_msg_offset2 bytes_hashed))))))))))
                                                (and
                                                  (and
                                                    (= ctx__split_fields1 ctx__split_fields2)
                                                    (= msg_byte_count1 msg_byte_count2))
                                                  (= current_msg_offset1 current_msg_offset2))))))
                                        (and
                                          (and
                                            (and
                                              (= spark__branch spark__branch1)
                                              (= ctx__split_fields1 ctx__split_fields))
                                            (= msg_byte_count1 msg_byte_count))
                                          (= current_msg_offset1 current_msg_offset)))))))
                              (=>
                                (= current_msg_offset1 c242b)
                                (=>
                                  (= msg_byte_count1 c243b)
                                  (forall ((ctx__split_fields2 us_split_fields4))
                                    (=>
                                      (and
                                        (in_range5 dst1)
                                        (and
                                          (in_range5 final_dst1)
                                          (exists ((spark__branch1 Bool))
                                            (and
                                              (= spark__branch1 (ite (bvugt 
                                                                  c243b #x0000000000000000)
                                                                  true
                                                                  false))
                                              (ite (= spark__branch1 true)
                                                (exists ((src (_ BitVec 64)))
                                                  (and
                                                    (= src c242b)
                                                    (exists ((o (_ BitVec 64)))
                                                      (and
                                                        (= (to_rep2
                                                             (rec__skein__context_header__byte_count
                                                               (us_split_fields3
                                                                 (rec__skein__skein_512_context__h
                                                                   ctx__split_fields1)))) o)
                                                        (and
                                                          (in_range5 o)
                                                          (exists ((dst2 (_ BitVec 64)))
                                                            (and
                                                              (= dst2 o)
                                                              (let ((o1 (bvadd dst2 (bvsub 
                                                                c243b #x0000000000000001))))
                                                                (and
                                                                  (in_range5
                                                                    o1)
                                                                  (exists 
                                                                    ((final_dst2 (_ BitVec 64)))
                                                                    (and
                                                                    (= final_dst2 o1)
                                                                    (exists 
                                                                    ((final_src (_ BitVec 64)))
                                                                    (and
                                                                    (= final_src (bvadd src (bvsub 
                                                                    c243b #x0000000000000001)))
                                                                    (exists 
                                                                    ((ctx__split_fields3 us_split_fields4))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (bvule 
                                                                    (first
                                                                    msg) src)
                                                                    (bvule src 
                                                                    (last
                                                                    msg)))
                                                                    (exists 
                                                                    ((o2 (_ BitVec 8)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep6
                                                                    (select 
                                                                    (to_array
                                                                    msg) src)) o2)
                                                                    (exists 
                                                                    ((o3 byte))
                                                                    (and
                                                                    (= 
                                                                    (to_rep6
                                                                    o3) o2)
                                                                    (exists 
                                                                    ((ctx__split_fields4 us_split_fields4))
                                                                    (and
                                                                    (= ctx__split_fields4 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields1)
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields1)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    ctx__split_fields1) dst2 o3)))
                                                                    (exists 
                                                                    ((src1 (_ BitVec 64)) (dst3 (_ BitVec 64)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (in_range5
                                                                    dst3)
                                                                    (dynamic_invariant
                                                                    (us_repqtmk2
                                                                    ctx__split_fields3)
                                                                    true
                                                                    true
                                                                    true
                                                                    true))
                                                                    (and
                                                                    (= 
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields3) 
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields1))
                                                                    (= 
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields3) 
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields1))))
                                                                    (= (or 
                                                                    (ite (bvuge dst3 final_dst2)
                                                                    true
                                                                    false) 
                                                                    (ite (bvuge src1 final_src)
                                                                    true
                                                                    false)) true))))))))))
                                                                    (let ((usq_ 
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields3))))
                                                                    (exists 
                                                                    ((o2 (_ BitVec 64)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    ctx__split_fields3)))) o2)
                                                                    (exists 
                                                                    ((o3 u64))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    o3) (bvadd o2 
                                                                    c243b))
                                                                    (= ctx__split_fields2 
                                                                    (us_split_fieldsqtmk2
                                                                    (us_repqtmk1
                                                                    (us_split_fieldsqtmk1
                                                                    (rec__skein__context_header__tweak_words
                                                                    usq_)
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    usq_)
                                                                    o3))
                                                                    (rec__skein__skein_512_context__x
                                                                    ctx__split_fields3)
                                                                    (rec__skein__skein_512_context__b
                                                                    ctx__split_fields3)))))))))))))))))))))))
                                                (= ctx__split_fields2 ctx__split_fields1))))))
                                      (bvule #x0000000000000001 (hash_bit_len_of
                                                                  (us_repqtmk2
                                                                    ctx__split_fields2)))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
