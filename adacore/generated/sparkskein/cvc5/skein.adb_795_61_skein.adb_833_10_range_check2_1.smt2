;; produced by cvc5.drv ;;
(set-logic ALL)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

;; "pow2"
(declare-fun pow2 (Int) Int)

(declare-const two_power_size_minus_one Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one (pow2 (- 8 1))))

;; "min"
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; "max"
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; "Min_r"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; "Max_l"
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; "Min_comm"
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; "Max_comm"
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; "Min_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; "Max_assoc"
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(declare-const two_power_size_minus_one1 Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one1 (pow2 (- 16 1))))

(declare-const two_power_size_minus_one2 Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one2 (pow2 (- 32 1))))

;; "lsr"
(declare-fun lsr ((_ BitVec 64)
  Int) (_ BitVec 64))

(declare-const two_power_size_minus_one3 Int)

;; "two_power_size_minus_one_val"
(assert (= two_power_size_minus_one3 (pow2 (- 64 1))))

;; "lsr_bv_is_lsr"
(assert
  (forall ((x (_ BitVec 64)) (n (_ BitVec 64)))
    (= (bvlshr x n) (lsr x (bv2nat n)))))

(declare-sort u16 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 16))

;; "to_rep"
(declare-fun to_rep (u16) (_ BitVec 16))

;; "of_rep"
(declare-fun of_rep ((_ BitVec 16)) u16)

;; "inversion_axiom"
(assert
  (forall ((x u16)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 16)))
    (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))) )))

(declare-sort u32 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))

;; "to_rep"
(declare-fun to_rep1 (u32) (_ BitVec 32))

;; "of_rep"
(declare-fun of_rep1 ((_ BitVec 32)) u32)

;; "inversion_axiom"
(assert
  (forall ((x u32)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 32)))
    (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))) )))

(declare-sort u64 0)

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 64))

;; "to_rep"
(declare-fun to_rep2 (u64) (_ BitVec 64))

;; "of_rep"
(declare-fun of_rep2 ((_ BitVec 64)) u64)

;; "inversion_axiom"
(assert
  (forall ((x u64)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 64)))
    (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(declare-sort u7 0)

;; "in_range"
(define-fun in_range ((x (_ BitVec 8))) Bool
  (and (bvule #x00 x) (bvule x #x7F)))

;; "to_rep"
(declare-fun to_rep3 (u7) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep3 ((_ BitVec 8)) u7)

;; "inversion_axiom"
(assert
  (forall ((x u7)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; "range_axiom"
(assert (forall ((x u7)) (! (in_range (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (let ((y (bvurem x #x80)))
         (=> (in_range y) (= (to_rep3 (of_rep3 x)) y))) :pattern ((to_rep3
                                                                    (of_rep3
                                                                    x))) )))

(declare-sort u6 0)

;; "in_range"
(define-fun in_range1 ((x (_ BitVec 8))) Bool
  (and (bvule #x00 x) (bvule x #x3F)))

;; "to_rep"
(declare-fun to_rep4 (u6) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep4 ((_ BitVec 8)) u6)

;; "inversion_axiom"
(assert
  (forall ((x u6)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; "range_axiom"
(assert
  (forall ((x u6)) (! (in_range1 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (let ((y (bvurem x #x40)))
         (=> (in_range1 y) (= (to_rep4 (of_rep4 x)) y))) :pattern ((to_rep4
                                                                    (of_rep4
                                                                    x))) )))

(declare-datatypes ((us_split_fields 0))
  (((us_split_fieldsqtmk
    (rec__skein__tweak_value__byte_count_lsb u64)(rec__skein__tweak_value__byte_count_msb u32)(rec__skein__tweak_value__reserved u16)(rec__skein__tweak_value__tree_level u7)(rec__skein__tweak_value__bit_pad Bool)(rec__skein__tweak_value__field_type u6)(rec__skein__tweak_value__first_block Bool)(rec__skein__tweak_value__final_block Bool)))))

(declare-datatypes ((us_rep 0))
  (((us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const skein__tweak_value__byte_count_lsb__first__bit Int)

(declare-const skein__tweak_value__byte_count_lsb__last__bit Int)

(declare-const skein__tweak_value__byte_count_lsb__position Int)

;; "skein__tweak_value__byte_count_lsb__first__bit_axiom"
(assert (<= 0 skein__tweak_value__byte_count_lsb__first__bit))

;; "skein__tweak_value__byte_count_lsb__last__bit_axiom"
(assert
  (< skein__tweak_value__byte_count_lsb__first__bit skein__tweak_value__byte_count_lsb__last__bit))

;; "skein__tweak_value__byte_count_lsb__position_axiom"
(assert (<= 0 skein__tweak_value__byte_count_lsb__position))

(declare-const skein__tweak_value__byte_count_msb__first__bit Int)

(declare-const skein__tweak_value__byte_count_msb__last__bit Int)

(declare-const skein__tweak_value__byte_count_msb__position Int)

;; "skein__tweak_value__byte_count_msb__first__bit_axiom"
(assert (<= 0 skein__tweak_value__byte_count_msb__first__bit))

;; "skein__tweak_value__byte_count_msb__last__bit_axiom"
(assert
  (< skein__tweak_value__byte_count_msb__first__bit skein__tweak_value__byte_count_msb__last__bit))

;; "skein__tweak_value__byte_count_msb__position_axiom"
(assert (<= 0 skein__tweak_value__byte_count_msb__position))

(declare-const skein__tweak_value__reserved__first__bit Int)

(declare-const skein__tweak_value__reserved__last__bit Int)

(declare-const skein__tweak_value__reserved__position Int)

;; "skein__tweak_value__reserved__first__bit_axiom"
(assert (<= 0 skein__tweak_value__reserved__first__bit))

;; "skein__tweak_value__reserved__last__bit_axiom"
(assert
  (< skein__tweak_value__reserved__first__bit skein__tweak_value__reserved__last__bit))

;; "skein__tweak_value__reserved__position_axiom"
(assert (<= 0 skein__tweak_value__reserved__position))

(declare-const skein__tweak_value__tree_level__first__bit Int)

(declare-const skein__tweak_value__tree_level__last__bit Int)

(declare-const skein__tweak_value__tree_level__position Int)

;; "skein__tweak_value__tree_level__first__bit_axiom"
(assert (<= 0 skein__tweak_value__tree_level__first__bit))

;; "skein__tweak_value__tree_level__last__bit_axiom"
(assert
  (< skein__tweak_value__tree_level__first__bit skein__tweak_value__tree_level__last__bit))

;; "skein__tweak_value__tree_level__position_axiom"
(assert (<= 0 skein__tweak_value__tree_level__position))

(declare-const skein__tweak_value__bit_pad__first__bit Int)

(declare-const skein__tweak_value__bit_pad__last__bit Int)

(declare-const skein__tweak_value__bit_pad__position Int)

;; "skein__tweak_value__bit_pad__first__bit_axiom"
(assert (<= 0 skein__tweak_value__bit_pad__first__bit))

;; "skein__tweak_value__bit_pad__last__bit_axiom"
(assert
  (< skein__tweak_value__bit_pad__first__bit skein__tweak_value__bit_pad__last__bit))

;; "skein__tweak_value__bit_pad__position_axiom"
(assert (<= 0 skein__tweak_value__bit_pad__position))

(declare-const skein__tweak_value__field_type__first__bit Int)

(declare-const skein__tweak_value__field_type__last__bit Int)

(declare-const skein__tweak_value__field_type__position Int)

;; "skein__tweak_value__field_type__first__bit_axiom"
(assert (<= 0 skein__tweak_value__field_type__first__bit))

;; "skein__tweak_value__field_type__last__bit_axiom"
(assert
  (< skein__tweak_value__field_type__first__bit skein__tweak_value__field_type__last__bit))

;; "skein__tweak_value__field_type__position_axiom"
(assert (<= 0 skein__tweak_value__field_type__position))

(declare-const skein__tweak_value__first_block__first__bit Int)

(declare-const skein__tweak_value__first_block__last__bit Int)

(declare-const skein__tweak_value__first_block__position Int)

;; "skein__tweak_value__first_block__first__bit_axiom"
(assert (<= 0 skein__tweak_value__first_block__first__bit))

;; "skein__tweak_value__first_block__last__bit_axiom"
(assert
  (< skein__tweak_value__first_block__first__bit skein__tweak_value__first_block__last__bit))

;; "skein__tweak_value__first_block__position_axiom"
(assert (<= 0 skein__tweak_value__first_block__position))

(declare-const skein__tweak_value__final_block__first__bit Int)

(declare-const skein__tweak_value__final_block__last__bit Int)

(declare-const skein__tweak_value__final_block__position Int)

;; "skein__tweak_value__final_block__first__bit_axiom"
(assert (<= 0 skein__tweak_value__final_block__first__bit))

;; "skein__tweak_value__final_block__last__bit_axiom"
(assert
  (< skein__tweak_value__final_block__first__bit skein__tweak_value__final_block__last__bit))

;; "skein__tweak_value__final_block__position_axiom"
(assert (<= 0 skein__tweak_value__final_block__position))

(declare-const dummy us_rep)

(declare-sort hash_bit_length 0)

(declare-const attr__ATTRIBUTE_MODULUS3 (_ BitVec 64))

;; "in_range"
(define-fun in_range2 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000000 x) (bvule x #xFFFFFFFFFFFFFFF8)))

;; "to_rep"
(declare-fun to_rep5 (hash_bit_length) (_ BitVec 64))

;; "of_rep"
(declare-fun of_rep5 ((_ BitVec 64)) hash_bit_length)

;; "inversion_axiom"
(assert
  (forall ((x hash_bit_length))
    (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; "range_axiom"
(assert
  (forall ((x hash_bit_length))
    (! (in_range2 (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 64)))
    (! (=> (in_range2 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                                  (of_rep5 x))) )))

(declare-datatypes ((us_split_fields2 0))
  (((us_split_fieldsqtmk1
    (rec__skein__context_header__tweak_words us_rep)(rec__skein__context_header__hash_bit_len hash_bit_length)(rec__skein__context_header__byte_count u64)))))

(declare-datatypes ((us_rep1 0))
  (((us_repqtmk1 (us_split_fields3 us_split_fields2)))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const skein__context_header__tweak_words__first__bit Int)

(declare-const skein__context_header__tweak_words__last__bit Int)

(declare-const skein__context_header__tweak_words__position Int)

;; "skein__context_header__tweak_words__first__bit_axiom"
(assert (<= 0 skein__context_header__tweak_words__first__bit))

;; "skein__context_header__tweak_words__last__bit_axiom"
(assert
  (< skein__context_header__tweak_words__first__bit skein__context_header__tweak_words__last__bit))

;; "skein__context_header__tweak_words__position_axiom"
(assert (<= 0 skein__context_header__tweak_words__position))

(declare-const skein__context_header__hash_bit_len__first__bit Int)

(declare-const skein__context_header__hash_bit_len__last__bit Int)

(declare-const skein__context_header__hash_bit_len__position Int)

;; "skein__context_header__hash_bit_len__first__bit_axiom"
(assert (<= 0 skein__context_header__hash_bit_len__first__bit))

;; "skein__context_header__hash_bit_len__last__bit_axiom"
(assert
  (< skein__context_header__hash_bit_len__first__bit skein__context_header__hash_bit_len__last__bit))

;; "skein__context_header__hash_bit_len__position_axiom"
(assert (<= 0 skein__context_header__hash_bit_len__position))

(declare-const skein__context_header__byte_count__first__bit Int)

(declare-const skein__context_header__byte_count__last__bit Int)

(declare-const skein__context_header__byte_count__position Int)

;; "skein__context_header__byte_count__first__bit_axiom"
(assert (<= 0 skein__context_header__byte_count__first__bit))

;; "skein__context_header__byte_count__last__bit_axiom"
(assert
  (< skein__context_header__byte_count__first__bit skein__context_header__byte_count__last__bit))

;; "skein__context_header__byte_count__position_axiom"
(assert (<= 0 skein__context_header__byte_count__position))

(declare-const dummy1 us_rep1)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size Int)

(declare-const alignment2 Int)

;; "value__size_axiom"
(assert (<= 0 value__size2))

;; "object__size_axiom"
(assert (<= 0 object__size2))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment2))

(declare-sort byte 0)

(declare-const attr__ATTRIBUTE_MODULUS4 (_ BitVec 8))

;; "to_rep"
(declare-fun to_rep6 (byte) (_ BitVec 8))

;; "of_rep"
(declare-fun of_rep6 ((_ BitVec 8)) byte)

;; "inversion_axiom"
(assert
  (forall ((x byte)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 8)))
    (! (= (to_rep6 (of_rep6 x)) x) :pattern ((to_rep6 (of_rep6 x))) )))

;; "slide"
(declare-fun slide ((Array (_ BitVec 64) byte)
  (_ BitVec 64)
  (_ BitVec 64)) (Array (_ BitVec 64) byte))

;; "slide_eq"
(assert
  (forall ((a (Array (_ BitVec 64) byte)))
    (forall ((first (_ BitVec 64)))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; "slide_def"
(assert
  (forall ((a (Array (_ BitVec 64) byte)))
    (forall ((old_first (_ BitVec 64)))
      (forall ((new_first (_ BitVec 64)))
        (forall ((i (_ BitVec 64)))
          (! (= (select (slide a old_first new_first) i) (select a (bvsub i (bvsub new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; "value__size_axiom"
(assert (<= 0 value__size3))

;; "object__size_axiom"
(assert (<= 0 object__size3))

;; "component__size_axiom"
(assert (<= 0 component__size1))

;; "alignment_axiom"
(assert (<= 0 alignment3))

(declare-datatypes ((us_split_fields4 0))
  (((us_split_fieldsqtmk2
    (rec__skein__skein_512_context__h us_rep1)(rec__skein__skein_512_context__x (Array (_ BitVec 64) u64))(rec__skein__skein_512_context__b (Array (_ BitVec 64) byte))))))

(declare-datatypes ((us_rep2 0))
  (((us_repqtmk2 (us_split_fields5 us_split_fields4)))))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; "value__size_axiom"
(assert (<= 0 value__size4))

;; "object__size_axiom"
(assert (<= 0 object__size4))

;; "alignment_axiom"
(assert (<= 0 alignment4))

(declare-const skein__skein_512_context__h__first__bit Int)

(declare-const skein__skein_512_context__h__last__bit Int)

(declare-const skein__skein_512_context__h__position Int)

;; "skein__skein_512_context__h__first__bit_axiom"
(assert (<= 0 skein__skein_512_context__h__first__bit))

;; "skein__skein_512_context__h__last__bit_axiom"
(assert
  (< skein__skein_512_context__h__first__bit skein__skein_512_context__h__last__bit))

;; "skein__skein_512_context__h__position_axiom"
(assert (<= 0 skein__skein_512_context__h__position))

(declare-const skein__skein_512_context__x__first__bit Int)

(declare-const skein__skein_512_context__x__last__bit Int)

(declare-const skein__skein_512_context__x__position Int)

;; "skein__skein_512_context__x__first__bit_axiom"
(assert (<= 0 skein__skein_512_context__x__first__bit))

;; "skein__skein_512_context__x__last__bit_axiom"
(assert
  (< skein__skein_512_context__x__first__bit skein__skein_512_context__x__last__bit))

;; "skein__skein_512_context__x__position_axiom"
(assert (<= 0 skein__skein_512_context__x__position))

(declare-const skein__skein_512_context__b__first__bit Int)

(declare-const skein__skein_512_context__b__last__bit Int)

(declare-const skein__skein_512_context__b__position Int)

;; "skein__skein_512_context__b__first__bit_axiom"
(assert (<= 0 skein__skein_512_context__b__first__bit))

;; "skein__skein_512_context__b__last__bit_axiom"
(assert
  (< skein__skein_512_context__b__first__bit skein__skein_512_context__b__last__bit))

;; "skein__skein_512_context__b__position_axiom"
(assert (<= 0 skein__skein_512_context__b__position))

(declare-const dummy2 us_rep2)

;; "hash_bit_len_of"
(define-fun hash_bit_len_of ((param__ctx us_rep2)) (_ BitVec 64)
  (to_rep5
    (rec__skein__context_header__hash_bit_len
      (us_split_fields3
        (rec__skein__skein_512_context__h (us_split_fields5 param__ctx))))))

;; "byte_count_of"
(define-fun byte_count_of ((param__ctx us_rep2)) (_ BitVec 64)
  (to_rep2
    (rec__skein__context_header__byte_count
      (us_split_fields3
        (rec__skein__skein_512_context__h (us_split_fields5 param__ctx))))))

;; "dynamic_invariant"
(define-fun dynamic_invariant ((temp___expr_623 us_rep2) (temp___is_init_619 Bool) (temp___skip_constant_620 Bool) (temp___do_toplevel_621 Bool) (temp___do_typ_inv_622 Bool)) Bool
  true)

(declare-sort unsigned_64 0)

(declare-const attr__ATTRIBUTE_MODULUS5 (_ BitVec 64))

;; "to_rep"
(declare-fun to_rep7 (unsigned_64) (_ BitVec 64))

;; "of_rep"
(declare-fun of_rep7 ((_ BitVec 64)) unsigned_64)

;; "inversion_axiom"
(assert
  (forall ((x unsigned_64))
    (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)) )))

;; "range_axiom"
(assert true)

;; "coerce_axiom"
(assert
  (forall ((x (_ BitVec 64)))
    (! (= (to_rep7 (of_rep7 x)) x) :pattern ((to_rep7 (of_rep7 x))) )))

(declare-datatypes ((t 0))
  (((tqtmk (rec__first unsigned_64)(rec__last unsigned_64)))))

;; "mk"
(declare-fun mk ((_ BitVec 64)
  (_ BitVec 64)) t)

;; "mk_def"
(assert
  (forall ((f (_ BitVec 64)) (l (_ BitVec 64)))
    (! (and
         (= (to_rep7 (rec__first (mk f l))) f)
         (= (to_rep7 (rec__last (mk f l))) l)) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first (_ BitVec 64)) (range_last (_ BitVec 64)) (low (_ BitVec 64)) (high (_ BitVec 64))) Bool
  true)

(declare-datatypes ((us_t 0))
  (((us_tqtmk (elts (Array (_ BitVec 64) byte))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array (_ BitVec 64) byte)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array (_ BitVec 64) byte)) (f (_ BitVec 64)) (l (_ BitVec 64))) us_t
  (us_tqtmk a (mk f l)))

;; "first"
(define-fun first ((a us_t)) (_ BitVec 64)
  (to_rep7 (rec__first (rt a))))

;; "last"
(define-fun last ((a us_t)) (_ BitVec 64)
  (to_rep7 (rec__last (rt a))))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const component__size2 Int)

(declare-const alignment5 Int)

;; "value__size_axiom"
(assert (<= 0 value__size5))

;; "object__size_axiom"
(assert (<= 0 object__size5))

;; "component__size_axiom"
(assert (<= 0 component__size2))

;; "alignment_axiom"
(assert (<= 0 alignment5))

(declare-const ctx us_rep2)

(declare-const hash__first unsigned_64)

(declare-const hash__last unsigned_64)

(declare-const attr__ATTRIBUTE_MODULUS6 (_ BitVec 64))

;; "in_range"
(define-fun in_range3 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000001 x) (bvule x #xFFFFFFFFFFFFFFF8)))

(declare-const attr__ATTRIBUTE_MODULUS7 (_ BitVec 64))

;; "in_range"
(define-fun in_range4 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000000 x) (bvule x #x0000000000000040)))

(declare-const r252b (_ BitVec 64))

(declare-const r256b (_ BitVec 64))

(declare-const c258b (_ BitVec 64))

(declare-const c260b (_ BitVec 8))

(declare-const c261b Bool)

(declare-const c262b Bool)

(declare-const c266b (_ BitVec 64))

(declare-const c268b (Array (_ BitVec 64) u64))

(declare-const c269b (_ BitVec 64))

(declare-const attr__ATTRIBUTE_MODULUS8 (_ BitVec 64))

(declare-const attr__ATTRIBUTE_MODULUS9 (_ BitVec 64))

(declare-const attr__ATTRIBUTE_MODULUS10 (_ BitVec 64))

;; "in_range"
(define-fun in_range5 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000001 x) (bvule x #x1FFFFFFFFFFFFFFF)))

(declare-const attr__ATTRIBUTE_MODULUS11 (_ BitVec 64))

;; "in_range"
(define-fun in_range6 ((x (_ BitVec 64))) Bool
  (and (bvule #x0000000000000001 x) (bvule x #x0080000000000000)))

;; "temp_____aggregate_def_1116"
(declare-fun temp_____aggregate_def_1116 ((_ BitVec 8)
  (_ BitVec 64)
  (_ BitVec 64)) us_t)

(declare-const attr__ATTRIBUTE_MODULUS12 (_ BitVec 64))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const component__size3 Int)

(declare-const alignment6 Int)

;; "value__size_axiom"
(assert (<= 0 value__size6))

;; "object__size_axiom"
(assert (<= 0 object__size6))

;; "component__size_axiom"
(assert (<= 0 component__size3))

;; "alignment_axiom"
(assert (<= 0 alignment6))

;; "temp_____aggregate_def_1165"
(declare-fun temp_____aggregate_def_1165 ((_ BitVec 8)) (Array (_ BitVec 64) byte))

;; Goal "def'vc"
;; File "skein.ads", line 197, characters 0-0
(assert
  (not
  (forall ((local_ctx__split_fields us_split_fields4) (blocks_required (_ BitVec 64)) (byte_count (_ BitVec 64)))
    (=>
      (dynamic_invariant ctx true false true true)
      (=>
        (dynamic_property
          #x0000000000000000
          #xFFFFFFFFFFFFFFFF
          (to_rep7 hash__first)
          (to_rep7 hash__last))
        (=>
          (and
            (and
              (and
                (and
                  (in_range3 (hash_bit_len_of ctx))
                  (in_range4 (byte_count_of ctx)))
                (= (to_rep7 hash__first) #x0000000000000000))
              (bvult (to_rep7 hash__last) #xFFFFFFFFFFFFFFFF))
            (bvule (bvsub (bvudiv (bvadd (hash_bit_len_of ctx) #x0000000000000007) #x0000000000000008) #x0000000000000001) 
            (to_rep7
              hash__last)))
          (=>
            (dynamic_invariant
              (us_repqtmk2 local_ctx__split_fields)
              false
              false
              true
              true)
            (=>
              (in_range6 blocks_required)
              (=>
                (in_range5 byte_count)
                (forall ((local_ctx__split_fields1 us_split_fields4))
                  (=>
                    (= local_ctx__split_fields1 (us_split_fields5 ctx))
                    (forall ((o (_ BitVec 64)))
                      (=>
                        (= (to_rep7 hash__last) o)
                        (forall ((o1 (_ BitVec 64)))
                          (=>
                            (= (to_rep7 hash__first) o1)
                            (forall ((temp___1124 us_t))
                              (=>
                                (and
                                  (and
                                    (and
                                      (= (first temp___1124) o1)
                                      (= (last temp___1124) o))
                                    (forall ((temp___1119 (_ BitVec 64)))
                                      (! (=>
                                           (and
                                             (bvule (first temp___1124) temp___1119)
                                             (bvule temp___1119 (last
                                                                  temp___1124)))
                                           (= (to_rep6
                                                (select (to_array
                                                          temp___1124) temp___1119)) #x00)) :pattern ((select 
                                      (to_array
                                        temp___1124) temp___1119)) )))
                                  (= temp___1124 (temp_____aggregate_def_1116
                                                   #x00
                                                   o1
                                                   o)))
                                (=>
                                  (= (first temp___1124) (to_rep7
                                                           hash__first))
                                  (=>
                                    (= (last temp___1124) (to_rep7
                                                            hash__last))
                                    (=>
                                      (bvult (last temp___1124) #xFFFFFFFFFFFFFFFF)
                                      (=>
                                        (bvult (last temp___1124) #xFFFFFFFFFFFFFFFF)
                                        (=>
                                          (dynamic_property
                                            #x0000000000000000
                                            #xFFFFFFFFFFFFFFFF
                                            (first temp___1124)
                                            (last temp___1124))
                                          (forall ((o2 (_ BitVec 64)))
                                            (=>
                                              (= (to_rep7 hash__last) o2)
                                              (forall ((o3 (_ BitVec 64)))
                                                (=>
                                                  (= (to_rep7 hash__first) o3)
                                                  (=>
                                                    (ite (bvule (first
                                                                  temp___1124) 
                                                      (last
                                                        temp___1124))
                                                      (and
                                                        (bvule o3 o2)
                                                        (= (bvsub (last
                                                                    temp___1124) 
                                                        (first
                                                          temp___1124)) (bvsub o2 o3)))
                                                      (bvult o2 o3))
                                                    (forall ((o4 (_ BitVec 64)))
                                                      (=>
                                                        (= (to_rep7
                                                             hash__first) o4)
                                                        (forall ((o5 (_ BitVec 64)))
                                                          (=>
                                                            (= (to_rep7
                                                                 hash__last) o5)
                                                            (forall ((o6 (_ BitVec 64)))
                                                              (=>
                                                                (= (to_rep7
                                                                    hash__first) o6)
                                                                (forall 
                                                                  ((hash (Array (_ BitVec 64) byte)))
                                                                  (=>
                                                                    (= hash 
                                                                    (slide
                                                                    (to_array
                                                                    temp___1124)
                                                                    (first
                                                                    temp___1124)
                                                                    o4))
                                                                    (let ((usq_ 
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields1))))
                                                                    (let ((usq_1 
                                                                    (us_split_fields1
                                                                    (rec__skein__context_header__tweak_words
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields1))))))
                                                                    (forall 
                                                                    ((local_ctx__split_fields2 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields2 
                                                                    (us_split_fieldsqtmk2
                                                                    (us_repqtmk1
                                                                    (us_split_fieldsqtmk1
                                                                    (us_repqtmk
                                                                    (us_split_fieldsqtmk
                                                                    (rec__skein__tweak_value__byte_count_lsb
                                                                    usq_1)
                                                                    (rec__skein__tweak_value__byte_count_msb
                                                                    usq_1)
                                                                    (rec__skein__tweak_value__reserved
                                                                    usq_1)
                                                                    (rec__skein__tweak_value__tree_level
                                                                    usq_1)
                                                                    (rec__skein__tweak_value__bit_pad
                                                                    usq_1)
                                                                    (rec__skein__tweak_value__field_type
                                                                    usq_1)
                                                                    (rec__skein__tweak_value__first_block
                                                                    usq_1)
                                                                    (distinct 1 0)))
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    usq_)
                                                                    (rec__skein__context_header__byte_count
                                                                    usq_)))
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields1)
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields1)))
                                                                    (forall 
                                                                    ((spark__branch Bool) (local_ctx__split_fields3 us_split_fields4))
                                                                    (=>
                                                                    (exists 
                                                                    ((o7 (_ BitVec 64)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields2)))) o7)
                                                                    (and
                                                                    (= spark__branch 
                                                                    (ite (bvult o7 #x0000000000000040)
                                                                    true
                                                                    false))
                                                                    (ite (= spark__branch true)
                                                                    (exists 
                                                                    ((skein__skein_512_final__B251b__L_10__R252b__assume (_ BitVec 64)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields2)))) skein__skein_512_final__B251b__L_10__R252b__assume)
                                                                    (and
                                                                    (= skein__skein_512_final__B251b__L_10__R252b__assume 
                                                                    r252b)
                                                                    (let ((temp___1147 
                                                                    r252b))
                                                                    (exists 
                                                                    ((i (_ BitVec 64)))
                                                                    (and
                                                                    (= i temp___1147)
                                                                    (ite (= (and 
                                                                    (ite (bvule temp___1147 i)
                                                                    true
                                                                    false) 
                                                                    (ite (bvule i #x000000000000003F)
                                                                    true
                                                                    false)) true)
                                                                    (exists 
                                                                    ((local_ctx__split_fields4 us_split_fields4) (i1 (_ BitVec 64)))
                                                                    (and
                                                                    (= (and 
                                                                    (ite 
                                                                    (and
                                                                    (dynamic_invariant
                                                                    (us_repqtmk2
                                                                    local_ctx__split_fields4)
                                                                    false
                                                                    true
                                                                    true
                                                                    true)
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4) 
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields2))
                                                                    (= 
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields4) 
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields2)))
                                                                    (forall 
                                                                    ((temp___1156 (_ BitVec 64)))
                                                                    (=>
                                                                    (and
                                                                    (bvule #x0000000000000000 temp___1156)
                                                                    (bvule temp___1156 #x000000000000003F))
                                                                    (=>
                                                                    (or
                                                                    (bvult #x000000000000003F temp___1156)
                                                                    (or
                                                                    (bvult temp___1156 temp___1147)
                                                                    (bvule i1 temp___1156)))
                                                                    (= (select 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields4) temp___1156) (select 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields2) temp___1156)))))))
                                                                    true
                                                                    false) 
                                                                    (ite 
                                                                    (and
                                                                    (bvule 
                                                                    r252b i1)
                                                                    (bvule i1 #x000000000000003F))
                                                                    true
                                                                    false)) true)
                                                                    (exists 
                                                                    ((o8 byte))
                                                                    (and
                                                                    (= 
                                                                    (to_rep6
                                                                    o8) #x00)
                                                                    (and
                                                                    (= local_ctx__split_fields3 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields4)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields4) i1 o8)))
                                                                    (= i1 #x000000000000003F))))))
                                                                    (= local_ctx__split_fields3 local_ctx__split_fields2))))))))
                                                                    (= local_ctx__split_fields3 local_ctx__split_fields2)))))
                                                                    (forall 
                                                                    ((tmp_b (Array (_ BitVec 64) byte)))
                                                                    (=>
                                                                    (= tmp_b 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields3))
                                                                    (forall 
                                                                    ((o7 (_ BitVec 64)))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields3)))) o7)
                                                                    (forall 
                                                                    ((tmp_byte_count_add (_ BitVec 64)))
                                                                    (=>
                                                                    (= tmp_byte_count_add o7)
                                                                    (=>
                                                                    (bvult #x000000000000003F #xFFFFFFFFFFFFFFFF)
                                                                    (=>
                                                                    (dynamic_property
                                                                    #x0000000000000000
                                                                    #xFFFFFFFFFFFFFFFF
                                                                    #x0000000000000000
                                                                    #x000000000000003F)
                                                                    (forall 
                                                                    ((local_ctx__split_fields4 us_split_fields4))
                                                                    (=>
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (in_range3
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4)))))
                                                                    (= 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4)))) 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields3))))))
                                                                    (in_range4
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4))))))
                                                                    (= 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4)))) 
                                                                    (to_rep2
                                                                    (rec__skein__context_header__byte_count
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields3))))))
                                                                    (dynamic_invariant
                                                                    (us_repqtmk2
                                                                    local_ctx__split_fields4)
                                                                    true
                                                                    true
                                                                    true
                                                                    true))
                                                                    (forall 
                                                                    ((o8 (_ BitVec 64)))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4)))) o8)
                                                                    (let ((o9 (bvudiv (bvadd o8 #x0000000000000007) #x0000000000000008)))
                                                                    (=>
                                                                    (in_range5
                                                                    o9)
                                                                    (forall 
                                                                    ((byte_count1 (_ BitVec 64)))
                                                                    (=>
                                                                    (= byte_count1 o9)
                                                                    (forall 
                                                                    ((temp___1169 (Array (_ BitVec 64) byte)))
                                                                    (=>
                                                                    (and
                                                                    (forall 
                                                                    ((temp___1168 (_ BitVec 64)))
                                                                    (! 
                                                                    (=>
                                                                    (and
                                                                    (bvule #x0000000000000000 temp___1168)
                                                                    (bvule temp___1168 #x000000000000003F))
                                                                    (= 
                                                                    (to_rep6
                                                                    (select temp___1169 temp___1168)) #x00)) :pattern ((select temp___1169 temp___1168)) ))
                                                                    (= temp___1169 
                                                                    (temp_____aggregate_def_1165
                                                                    #x00)))
                                                                    (forall 
                                                                    ((local_ctx__split_fields5 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields5 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields4)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields4)
                                                                    temp___1169))
                                                                    (forall 
                                                                    ((x (Array (_ BitVec 64) u64)))
                                                                    (=>
                                                                    (= x 
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields5))
                                                                    (forall 
                                                                    ((blocks_required1 (_ BitVec 64)))
                                                                    (=>
                                                                    (= blocks_required1 (bvudiv (bvadd byte_count1 #x000000000000003F) #x0000000000000040))
                                                                    (=>
                                                                    (= (bvsub blocks_required1 #x0000000000000001) 
                                                                    r256b)
                                                                    (forall 
                                                                    ((blocks_done (_ BitVec 64)))
                                                                    (=>
                                                                    (= blocks_done #x0000000000000000)
                                                                    (=>
                                                                    (= (and 
                                                                    (ite (bvule #x0000000000000000 blocks_done)
                                                                    true
                                                                    false) 
                                                                    (ite (bvule blocks_done 
                                                                    r256b)
                                                                    true
                                                                    false)) true)
                                                                    (forall 
                                                                    ((temp___loop_entry_1270 (_ BitVec 64)))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields5)))) temp___loop_entry_1270)
                                                                    (forall 
                                                                    ((o10 (_ BitVec 64)))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep7
                                                                    hash__last) o10)
                                                                    (forall 
                                                                    ((o11 (_ BitVec 64)))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep7
                                                                    hash__first) o11)
                                                                    (forall 
                                                                    ((o12 (_ BitVec 64)))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields5)))) o12)
                                                                    (forall 
                                                                    ((local_ctx__split_fields6 us_split_fields4) (blocks_done1 (_ BitVec 64)))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep5
                                                                    (rec__skein__context_header__hash_bit_len
                                                                    (us_split_fields3
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields6)))) temp___loop_entry_1270)
                                                                    (=>
                                                                    (= (and 
                                                                    (ite 
                                                                    (dynamic_invariant
                                                                    (us_repqtmk2
                                                                    local_ctx__split_fields6)
                                                                    false
                                                                    true
                                                                    true
                                                                    true)
                                                                    true
                                                                    false) 
                                                                    (ite 
                                                                    (and
                                                                    (bvule #x0000000000000000 blocks_done1)
                                                                    (bvule blocks_done1 
                                                                    r256b))
                                                                    true
                                                                    false)) true)
                                                                    (=>
                                                                    (= blocks_done1 
                                                                    c258b)
                                                                    (forall 
                                                                    ((o13 byte))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep6
                                                                    o13) ((_ extract 7 0) (bvand 
                                                                    c258b #x00000000000000FF)))
                                                                    (forall 
                                                                    ((local_ctx__split_fields7 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields7 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields6)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields6)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields6) #x0000000000000000 o13)))
                                                                    (forall 
                                                                    ((o14 byte))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep6
                                                                    o14) ((_ extract 7 0) (bvand (bvlshr 
                                                                    c258b ((_ int2bv 64) 8)) #x00000000000000FF)))
                                                                    (forall 
                                                                    ((local_ctx__split_fields8 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields8 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields7)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields7)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields7) #x0000000000000001 o14)))
                                                                    (forall 
                                                                    ((o15 byte))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep6
                                                                    o15) ((_ extract 7 0) (bvand (bvlshr 
                                                                    c258b ((_ int2bv 64) 16)) #x00000000000000FF)))
                                                                    (forall 
                                                                    ((local_ctx__split_fields9 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields9 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields8)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields8)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields8) #x0000000000000002 o15)))
                                                                    (forall 
                                                                    ((o16 byte))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep6
                                                                    o16) ((_ extract 7 0) (bvand (bvlshr 
                                                                    c258b ((_ int2bv 64) 24)) #x00000000000000FF)))
                                                                    (forall 
                                                                    ((local_ctx__split_fields10 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields10 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields9)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields9)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields9) #x0000000000000003 o16)))
                                                                    (forall 
                                                                    ((o17 byte))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep6
                                                                    o17) ((_ extract 7 0) (bvand (bvlshr 
                                                                    c258b ((_ int2bv 64) 32)) #x00000000000000FF)))
                                                                    (forall 
                                                                    ((local_ctx__split_fields11 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields11 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields10)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields10)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields10) #x0000000000000004 o17)))
                                                                    (forall 
                                                                    ((o18 byte))
                                                                    (=>
                                                                    (= 
                                                                    (to_rep6
                                                                    o18) ((_ extract 7 0) (bvand (bvlshr 
                                                                    c258b ((_ int2bv 64) 40)) #x00000000000000FF)))
                                                                    (forall 
                                                                    ((local_ctx__split_fields12 us_split_fields4))
                                                                    (=>
                                                                    (= local_ctx__split_fields12 
                                                                    (us_split_fieldsqtmk2
                                                                    (rec__skein__skein_512_context__h
                                                                    local_ctx__split_fields11)
                                                                    (rec__skein__skein_512_context__x
                                                                    local_ctx__split_fields11)
                                                                    (store 
                                                                    (rec__skein__skein_512_context__b
                                                                    local_ctx__split_fields11) #x0000000000000005 o18)))
                                                                    (bvule (bvand (bvlshr 
                                                                    c258b ((_ int2bv 64) 48)) #x00000000000000FF) ((_ zero_extend 56) #xFF)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(get-info :reason-unknown)
