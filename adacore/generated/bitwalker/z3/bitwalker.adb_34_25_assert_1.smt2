;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-const two_power_size_minus_one Int)

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

(declare-const value (_ BitVec 64))

(declare-const left Int)

(declare-const flag Bool)

(declare-const left_bv (_ BitVec 64))

(declare-const mask (_ BitVec 64))

(declare-const r (_ BitVec 64))

;; "nth_bv"
(define-fun nth_bv ((param__x (_ BitVec 64)) (param__pos (_ BitVec 64))) Bool
  (= (bvand (bvlshr param__x ((_ int2bv 64) (bv2int param__pos))) #x0000000000000001) #x0000000000000001))

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range left))

;; "Assume"
(assert (< left 64))

;; "bitwalker__pokebit64__left_bv__assume"
(define-fun bitwalker__pokebit64__left_bv__assume () (_ BitVec 64)
  ((_ int2bv 64) left))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused () (_ BitVec 64)
  bitwalker__pokebit64__left_bv__assume)

;; "Assume"
(assert (= bitwalker__pokebit64__left_bv__assume left_bv))

;; "Assume"
(assert true)

;; "Assert"
(assert (bvult left_bv #x0000000000000040))

;; "Assert"
(assert (= (bvsub #x000000000000003F left_bv) ((_ int2bv 64) (- 63 left))))

;; "o"
(define-fun o () Int
  (- 63 left))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused () Int
  o)

;; "Ensures"
(assert (in_range o))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused () Int
  o)

;; "o"
(define-fun o1 () (_ BitVec 64)
  ((_ int2bv 64) o))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused1 () (_ BitVec 64)
  o1)

;; "bitwalker__pokebit64__B_1__mask__assume"
(define-fun bitwalker__pokebit64__B_1__mask__assume () (_ BitVec 64)
  (bvshl #x0000000000000001 o1))

;; "lsl_bv'result'unused"
(define-fun lsl_bvqtresultqtunused () (_ BitVec 64)
  bitwalker__pokebit64__B_1__mask__assume)

;; "Assume"
(assert (= bitwalker__pokebit64__B_1__mask__assume mask))

;; "Assume"
(assert true)

(declare-const bitwalker__pokebit64__B_1__r__assume (_ BitVec 64))

(declare-const o2 (_ BitVec 64))

(declare-const bw_notqtresultqtunused (_ BitVec 64))

(declare-const bw_andqtresultqtunused (_ BitVec 64))

(declare-const bw_orqtresultqtunused (_ BitVec 64))

;; "H"
(assert
  (ite (= flag true)
    (and
      (= bitwalker__pokebit64__B_1__r__assume (bvor value mask))
      (= bw_orqtresultqtunused bitwalker__pokebit64__B_1__r__assume))
    (and
      (= o2 (bvnot mask))
      (and
        (= bw_notqtresultqtunused o2)
        (and
          (= bitwalker__pokebit64__B_1__r__assume (bvand value o2))
          (= bw_andqtresultqtunused bitwalker__pokebit64__B_1__r__assume))))))

;; "Assume"
(assert (= bitwalker__pokebit64__B_1__r__assume r))

;; "Assume"
(assert true)

(declare-const i (_ BitVec 64))

;; "H"
(assert (bvule #x0000000000000000 i))

;; "H"
(assert (bvule i #x000000000000003F))

;; "H"
(assert (not (= i (bvsub #x000000000000003F left_bv))))

;; "H"
(assert (= (nth_bv r i) true))

;; Goal "def'vc"
;; File "bitwalker.ads", line 22, characters 0-0
(assert
  (not (= (nth_bv value i) true)))

(check-sat)
