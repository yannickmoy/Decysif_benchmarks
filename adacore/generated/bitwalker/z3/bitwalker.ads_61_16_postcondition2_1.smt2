;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

(declare-const two_power_size_minus_one Int)

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "nth"
(define-fun nth ((param__x (_ BitVec 64)) (param__pos Int)) Bool
  (= (bvand (bvlshr param__x ((_ int2bv 64) param__pos)) #x0000000000000001) #x0000000000000001))

(declare-const value (_ BitVec 64))

(declare-const left Int)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

;; "Assume"
(assert true)

;; "Assume"
(assert (in_range left))

;; "Assume"
(assert (< left 64))

;; "o"
(define-fun o () Int
  (- 63 left))

;; "infix -'result'unused"
(define-fun infix_mnqtresultqtunused () Int
  o)

;; "Ensures"
(assert (in_range o))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused () Int
  o)

;; "o"
(define-fun o1 () (_ BitVec 64)
  ((_ int2bv 64) o))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused () (_ BitVec 64)
  o1)

;; "o"
(define-fun o2 () (_ BitVec 64)
  (bvshl #x0000000000000001 o1))

;; "lsl_bv'result'unused"
(define-fun lsl_bvqtresultqtunused () (_ BitVec 64)
  o2)

;; "o"
(define-fun o3 () (_ BitVec 64)
  (bvand value o2))

;; "bw_and'result'unused"
(define-fun bw_andqtresultqtunused () (_ BitVec 64)
  o3)

;; "o"
(define-fun o4 () Bool
  (ite (not (= o3 #x0000000000000000)) true false))

;; "neq'result'unused"
(define-fun neqqtresultqtunused () Bool
  o4)

(declare-const bitwalker__peekbit64__result Bool)

;; "bitwalker__peekbit64__result'unused"
(define-fun bitwalker__peekbit64__resultqtunused () bool__ref
  (bool__refqtmk bitwalker__peekbit64__result))

;; "H"
(assert (= bitwalker__peekbit64__result o4))

;; "H"
(assert (= (nth value (- 63 left)) true))

;; Goal "def'vc"
;; File "bitwalker.ads", line 54, characters 0-0
(assert
  (not (= bitwalker__peekbit64__result true)))

(check-sat)
