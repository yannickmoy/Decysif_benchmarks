;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-const two_power_size_minus_one Int)

;; "nth"
(define-fun nth ((param__x (_ BitVec 64)) (param__pos Int)) Bool
  (= (bvand (bvlshr param__x ((_ int2bv 64) param__pos)) #x0000000000000001) #x0000000000000001))

(declare-const x (_ BitVec 64))

(declare-const y (_ BitVec 64))

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

;; "Assume"
(assert true)

;; "Assume"
(assert true)

;; "Assume"
(assert
  (forall ((i Int))
    (=> (and (<= 0 i) (<= i 63)) (= (= (nth x i) true) (= (nth y i) true)))))

(declare-const i Int)

;; "i'unused"
(define-fun iqtunused () int__ref
  (int__refqtmk i))

;; "H"
(assert (= i 63))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  i)

;; "o"
(define-fun o () Bool
  (ite (<= i 63) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused () Bool
  o)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  i)

;; "o"
(define-fun o1 () Bool
  (ite (<= 0 i) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused1 () Bool
  o1)

;; "o"
(define-fun o2 () Bool
  (and o1 o))

;; "andb'result'unused"
(define-fun andbqtresultqtunused () Bool
  o2)

;; "H"
(assert (= o2 true))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused2 () Int
  i)

;; "o"
(define-fun o3 () (_ BitVec 64)
  x)

;; "H"
(assert
  (= (bvlshr o3 ((_ int2bv 64) i)) (bvadd (bvshl (bvlshr o3 ((_ int2bv 64) (+ 
  i 1))) ((_ int2bv 64) 1)) (ite (= (nth o3 i) true)
                              #x0000000000000001
                              #x0000000000000000))))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert true)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  i)

;; "o"
(define-fun o4 () (_ BitVec 64)
  y)

;; "H"
(assert
  (= (bvlshr o4 ((_ int2bv 64) i)) (bvadd (bvshl (bvlshr o4 ((_ int2bv 64) (+ 
  i 1))) ((_ int2bv 64) 1)) (ite (= (nth o4 i) true)
                              #x0000000000000001
                              #x0000000000000000))))

;; "H"
(assert true)

;; "H"
(assert true)

;; "H"
(assert true)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused4 () Int
  i)

;; "o"
(define-fun o5 () (_ BitVec 64)
  ((_ int2bv 64) i))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused () (_ BitVec 64)
  o5)

;; "o"
(define-fun o6 () (_ BitVec 64)
  (bvlshr y o5))

;; "lsr_bv'result'unused"
(define-fun lsr_bvqtresultqtunused () (_ BitVec 64)
  o6)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused5 () Int
  i)

;; "o"
(define-fun o7 () (_ BitVec 64)
  ((_ int2bv 64) i))

;; "of_int'result'unused"
(define-fun of_intqtresultqtunused1 () (_ BitVec 64)
  o7)

;; "o"
(define-fun o8 () (_ BitVec 64)
  (bvlshr x o7))

;; "lsr_bv'result'unused"
(define-fun lsr_bvqtresultqtunused1 () (_ BitVec 64)
  o8)

;; "eq'result'unused"
(define-fun eqqtresultqtunused () Bool
  (ite (= o8 o6) true false))

;; Goal "def'vc"
;; File "bitwalker.ads", line 131, characters 0-0
(assert
  (not (= (bvlshr x ((_ int2bv 64) i)) (bvlshr y ((_ int2bv 64) i)))))

(check-sat)
