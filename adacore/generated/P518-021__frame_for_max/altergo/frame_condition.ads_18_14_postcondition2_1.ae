(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

type us_private

logic us_null_ext__ : us_private

function length(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. (((- 2147483648) <= integerqtint(i)) and
  (integerqtint(i) <= 2147483647)))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom :
  (forall i:natural. ((0 <= naturalqtint(i)) and
  (naturalqtint(i) <= 2147483647)))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom :
  (forall i:positive. ((1 <= positiveqtint(i)) and
  (positiveqtint(i) <= 2147483647)))

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range(x) ->
  (to_rep1(of_rep1(x)) = x)))

type us_split_fields = { rec__frame_condition__cell__value : natural;
rec__frame_condition__cell__max_left : natural;
rec__frame_condition__cell__max_right : natural }

type us_rep = { us_split_fields1 : us_split_fields
}

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic frame_condition__cell__value__first__bit : int

logic frame_condition__cell__value__last__bit : int

logic frame_condition__cell__value__position : int

axiom frame_condition__cell__value__first__bit_axiom :
  (0 <= frame_condition__cell__value__first__bit)

axiom frame_condition__cell__value__last__bit_axiom :
  (frame_condition__cell__value__first__bit <  frame_condition__cell__value__last__bit)

axiom frame_condition__cell__value__position_axiom :
  (0 <= frame_condition__cell__value__position)

logic frame_condition__cell__max_left__first__bit : int

logic frame_condition__cell__max_left__last__bit : int

logic frame_condition__cell__max_left__position : int

axiom frame_condition__cell__max_left__first__bit_axiom :
  (0 <= frame_condition__cell__max_left__first__bit)

axiom frame_condition__cell__max_left__last__bit_axiom :
  (frame_condition__cell__max_left__first__bit <  frame_condition__cell__max_left__last__bit)

axiom frame_condition__cell__max_left__position_axiom :
  (0 <= frame_condition__cell__max_left__position)

logic frame_condition__cell__max_right__first__bit : int

logic frame_condition__cell__max_right__last__bit : int

logic frame_condition__cell__max_right__position : int

axiom frame_condition__cell__max_right__first__bit_axiom :
  (0 <= frame_condition__cell__max_right__first__bit)

axiom frame_condition__cell__max_right__last__bit_axiom :
  (frame_condition__cell__max_right__first__bit <  frame_condition__cell__max_right__last__bit)

axiom frame_condition__cell__max_right__position_axiom :
  (0 <= frame_condition__cell__max_right__position)

logic dummy : us_rep

logic a__first : integer

logic a__last : integer

logic first : int

logic last : int

type t = { rec__first : integer; rec__last : integer
}

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  ((to_rep1((mk(f, l)).rec__first) = f) and (to_rep1((mk(f,
  l)).rec__last) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range(low) and (in_range(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,us_rep) farray; rt : t
}

function to_array(a: us_t) : (int,us_rep) farray = (a).elts

function of_array(a: (int,us_rep) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

logic value__size1 : int

logic object__size1 : int

logic component__size : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom1 : (0 <= alignment1)

logic first1 : int

logic last1 : int

function get_max_left(param__index: int,
  Frame_condition__update_max_2__a___a___: (int,us_rep) farray) : int =
  to_rep((((let temp___172 =
  of_array(Frame_condition__update_max_2__a___a___, to_rep1(a__first),
  to_rep1(a__last)) : us_t in
  (to_array(temp___172)[param__index]))).us_split_fields1).rec__frame_condition__cell__max_left)

function frame_left(param__old_a: us_t,
  Frame_condition__update_max_2__a___a___: (int,us_rep) farray) : bool =
  (if (forall i:int. (((to_rep1(a__first) <= i) and
      (i <= to_rep1(a__last))) -> (to_rep((((let temp___176 =
      of_array(Frame_condition__update_max_2__a___a___, to_rep1(a__first),
      to_rep1(a__last)) : us_t in
      (to_array(temp___176)[i]))).us_split_fields1).rec__frame_condition__cell__value) = to_rep((((to_array(param__old_a)[i])).us_split_fields1).rec__frame_condition__cell__value)))) then true else false)

logic first2 : int

logic last2 : int

function get_max_right(param__index: int,
  Frame_condition__update_max_2__a___a___: (int,us_rep) farray) : int =
  to_rep((((let temp___178 =
  of_array(Frame_condition__update_max_2__a___a___, to_rep1(a__first),
  to_rep1(a__last)) : us_t in
  (to_array(temp___178)[param__index]))).us_split_fields1).rec__frame_condition__cell__max_right)

function frame_right(param__old_a: us_t,
  Frame_condition__update_max_2__a___a___: (int,us_rep) farray) : bool =
  (if (forall i:int. (((to_rep1(a__first) <= i) and
      (i <= to_rep1(a__last))) -> ((to_rep((((let temp___182 =
      of_array(Frame_condition__update_max_2__a___a___, to_rep1(a__first),
      to_rep1(a__last)) : us_t in
      (to_array(temp___182)[i]))).us_split_fields1).rec__frame_condition__cell__value) = to_rep((((to_array(param__old_a)[i])).us_split_fields1).rec__frame_condition__cell__value)) and
      (to_rep((((let temp___183 =
      of_array(Frame_condition__update_max_2__a___a___, to_rep1(a__first),
      to_rep1(a__last)) : us_t in
      (to_array(temp___183)[i]))).us_split_fields1).rec__frame_condition__cell__max_left) = to_rep((((to_array(param__old_a)[i])).us_split_fields1).rec__frame_condition__cell__max_left))))) then true else false)

 (* "frame_condition.ads", line 17, characters 0-0 *)
goal defqtvc :
  (forall a:(int,us_rep) farray. (dynamic_property(1, 2147483647,
  to_rep1(a__first), to_rep1(a__last)) ->
  (forall o:int. ((to_rep1(a__last) = o) ->
  (forall o1:int. ((to_rep1(a__first) = o1) ->
  (forall a1:(int,us_rep) farray.
  ((exists o2:int. ((to_rep1(a__last) = o2) and
   (exists o3:int. ((to_rep1(a__first) = o3) and
   (exists o4:int. ((to_rep1(a__last) = o4) and
   (exists o5:int. ((to_rep1(a__first) = o5) and
   (exists spark__branch:bool. ((spark__branch = (if (length(o5,
   o4) = 0) then true else false)) and
   (if (spark__branch = true) then (a1 = a) else (exists o6:int.
                                                 ((to_rep1(a__last) = o6) and
                                                 (exists o7:int.
                                                 ((to_rep1(a__first) = o7) and
                                                 (exists o8:int.
                                                 ((to_rep1(a__first) = o8) and
                                                 (in_range2(o8) and
                                                 ((o8 = first) and
                                                 (in_range2(first) and
                                                 (exists o9:int.
                                                 ((to_rep1(a__last) = o9) and
                                                 (exists o10:int.
                                                 ((to_rep1(a__first) = o10) and
                                                 (exists o11:int.
                                                 ((to_rep1(a__last) = o11) and
                                                 (in_range2(o11) and
                                                 ((o11 = last) and
                                                 (in_range2(last) and
                                                 (in_range2(first1) and
                                                 ((first = first1) and
                                                 (in_range2(last1) and
                                                 ((last = last1) and
                                                 (in_range2(first2) and
                                                 ((last = first2) and
                                                 (in_range2(last2) and
                                                 ((first = last2) and
                                                 (exists a2:(int,us_rep) farray.
                                                 ((((forall i:int.
                                                    (((first1 <= i) and
                                                    (i <= last1)) ->
                                                    (forall j:int.
                                                    (((i <= j) and
                                                    (j <= last1)) ->
                                                    (to_rep((((a2[i])).us_split_fields1).rec__frame_condition__cell__value) <= get_max_left(j,
                                                    a2)))))) and
                                                 (forall i:int.
                                                 (((last1 <= i) and
                                                 (i <= first1)) ->
                                                 (forall j:int.
                                                 (((i <= j) and
                                                 (j <= first1)) ->
                                                 (to_rep((((a2[j])).us_split_fields1).rec__frame_condition__cell__value) <= get_max_left(i,
                                                 a2))))))) and
                                                 (frame_left((let temp___303qtunused =
                                                 of_array(a,
                                                 to_rep1(a__first),
                                                 to_rep1(a__last)) : us_t in
                                                 of_array(a,
                                                 to_rep1(a__first),
                                                 to_rep1(a__last))),
                                                 a2) = true)) and
                                                 (((forall i:int.
                                                   (((first2 <= i) and
                                                   (i <= last2)) ->
                                                   (forall j:int.
                                                   (((i <= j) and
                                                   (j <= last2)) ->
                                                   (to_rep((((a1[i])).us_split_fields1).rec__frame_condition__cell__value) <= get_max_right(j,
                                                   a1)))))) and
                                                 (forall i:int.
                                                 (((last2 <= i) and
                                                 (i <= first2)) ->
                                                 (forall j:int.
                                                 (((i <= j) and
                                                 (j <= first2)) ->
                                                 (to_rep((((a1[j])).us_split_fields1).rec__frame_condition__cell__value) <= get_max_right(i,
                                                 a1))))))) and
                                                 (frame_right((let temp___327qtunused =
                                                 of_array(a2,
                                                 to_rep1(a__first),
                                                 to_rep1(a__last)) : us_t in
                                                 of_array(a2,
                                                 to_rep1(a__first),
                                                 to_rep1(a__last))),
                                                 a1) = true))))))))))))))))))))))))))))))))))))))))) ->
  (forall i:int. (((to_rep1(a__first) <= i) and (i <= to_rep1(a__last))) ->
  (forall j:int. (((i <= j) and (j <= to_rep1(a__last))) ->
  (to_rep((((a1[i])).us_split_fields1).rec__frame_condition__cell__value) <= to_rep((((a1[j])).us_split_fields1).rec__frame_condition__cell__max_left))))))))))))))
