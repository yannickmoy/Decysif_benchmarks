;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

;; "length"
(define-fun length ((x Int) (y Int)) Int
  (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

(declare-sort natural 0)

;; "natural'int"
(declare-fun naturalqtint (natural) Int)

;; "natural'axiom"
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep ((x natural)) Int
  (naturalqtint x))

;; "of_rep"
(declare-fun of_rep (Int) natural)

;; "inversion_axiom"
(assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep1 ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                 (of_rep1 x))) )))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__frame_condition__cell__value natural)(rec__frame_condition__cell__max_left natural)(rec__frame_condition__cell__max_right natural)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const frame_condition__cell__value__first__bit Int)

(declare-const frame_condition__cell__value__last__bit Int)

(declare-const frame_condition__cell__value__position Int)

;; "frame_condition__cell__value__first__bit_axiom"
(assert (<= 0 frame_condition__cell__value__first__bit))

;; "frame_condition__cell__value__last__bit_axiom"
(assert
  (< frame_condition__cell__value__first__bit frame_condition__cell__value__last__bit))

;; "frame_condition__cell__value__position_axiom"
(assert (<= 0 frame_condition__cell__value__position))

(declare-const frame_condition__cell__max_left__first__bit Int)

(declare-const frame_condition__cell__max_left__last__bit Int)

(declare-const frame_condition__cell__max_left__position Int)

;; "frame_condition__cell__max_left__first__bit_axiom"
(assert (<= 0 frame_condition__cell__max_left__first__bit))

;; "frame_condition__cell__max_left__last__bit_axiom"
(assert
  (< frame_condition__cell__max_left__first__bit frame_condition__cell__max_left__last__bit))

;; "frame_condition__cell__max_left__position_axiom"
(assert (<= 0 frame_condition__cell__max_left__position))

(declare-const frame_condition__cell__max_right__first__bit Int)

(declare-const frame_condition__cell__max_right__last__bit Int)

(declare-const frame_condition__cell__max_right__position Int)

;; "frame_condition__cell__max_right__first__bit_axiom"
(assert (<= 0 frame_condition__cell__max_right__first__bit))

;; "frame_condition__cell__max_right__last__bit_axiom"
(assert
  (< frame_condition__cell__max_right__first__bit frame_condition__cell__max_right__last__bit))

;; "frame_condition__cell__max_right__position_axiom"
(assert (<= 0 frame_condition__cell__max_right__position))

(declare-const dummy us_rep)

(declare-datatypes ()
  ((map__ref (map__refqtmk (map__content (Array Int us_rep))))))

(declare-const a__first integer)

(declare-const a__last integer)

(declare-const first Int)

(declare-const last Int)

(declare-datatypes ()
  ((t (tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep1 (rec__first (mk f l))) f)
             (= (to_rep1 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range low)
    (and
      (in_range high)
      (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ()
  ((us_t (us_tqtmk (elts (Array Int us_rep))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array Int us_rep)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array Int us_rep)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

(declare-const first1 Int)

(declare-const last1 Int)

;; "get_max_left"
(define-fun get_max_left ((param__index Int) (Frame_condition__update_max_2__a___a___ (Array Int us_rep))) Int
  (to_rep
    (rec__frame_condition__cell__max_left
      (us_split_fields1
        (let ((temp___172 (of_array
                            Frame_condition__update_max_2__a___a___
                            (to_rep1 a__first)
                            (to_rep1 a__last))))
          (select (to_array temp___172) param__index))))))

;; "frame_left"
(define-fun frame_left ((param__old_a us_t) (Frame_condition__update_max_2__a___a___ (Array Int us_rep))) Bool
  (ite (forall ((i Int))
         (=>
           (and (<= (to_rep1 a__first) i) (<= i (to_rep1 a__last)))
           (= (to_rep
                (rec__frame_condition__cell__value
                  (us_split_fields1
                    (let ((temp___176 (of_array
                                        Frame_condition__update_max_2__a___a___
                                        (to_rep1 a__first)
                                        (to_rep1 a__last))))
                      (select (to_array temp___176) i))))) (to_rep
                                                             (rec__frame_condition__cell__value
                                                               (us_split_fields1
                                                                 (select 
                                                                 (to_array
                                                                   param__old_a) i)))))))
    true
    false))

(declare-const first2 Int)

(declare-const last2 Int)

;; "get_max_right"
(define-fun get_max_right ((param__index Int) (Frame_condition__update_max_2__a___a___ (Array Int us_rep))) Int
  (to_rep
    (rec__frame_condition__cell__max_right
      (us_split_fields1
        (let ((temp___178 (of_array
                            Frame_condition__update_max_2__a___a___
                            (to_rep1 a__first)
                            (to_rep1 a__last))))
          (select (to_array temp___178) param__index))))))

;; "frame_right"
(define-fun frame_right ((param__old_a us_t) (Frame_condition__update_max_2__a___a___ (Array Int us_rep))) Bool
  (ite (forall ((i Int))
         (=>
           (and (<= (to_rep1 a__first) i) (<= i (to_rep1 a__last)))
           (and
             (= (to_rep
                  (rec__frame_condition__cell__value
                    (us_split_fields1
                      (let ((temp___182 (of_array
                                          Frame_condition__update_max_2__a___a___
                                          (to_rep1 a__first)
                                          (to_rep1 a__last))))
                        (select (to_array temp___182) i))))) (to_rep
                                                               (rec__frame_condition__cell__value
                                                                 (us_split_fields1
                                                                   (select 
                                                                   (to_array
                                                                    param__old_a) i)))))
             (= (to_rep
                  (rec__frame_condition__cell__max_left
                    (us_split_fields1
                      (let ((temp___183 (of_array
                                          Frame_condition__update_max_2__a___a___
                                          (to_rep1 a__first)
                                          (to_rep1 a__last))))
                        (select (to_array temp___183) i))))) (to_rep
                                                               (rec__frame_condition__cell__max_left
                                                                 (us_split_fields1
                                                                   (select 
                                                                   (to_array
                                                                    param__old_a) i))))))))
    true
    false))

(declare-const a (Array Int us_rep))

;; "a"
(define-fun a1 () map__ref
  (map__refqtmk a))

;; "a'unused"
(define-fun aqtunused () map__ref
  a1)

;; "Assume"
(assert (dynamic_property 1 2147483647 (to_rep1 a__first) (to_rep1 a__last)))

(declare-const o Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused () Int
  o)

(declare-const o1 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o1))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused1 () Int
  o1)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused () (Array Int us_rep)
  a)

;; "temp___old_494"
(define-fun temp___old_494 () us_t
  (of_array a o1 o))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused () us_t
  temp___old_494)

(declare-const a2 (Array Int us_rep))

;; "a'unused"
(define-fun aqtunused1 () map__ref
  (map__refqtmk a2))

(declare-const o2 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o2))

(declare-const to_repqtresultqtunused2 Int)

;; "H"
(assert (= to_repqtresultqtunused2 o2))

(declare-const o3 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o3))

(declare-const to_repqtresultqtunused3 Int)

;; "H"
(assert (= to_repqtresultqtunused3 o3))

(declare-const map__contentqtresultqtunused1 (Array Int us_rep))

;; "H"
(assert (= map__contentqtresultqtunused1 a))

(declare-const of_arrayqtresultqtunused1 us_t)

;; "H"
(assert (= of_arrayqtresultqtunused1 (of_array a o3 o2)))

(declare-const o4 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o4))

(declare-const to_repqtresultqtunused4 Int)

;; "H"
(assert (= to_repqtresultqtunused4 o4))

(declare-const o5 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o5))

(declare-const to_repqtresultqtunused5 Int)

;; "H"
(assert (= to_repqtresultqtunused5 o5))

(declare-const o6 Int)

;; "H"
(assert (= o6 (length o5 o4)))

(declare-const lengthqtresultqtunused Int)

;; "H"
(assert (= lengthqtresultqtunused o6))

(declare-const o7 Bool)

;; "H"
(assert (= o7 (ite (= o6 0) true false)))

(declare-const infix_eqqtresultqtunused Bool)

;; "H"
(assert (= infix_eqqtresultqtunused o7))

(declare-const spark__branch Bool)

(declare-const spark__branchqtunused bool__ref)

;; "H"
(assert (= spark__branchqtunused (bool__refqtmk spark__branch)))

;; "H"
(assert (= spark__branch o7))

(declare-const bool__contentqtresultqtunused Bool)

;; "H"
(assert (= bool__contentqtresultqtunused spark__branch))

(declare-const o8 Int)

(declare-const to_repqtresultqtunused6 Int)

(declare-const o9 Int)

(declare-const to_repqtresultqtunused7 Int)

(declare-const map__contentqtresultqtunused2 (Array Int us_rep))

(declare-const of_arrayqtresultqtunused2 us_t)

(declare-const o10 Int)

(declare-const to_repqtresultqtunused8 Int)

(declare-const frame_condition__update_max_2__B_3__first__assumeqtunused Int)

(declare-const range_check_qtresultqtunused Int)

(declare-const o11 Int)

(declare-const to_repqtresultqtunused9 Int)

(declare-const o12 Int)

(declare-const to_repqtresultqtunused10 Int)

(declare-const map__contentqtresultqtunused3 (Array Int us_rep))

(declare-const of_arrayqtresultqtunused3 us_t)

(declare-const o13 Int)

(declare-const to_repqtresultqtunused11 Int)

(declare-const frame_condition__update_max_2__B_3__last__assumeqtunused Int)

(declare-const range_check_qtresultqtunused1 Int)

(declare-const aqtunused2 map__ref)

(declare-const a3 (Array Int us_rep))

(declare-const aqtunused3 map__ref)

(declare-const aqtunused4 map__ref)

;; "H"
(assert
  (ite (= spark__branch true)
    (= a2 a)
    (and
      (= (to_rep1 a__last) o8)
      (and
        (= to_repqtresultqtunused6 o8)
        (and
          (= (to_rep1 a__first) o9)
          (and
            (= to_repqtresultqtunused7 o9)
            (and
              (= map__contentqtresultqtunused2 a)
              (and
                (= of_arrayqtresultqtunused2 (of_array a o9 o8))
                (and
                  (= (to_rep1 a__first) o10)
                  (and
                    (= to_repqtresultqtunused8 o10)
                    (and
                      (= frame_condition__update_max_2__B_3__first__assumeqtunused 
                      o10)
                      (and
                        (in_range2 o10)
                        (and
                          (= range_check_qtresultqtunused o10)
                          (and
                            (= o10 first)
                            (and
                              (in_range2 first)
                              (and
                                (= (to_rep1 a__last) o11)
                                (and
                                  (= to_repqtresultqtunused9 o11)
                                  (and
                                    (= (to_rep1 a__first) o12)
                                    (and
                                      (= to_repqtresultqtunused10 o12)
                                      (and
                                        (= map__contentqtresultqtunused3 
                                        a)
                                        (and
                                          (= of_arrayqtresultqtunused3 
                                          (of_array
                                            a
                                            o12
                                            o11))
                                          (and
                                            (= (to_rep1 a__last) o13)
                                            (and
                                              (= to_repqtresultqtunused11 
                                              o13)
                                              (and
                                                (= frame_condition__update_max_2__B_3__last__assumeqtunused 
                                                o13)
                                                (and
                                                  (in_range2 o13)
                                                  (and
                                                    (= range_check_qtresultqtunused1 
                                                    o13)
                                                    (and
                                                      (= o13 last)
                                                      (and
                                                        (in_range2 last)
                                                        (and
                                                          (in_range2 first1)
                                                          (and
                                                            (= first 
                                                            first1)
                                                            (and
                                                              (in_range2
                                                                last1)
                                                              (and
                                                                (= last 
                                                                last1)
                                                                (and
                                                                  (in_range2
                                                                    first2)
                                                                  (and
                                                                    (= 
                                                                    last 
                                                                    first2)
                                                                    (and
                                                                    (in_range2
                                                                    last2)
                                                                    (and
                                                                    (= 
                                                                    first 
                                                                    last2)
                                                                    (and
                                                                    (= 
                                                                    aqtunused2 
                                                                    a1)
                                                                    (and
                                                                    (= 
                                                                    aqtunused3 
                                                                    (map__refqtmk
                                                                    a3))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    first1 i)
                                                                    (<= i 
                                                                    last1))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= i j)
                                                                    (<= j 
                                                                    last1))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__frame_condition__cell__value
                                                                    (us_split_fields1
                                                                    (select 
                                                                    a3 i)))) 
                                                                    (get_max_left
                                                                    j
                                                                    a3))))))
                                                                    (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    last1 i)
                                                                    (<= i 
                                                                    first1))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= i j)
                                                                    (<= j 
                                                                    first1))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__frame_condition__cell__value
                                                                    (us_split_fields1
                                                                    (select 
                                                                    a3 j)))) 
                                                                    (get_max_left
                                                                    i
                                                                    a3)))))))
                                                                    (= 
                                                                    (frame_left
                                                                    (let ((temp___303 
                                                                    (of_array
                                                                    a
                                                                    (to_rep1
                                                                    a__first)
                                                                    (to_rep1
                                                                    a__last))))
                                                                    (of_array
                                                                    a
                                                                    (to_rep1
                                                                    a__first)
                                                                    (to_rep1
                                                                    a__last)))
                                                                    a3) true))
                                                                    (and
                                                                    (= 
                                                                    aqtunused4 
                                                                    (map__refqtmk
                                                                    a3))
                                                                    (and
                                                                    (and
                                                                    (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    first2 i)
                                                                    (<= i 
                                                                    last2))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= i j)
                                                                    (<= j 
                                                                    last2))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__frame_condition__cell__value
                                                                    (us_split_fields1
                                                                    (select 
                                                                    a2 i)))) 
                                                                    (get_max_right
                                                                    j
                                                                    a2))))))
                                                                    (forall 
                                                                    ((i Int))
                                                                    (=>
                                                                    (and
                                                                    (<= 
                                                                    last2 i)
                                                                    (<= i 
                                                                    first2))
                                                                    (forall 
                                                                    ((j Int))
                                                                    (=>
                                                                    (and
                                                                    (<= i j)
                                                                    (<= j 
                                                                    first2))
                                                                    (<= 
                                                                    (to_rep
                                                                    (rec__frame_condition__cell__value
                                                                    (us_split_fields1
                                                                    (select 
                                                                    a2 j)))) 
                                                                    (get_max_right
                                                                    i
                                                                    a2)))))))
                                                                    (= 
                                                                    (frame_right
                                                                    (let ((temp___327 
                                                                    (of_array
                                                                    a3
                                                                    (to_rep1
                                                                    a__first)
                                                                    (to_rep1
                                                                    a__last))))
                                                                    (of_array
                                                                    a3
                                                                    (to_rep1
                                                                    a__first)
                                                                    (to_rep1
                                                                    a__last)))
                                                                    a2) true))))))))))))))))))))))))))))))))))))))))))

(declare-const i Int)

;; "H"
(assert (<= (to_rep1 a__first) i))

;; "H"
(assert (<= i (to_rep1 a__last)))

(declare-const j Int)

;; "H"
(assert (<= i j))

;; "H"
(assert (<= j (to_rep1 a__last)))

;; Goal "def'vc"
;; File "frame_condition.ads", line 17, characters 0-0
(assert
  (not
  (<= (to_rep
        (rec__frame_condition__cell__value (us_split_fields1 (select a2 i)))) 
  (to_rep
    (rec__frame_condition__cell__max_left (us_split_fields1 (select a2 j)))))))

(check-sat)
