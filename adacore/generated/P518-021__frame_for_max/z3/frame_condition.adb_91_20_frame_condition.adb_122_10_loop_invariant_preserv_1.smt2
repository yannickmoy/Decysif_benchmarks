;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ()
  ((int__ref (int__refqtmk (int__content Int)))))

(declare-datatypes ()
  ((bool__ref (bool__refqtmk (bool__content Bool)))))

;; "length"
(define-fun length ((x Int) (y Int)) Int
  (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort integer 0)

;; "integer'int"
(declare-fun integerqtint (integer) Int)

;; "integer'axiom"
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; "in_range"
(define-fun in_range ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

(declare-sort natural 0)

;; "natural'int"
(declare-fun naturalqtint (natural) Int)

;; "natural'axiom"
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; "in_range"
(define-fun in_range1 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep ((x natural)) Int
  (naturalqtint x))

;; "of_rep"
(declare-fun of_rep (Int) natural)

;; "inversion_axiom"
(assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; "range_axiom"
(assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

;; "in_range"
(define-fun in_range2 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

;; "to_rep"
(define-fun to_rep1 ((x integer)) Int
  (integerqtint x))

;; "of_rep"
(declare-fun of_rep1 (Int) integer)

;; "inversion_axiom"
(assert
  (forall ((x integer))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; "range_axiom"
(assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; "coerce_axiom"
(assert
  (forall ((x Int))
    (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                 (of_rep1 x))) )))

(declare-datatypes ()
  ((us_split_fields
   (us_split_fieldsqtmk
   (rec__frame_condition__cell__value natural)(rec__frame_condition__cell__max_left natural)(rec__frame_condition__cell__max_right natural)))))

(declare-datatypes ()
  ((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; "value__size_axiom"
(assert (<= 0 value__size))

;; "object__size_axiom"
(assert (<= 0 object__size))

;; "alignment_axiom"
(assert (<= 0 alignment))

(declare-const frame_condition__cell__value__first__bit Int)

(declare-const frame_condition__cell__value__last__bit Int)

(declare-const frame_condition__cell__value__position Int)

;; "frame_condition__cell__value__first__bit_axiom"
(assert (<= 0 frame_condition__cell__value__first__bit))

;; "frame_condition__cell__value__last__bit_axiom"
(assert
  (< frame_condition__cell__value__first__bit frame_condition__cell__value__last__bit))

;; "frame_condition__cell__value__position_axiom"
(assert (<= 0 frame_condition__cell__value__position))

(declare-const frame_condition__cell__max_left__first__bit Int)

(declare-const frame_condition__cell__max_left__last__bit Int)

(declare-const frame_condition__cell__max_left__position Int)

;; "frame_condition__cell__max_left__first__bit_axiom"
(assert (<= 0 frame_condition__cell__max_left__first__bit))

;; "frame_condition__cell__max_left__last__bit_axiom"
(assert
  (< frame_condition__cell__max_left__first__bit frame_condition__cell__max_left__last__bit))

;; "frame_condition__cell__max_left__position_axiom"
(assert (<= 0 frame_condition__cell__max_left__position))

(declare-const frame_condition__cell__max_right__first__bit Int)

(declare-const frame_condition__cell__max_right__last__bit Int)

(declare-const frame_condition__cell__max_right__position Int)

;; "frame_condition__cell__max_right__first__bit_axiom"
(assert (<= 0 frame_condition__cell__max_right__first__bit))

;; "frame_condition__cell__max_right__last__bit_axiom"
(assert
  (< frame_condition__cell__max_right__first__bit frame_condition__cell__max_right__last__bit))

;; "frame_condition__cell__max_right__position_axiom"
(assert (<= 0 frame_condition__cell__max_right__position))

(declare-const dummy us_rep)

(declare-datatypes ()
  ((map__ref (map__refqtmk (map__content (Array Int us_rep))))))

(declare-const a__first integer)

(declare-const a__last integer)

(declare-const first Int)

(declare-const last Int)

(declare-datatypes ()
  ((t (tqtmk (rec__first integer)(rec__last integer)))))

;; "mk"
(declare-fun mk (Int
  Int) t)

;; "mk_def"
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range f)
         (=>
           (in_range l)
           (and
             (= (to_rep1 (rec__first (mk f l))) f)
             (= (to_rep1 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; "dynamic_property"
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range low)
    (and
      (in_range high)
      (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ()
  ((us_t (us_tqtmk (elts (Array Int us_rep))(rt t)))))

;; "to_array"
(define-fun to_array ((a us_t)) (Array Int us_rep)
  (elts a))

;; "of_array"
(define-fun of_array ((a (Array Int us_rep)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; "value__size_axiom"
(assert (<= 0 value__size1))

;; "object__size_axiom"
(assert (<= 0 object__size1))

;; "component__size_axiom"
(assert (<= 0 component__size))

;; "alignment_axiom"
(assert (<= 0 alignment1))

;; "get_max_left"
(define-fun get_max_left ((param__index Int) (Frame_condition__update_max_2__a___a___ (Array Int us_rep))) Int
  (to_rep
    (rec__frame_condition__cell__max_left
      (us_split_fields1
        (let ((temp___172 (of_array
                            Frame_condition__update_max_2__a___a___
                            (to_rep1 a__first)
                            (to_rep1 a__last))))
          (select (to_array temp___172) param__index))))))

;; "frame_left"
(define-fun frame_left ((param__old_a us_t) (Frame_condition__update_max_2__a___a___ (Array Int us_rep))) Bool
  (ite (forall ((i Int))
         (=>
           (and (<= (to_rep1 a__first) i) (<= i (to_rep1 a__last)))
           (= (to_rep
                (rec__frame_condition__cell__value
                  (us_split_fields1
                    (let ((temp___176 (of_array
                                        Frame_condition__update_max_2__a___a___
                                        (to_rep1 a__first)
                                        (to_rep1 a__last))))
                      (select (to_array temp___176) i))))) (to_rep
                                                             (rec__frame_condition__cell__value
                                                               (us_split_fields1
                                                                 (select 
                                                                 (to_array
                                                                   param__old_a) i)))))))
    true
    false))

(declare-const first1 Int)

(declare-const last1 Int)

;; "first__def_axiom"
(assert (= first (to_rep1 a__first)))

;; "last__def_axiom"
(assert (= last (to_rep1 a__last)))

;; "first__def_axiom"
(assert (= first1 first))

;; "last__def_axiom"
(assert (= last1 last))

(declare-const a (Array Int us_rep))

(declare-const c238b Int)

(declare-const c239b Int)

;; "c239b'unused"
(define-fun c239bqtunused () int__ref
  (int__refqtmk c239b))

;; "c238b'unused"
(define-fun c238bqtunused () int__ref
  (int__refqtmk c238b))

;; "a'unused"
(define-fun aqtunused () map__ref
  (map__refqtmk a))

;; "a'unused"
(define-fun aqtunused1 () map__ref
  (map__refqtmk a))

;; "Assume"
(assert (in_range2 first))

(declare-const temp___806 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) temp___806))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused () Int
  temp___806)

;; "Assume"
(assert (= temp___806 first))

;; "Assume"
(assert (in_range2 last))

(declare-const temp___808 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) temp___808))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused1 () Int
  temp___808)

;; "Assume"
(assert (= temp___808 last))

;; "Assume"
(assert (dynamic_property 1 2147483647 (to_rep1 a__first) (to_rep1 a__last)))

;; "Assume"
(assert (in_range2 first1))

;; "Assume"
(assert (= first first1))

;; "Assume"
(assert (in_range2 last1))

;; "Assume"
(assert (= last last1))

;; "Assume"
(assert (< 0 (length (to_rep1 a__first) (to_rep1 a__last))))

(declare-const o Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused2 () Int
  o)

(declare-const o1 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o1))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused3 () Int
  o1)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused () (Array Int us_rep)
  a)

;; "temp___old_800"
(define-fun temp___old_800 () us_t
  (of_array a o1 o))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused () us_t
  temp___old_800)

(declare-const k Int)

;; "k'unused"
(define-fun kqtunused () int__ref
  (int__refqtmk k))

;; "H"
(assert (= k first1))

;; "Assume"
(assert (in_range2 k))

(declare-const max Int)

;; "max'unused"
(define-fun maxqtunused () int__ref
  (int__refqtmk max))

;; "H"
(assert (= max 0))

;; "Assume"
(assert (in_range1 max))

(declare-const o2 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o2))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused4 () Int
  o2)

(declare-const o3 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o3))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused5 () Int
  o3)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused1 () (Array Int us_rep)
  a)

;; "temp___loop_entry_769"
(define-fun temp___loop_entry_769 () us_t
  (of_array a o3 o2))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused1 () us_t
  temp___loop_entry_769)

;; "temp___loop_entry_767'unused"
(define-fun temp___loop_entry_767qtunused () Int
  c239b)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused () Int
  c239b)

;; "temp___loop_entry_766'unused"
(define-fun temp___loop_entry_766qtunused () Int
  c238b)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused1 () Int
  c238b)

;; "temp___loop_entry_765'unused"
(define-fun temp___loop_entry_765qtunused () Int
  max)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused2 () Int
  max)

;; "temp___loop_entry_764'unused"
(define-fun temp___loop_entry_764qtunused () Int
  k)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused3 () Int
  k)

(declare-const o4 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o4))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused6 () Int
  o4)

(declare-const o5 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o5))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused7 () Int
  o5)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused2 () (Array Int us_rep)
  a)

;; "temp___loop_entry_762"
(define-fun temp___loop_entry_762 () us_t
  (of_array a o5 o4))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused2 () us_t
  temp___loop_entry_762)

(declare-const spark__branch Bool)

(declare-const max1 Int)

;; "max'unused"
(define-fun maxqtunused1 () int__ref
  (int__refqtmk max1))

;; "spark__branch'unused"
(define-fun spark__branchqtunused () bool__ref
  (bool__refqtmk spark__branch))

(declare-const int__contentqtresultqtunused4 Int)

;; "H"
(assert (= int__contentqtresultqtunused4 max))

(declare-const o6 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o6))

(declare-const to_repqtresultqtunused8 Int)

;; "H"
(assert (= to_repqtresultqtunused8 o6))

(declare-const o7 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o7))

(declare-const to_repqtresultqtunused9 Int)

;; "H"
(assert (= to_repqtresultqtunused9 o7))

(declare-const map__contentqtresultqtunused3 (Array Int us_rep))

;; "H"
(assert (= map__contentqtresultqtunused3 a))

(declare-const temp___753 us_t)

;; "H"
(assert (= temp___753 (of_array a o7 o6)))

(declare-const of_arrayqtresultqtunused3 us_t)

;; "H"
(assert (= of_arrayqtresultqtunused3 temp___753))

;; "Assert"
(assert (and (<= o7 k) (<= k o6)))

(declare-const int__contentqtresultqtunused5 Int)

;; "H"
(assert (= int__contentqtresultqtunused5 k))

(declare-const o8 (Array Int us_rep))

;; "H"
(assert (= o8 a))

(declare-const to_arrayqtresultqtunused (Array Int us_rep))

;; "H"
(assert (= to_arrayqtresultqtunused o8))

(declare-const o9 us_rep)

;; "H"
(assert (= o9 (select o8 k)))

(declare-const getqtresultqtunused us_rep)

;; "H"
(assert (= getqtresultqtunused o9))

(declare-const o10 us_split_fields)

;; "H"
(assert (= o10 (us_split_fields1 o9)))

(declare-const us_split_fieldsqtresultqtunused us_split_fields)

;; "H"
(assert (= us_split_fieldsqtresultqtunused o10))

(declare-const o11 natural)

;; "H"
(assert (= o11 (rec__frame_condition__cell__value o10)))

(declare-const rec__frame_condition__cell__valueqtresultqtunused natural)

;; "H"
(assert (= rec__frame_condition__cell__valueqtresultqtunused o11))

(declare-const o12 Int)

;; "Ensures"
(assert (= (to_rep o11) o12))

(declare-const to_repqtresultqtunused10 Int)

;; "H"
(assert (= to_repqtresultqtunused10 o12))

(declare-const o13 Bool)

;; "H"
(assert (= o13 (ite (< max o12) true false)))

(declare-const infix_gtqtresultqtunused Bool)

;; "H"
(assert (= infix_gtqtresultqtunused o13))

;; "H"
(assert (= spark__branch o13))

(declare-const bool__contentqtresultqtunused Bool)

;; "H"
(assert (= bool__contentqtresultqtunused spark__branch))

(declare-const o14 Int)

(declare-const to_repqtresultqtunused11 Int)

(declare-const o15 Int)

(declare-const to_repqtresultqtunused12 Int)

(declare-const map__contentqtresultqtunused4 (Array Int us_rep))

(declare-const temp___752 us_t)

(declare-const of_arrayqtresultqtunused4 us_t)

(declare-const int__contentqtresultqtunused6 Int)

(declare-const o16 (Array Int us_rep))

(declare-const to_arrayqtresultqtunused1 (Array Int us_rep))

(declare-const o17 us_rep)

(declare-const getqtresultqtunused1 us_rep)

(declare-const o18 us_split_fields)

(declare-const us_split_fieldsqtresultqtunused1 us_split_fields)

(declare-const o19 natural)

(declare-const rec__frame_condition__cell__valueqtresultqtunused1 natural)

(declare-const o20 Int)

(declare-const to_repqtresultqtunused13 Int)

;; "H"
(assert
  (ite (= spark__branch true)
    (and
      (= (to_rep1 a__last) o14)
      (and
        (= to_repqtresultqtunused11 o14)
        (and
          (= (to_rep1 a__first) o15)
          (and
            (= to_repqtresultqtunused12 o15)
            (and
              (= map__contentqtresultqtunused4 a)
              (and
                (= temp___752 (of_array a o15 o14))
                (and
                  (= of_arrayqtresultqtunused4 temp___752)
                  (and
                    (and (<= o15 k) (<= k o14))
                    (and
                      (= int__contentqtresultqtunused6 k)
                      (and
                        (= o16 a)
                        (and
                          (= to_arrayqtresultqtunused1 o16)
                          (and
                            (= o17 (select o16 k))
                            (and
                              (= getqtresultqtunused1 o17)
                              (and
                                (= o18 (us_split_fields1 o17))
                                (and
                                  (= us_split_fieldsqtresultqtunused1 
                                  o18)
                                  (and
                                    (= o19 (rec__frame_condition__cell__value
                                             o18))
                                    (and
                                      (= rec__frame_condition__cell__valueqtresultqtunused1 
                                      o19)
                                      (and
                                        (= (to_rep o19) o20)
                                        (and
                                          (= to_repqtresultqtunused13 
                                          o20)
                                          (= max1 o20))))))))))))))))))))
    (= max1 max)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused7 () Int
  k)

(declare-const c238b1 Int)

;; "c238b'unused"
(define-fun c238bqtunused1 () int__ref
  (int__refqtmk c238b1))

;; "H"
(assert (= c238b1 k))

;; "Assume"
(assert (in_range2 c238b1))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused8 () Int
  max1)

(declare-const c239b1 Int)

;; "c239b'unused"
(define-fun c239bqtunused1 () int__ref
  (int__refqtmk c239b1))

;; "H"
(assert (= c239b1 max1))

;; "Assume"
(assert (in_range1 c239b1))

(declare-const o21 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o21))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused14 () Int
  o21)

(declare-const o22 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o22))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused15 () Int
  o22)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused5 () (Array Int us_rep)
  a)

;; "temp___758"
(define-fun temp___758 () us_t
  (of_array a o22 o21))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused5 () us_t
  temp___758)

;; "o"
(define-fun o23 () t
  (rt temp___758))

;; "rt'result'unused"
(define-fun rtqtresultqtunused () t
  o23)

(declare-const o24 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o24))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused16 () Int
  o24)

(declare-const o25 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o25))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused17 () Int
  o25)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused6 () (Array Int us_rep)
  a)

;; "temp___755"
(define-fun temp___755 () us_t
  (of_array a o25 o24))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused6 () us_t
  temp___755)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused9 () Int
  c238b1)

;; "o"
(define-fun o26 () (Array Int us_rep)
  a)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused2 () (Array Int us_rep)
  o26)

;; "temp___756"
(define-fun temp___756 () us_rep
  (select o26 c238b1))

;; "get'result'unused"
(define-fun getqtresultqtunused2 () us_rep
  temp___756)

;; "_q "
(define-fun usq_ () us_split_fields
  (us_split_fields1 temp___756))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused2 () us_split_fields
  usq_)

;; "o"
(define-fun o27 () natural
  (rec__frame_condition__cell__max_right usq_))

;; "rec__frame_condition__cell__max_right'result'unused"
(define-fun rec__frame_condition__cell__max_rightqtresultqtunused () natural
  o27)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused10 () Int
  c239b1)

(declare-const o28 natural)

;; "Ensures"
(assert (= (to_rep o28) c239b1))

;; "of_rep'result'unused"
(define-fun of_repqtresultqtunused () natural
  o28)

;; "o"
(define-fun o29 () natural
  (rec__frame_condition__cell__value usq_))

;; "rec__frame_condition__cell__value'result'unused"
(define-fun rec__frame_condition__cell__valueqtresultqtunused2 () natural
  o29)

;; "o"
(define-fun o30 () us_split_fields
  (us_split_fieldsqtmk o29 o28 o27))

;; "__split_fields'mk'result'unused"
(define-fun us_split_fieldsqtmkqtresultqtunused () us_split_fields
  o30)

;; "o"
(define-fun o31 () us_rep
  (us_repqtmk o30))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused () us_rep
  o31)

;; "Assert"
(assert (and (<= o22 c238b1) (<= c238b1 o21)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused11 () Int
  c238b1)

;; "o"
(define-fun o32 () (Array Int us_rep)
  a)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused3 () (Array Int us_rep)
  o32)

;; "o"
(define-fun o33 () (Array Int us_rep)
  (store o32 c238b1 o31))

;; "set'result'unused"
(define-fun setqtresultqtunused () (Array Int us_rep)
  o33)

;; "o"
(define-fun o34 () us_t
  (us_tqtmk o33 o23))

;; "__t'mk'result'unused"
(define-fun us_tqtmkqtresultqtunused () us_t
  o34)

;; "o"
(define-fun o35 () (Array Int us_rep)
  (to_array o34))

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused4 () (Array Int us_rep)
  o35)

(declare-const a1 (Array Int us_rep))

;; "a'unused"
(define-fun aqtunused2 () map__ref
  (map__refqtmk a1))

;; "H"
(assert (= a1 o35))

(declare-const o36 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o36))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused18 () Int
  o36)

(declare-const o37 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o37))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused19 () Int
  o37)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused7 () (Array Int us_rep)
  a1)

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused7 () us_t
  (of_array a1 o37 o36))

(declare-const o38 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o38))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused20 () Int
  o38)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused12 () Int
  k)

;; "o"
(define-fun o39 () Bool
  (ite (<= k o38) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused () Bool
  o39)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused13 () Int
  k)

(declare-const o40 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o40))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused21 () Int
  o40)

(declare-const o41 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o41))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused22 () Int
  o41)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused8 () (Array Int us_rep)
  a1)

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused8 () us_t
  (of_array a1 o41 o40))

(declare-const o42 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o42))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused23 () Int
  o42)

;; "o"
(define-fun o43 () Bool
  (ite (<= o42 k) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused1 () Bool
  o43)

;; "andb'result'unused"
(define-fun andbqtresultqtunused () Bool
  (and o43 o39))

(declare-const a2 (Array Int us_rep))

(declare-const k1 Int)

(declare-const max2 Int)

(declare-const c238b2 Int)

(declare-const c239b2 Int)

;; "max'unused"
(define-fun maxqtunused2 () int__ref
  (int__refqtmk max2))

;; "k'unused"
(define-fun kqtunused1 () int__ref
  (int__refqtmk k1))

;; "a'unused"
(define-fun aqtunused3 () map__ref
  (map__refqtmk a2))

;; "LoopInvariant"
(assert (and (<= (to_rep1 a__first) k1) (<= k1 (to_rep1 a__last))))

;; "LoopInvariant"
(assert
  (and
    (forall ((i Int))
      (=>
        (and (<= first1 i) (<= i k1))
        (<= (to_rep
              (rec__frame_condition__cell__value
                (us_split_fields1 (select a2 i)))) max2)))
    (forall ((i Int))
      (=>
        (and (<= k1 i) (<= i first1))
        (<= (to_rep
              (rec__frame_condition__cell__value
                (us_split_fields1 (select a2 i)))) max2)))))

;; "LoopInvariant"
(assert
  (and
    (forall ((i Int))
      (=>
        (and (<= first1 i) (<= i k1))
        (forall ((j Int))
          (=>
            (and (<= i j) (<= j k1))
            (<= (to_rep
                  (rec__frame_condition__cell__value
                    (us_split_fields1 (select a2 i)))) (get_max_left j a2))))))
    (forall ((i Int))
      (=>
        (and (<= k1 i) (<= i first1))
        (forall ((j Int))
          (=>
            (and (<= i j) (<= j first1))
            (<= (to_rep
                  (rec__frame_condition__cell__value
                    (us_split_fields1 (select a2 j)))) (get_max_left i a2))))))))

;; "LoopInvariant"
(assert (= (frame_left (of_array a o3 o2) a2) true))

;; "Assume"
(assert
  (and
    (and
      (and
        (and
          (forall ((temp___763 Int))
            (=>
              (and
                (<= (to_rep1 a__first) temp___763)
                (<= temp___763 (to_rep1 a__last)))
              (and
                (= (rec__frame_condition__cell__value
                     (us_split_fields1 (select a2 temp___763))) (rec__frame_condition__cell__value
                                                                  (us_split_fields1
                                                                    (select 
                                                                    a temp___763))))
                (= (rec__frame_condition__cell__max_right
                     (us_split_fields1 (select a2 temp___763))) (rec__frame_condition__cell__max_right
                                                                  (us_split_fields1
                                                                    (select 
                                                                    a temp___763)))))))
          (in_range2 k1))
        (in_range1 max2))
      (in_range2 c238b2))
    (in_range1 c239b2)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused14 () Int
  k1)

;; "infix ='result'unused"
(define-fun infix_eqqtresultqtunused () Bool
  (ite (= k1 last1) true false))

;; "H"
(assert (not (= k1 last1)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused15 () Int
  k1)

;; "o"
(define-fun o44 () Int
  (+ k1 1))

;; "infix +'result'unused"
(define-fun infix_plqtresultqtunused () Int
  o44)

;; "Ensures"
(assert (in_range o44))

;; "range_check_'result'unused"
(define-fun range_check_qtresultqtunused () Int
  o44)

(declare-const k2 Int)

;; "k'unused"
(define-fun kqtunused2 () int__ref
  (int__refqtmk k2))

;; "H"
(assert (= k2 o44))

(declare-const max3 Int)

;; "max'unused"
(define-fun maxqtunused3 () int__ref
  (int__refqtmk max3))

(declare-const int__contentqtresultqtunused16 Int)

;; "H"
(assert (= int__contentqtresultqtunused16 max2))

(declare-const o45 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o45))

(declare-const to_repqtresultqtunused24 Int)

;; "H"
(assert (= to_repqtresultqtunused24 o45))

(declare-const o46 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o46))

(declare-const to_repqtresultqtunused25 Int)

;; "H"
(assert (= to_repqtresultqtunused25 o46))

(declare-const map__contentqtresultqtunused9 (Array Int us_rep))

;; "H"
(assert (= map__contentqtresultqtunused9 a2))

(declare-const temp___7531 us_t)

;; "H"
(assert (= temp___7531 (of_array a2 o46 o45)))

(declare-const of_arrayqtresultqtunused9 us_t)

;; "H"
(assert (= of_arrayqtresultqtunused9 temp___7531))

;; "Assert"
(assert (and (<= o46 k2) (<= k2 o45)))

(declare-const int__contentqtresultqtunused17 Int)

;; "H"
(assert (= int__contentqtresultqtunused17 k2))

(declare-const o47 (Array Int us_rep))

;; "H"
(assert (= o47 a2))

(declare-const to_arrayqtresultqtunused5 (Array Int us_rep))

;; "H"
(assert (= to_arrayqtresultqtunused5 o47))

(declare-const o48 us_rep)

;; "H"
(assert (= o48 (select o47 k2)))

(declare-const getqtresultqtunused3 us_rep)

;; "H"
(assert (= getqtresultqtunused3 o48))

(declare-const o49 us_split_fields)

;; "H"
(assert (= o49 (us_split_fields1 o48)))

(declare-const us_split_fieldsqtresultqtunused3 us_split_fields)

;; "H"
(assert (= us_split_fieldsqtresultqtunused3 o49))

(declare-const o50 natural)

;; "H"
(assert (= o50 (rec__frame_condition__cell__value o49)))

(declare-const rec__frame_condition__cell__valueqtresultqtunused3 natural)

;; "H"
(assert (= rec__frame_condition__cell__valueqtresultqtunused3 o50))

(declare-const o51 Int)

;; "Ensures"
(assert (= (to_rep o50) o51))

(declare-const to_repqtresultqtunused26 Int)

;; "H"
(assert (= to_repqtresultqtunused26 o51))

(declare-const o52 Bool)

;; "H"
(assert (= o52 (ite (< max2 o51) true false)))

(declare-const infix_gtqtresultqtunused1 Bool)

;; "H"
(assert (= infix_gtqtresultqtunused1 o52))

(declare-const spark__branch1 Bool)

(declare-const spark__branchqtunused1 bool__ref)

;; "H"
(assert (= spark__branchqtunused1 (bool__refqtmk spark__branch1)))

;; "H"
(assert (= spark__branch1 o52))

(declare-const bool__contentqtresultqtunused1 Bool)

;; "H"
(assert (= bool__contentqtresultqtunused1 spark__branch1))

(declare-const o53 Int)

(declare-const to_repqtresultqtunused27 Int)

(declare-const o54 Int)

(declare-const to_repqtresultqtunused28 Int)

(declare-const map__contentqtresultqtunused10 (Array Int us_rep))

(declare-const temp___7521 us_t)

(declare-const of_arrayqtresultqtunused10 us_t)

(declare-const int__contentqtresultqtunused18 Int)

(declare-const o55 (Array Int us_rep))

(declare-const to_arrayqtresultqtunused6 (Array Int us_rep))

(declare-const o56 us_rep)

(declare-const getqtresultqtunused4 us_rep)

(declare-const o57 us_split_fields)

(declare-const us_split_fieldsqtresultqtunused4 us_split_fields)

(declare-const o58 natural)

(declare-const rec__frame_condition__cell__valueqtresultqtunused4 natural)

(declare-const o59 Int)

(declare-const to_repqtresultqtunused29 Int)

;; "H"
(assert
  (ite (= spark__branch1 true)
    (and
      (= (to_rep1 a__last) o53)
      (and
        (= to_repqtresultqtunused27 o53)
        (and
          (= (to_rep1 a__first) o54)
          (and
            (= to_repqtresultqtunused28 o54)
            (and
              (= map__contentqtresultqtunused10 a2)
              (and
                (= temp___7521 (of_array a2 o54 o53))
                (and
                  (= of_arrayqtresultqtunused10 temp___7521)
                  (and
                    (and (<= o54 k2) (<= k2 o53))
                    (and
                      (= int__contentqtresultqtunused18 k2)
                      (and
                        (= o55 a2)
                        (and
                          (= to_arrayqtresultqtunused6 o55)
                          (and
                            (= o56 (select o55 k2))
                            (and
                              (= getqtresultqtunused4 o56)
                              (and
                                (= o57 (us_split_fields1 o56))
                                (and
                                  (= us_split_fieldsqtresultqtunused4 
                                  o57)
                                  (and
                                    (= o58 (rec__frame_condition__cell__value
                                             o57))
                                    (and
                                      (= rec__frame_condition__cell__valueqtresultqtunused4 
                                      o58)
                                      (and
                                        (= (to_rep o58) o59)
                                        (and
                                          (= to_repqtresultqtunused29 
                                          o59)
                                          (= max3 o59))))))))))))))))))))
    (= max3 max2)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused19 () Int
  k2)

(declare-const c238b3 Int)

;; "c238b'unused"
(define-fun c238bqtunused2 () int__ref
  (int__refqtmk c238b3))

;; "H"
(assert (= c238b3 k2))

;; "Assume"
(assert (in_range2 c238b3))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused20 () Int
  max3)

(declare-const c239b3 Int)

;; "c239b'unused"
(define-fun c239bqtunused2 () int__ref
  (int__refqtmk c239b3))

;; "H"
(assert (= c239b3 max3))

;; "Assume"
(assert (in_range1 c239b3))

(declare-const o60 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o60))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused30 () Int
  o60)

(declare-const o61 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o61))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused31 () Int
  o61)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused11 () (Array Int us_rep)
  a2)

;; "temp___758"
(define-fun temp___7581 () us_t
  (of_array a2 o61 o60))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused11 () us_t
  temp___7581)

;; "o"
(define-fun o62 () t
  (rt temp___7581))

;; "rt'result'unused"
(define-fun rtqtresultqtunused1 () t
  o62)

(declare-const o63 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o63))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused32 () Int
  o63)

(declare-const o64 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o64))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused33 () Int
  o64)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused12 () (Array Int us_rep)
  a2)

;; "temp___755"
(define-fun temp___7551 () us_t
  (of_array a2 o64 o63))

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused12 () us_t
  temp___7551)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused21 () Int
  c238b3)

;; "o"
(define-fun o65 () (Array Int us_rep)
  a2)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused7 () (Array Int us_rep)
  o65)

;; "temp___756"
(define-fun temp___7561 () us_rep
  (select o65 c238b3))

;; "get'result'unused"
(define-fun getqtresultqtunused5 () us_rep
  temp___7561)

;; "_q "
(define-fun usq_1 () us_split_fields
  (us_split_fields1 temp___7561))

;; "__split_fields'result'unused"
(define-fun us_split_fieldsqtresultqtunused5 () us_split_fields
  usq_1)

;; "o"
(define-fun o66 () natural
  (rec__frame_condition__cell__max_right usq_1))

;; "rec__frame_condition__cell__max_right'result'unused"
(define-fun rec__frame_condition__cell__max_rightqtresultqtunused1 () natural
  o66)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused22 () Int
  c239b3)

(declare-const o67 natural)

;; "Ensures"
(assert (= (to_rep o67) c239b3))

;; "of_rep'result'unused"
(define-fun of_repqtresultqtunused1 () natural
  o67)

;; "o"
(define-fun o68 () natural
  (rec__frame_condition__cell__value usq_1))

;; "rec__frame_condition__cell__value'result'unused"
(define-fun rec__frame_condition__cell__valueqtresultqtunused5 () natural
  o68)

;; "o"
(define-fun o69 () us_split_fields
  (us_split_fieldsqtmk o68 o67 o66))

;; "__split_fields'mk'result'unused"
(define-fun us_split_fieldsqtmkqtresultqtunused1 () us_split_fields
  o69)

;; "o"
(define-fun o70 () us_rep
  (us_repqtmk o69))

;; "__rep'mk'result'unused"
(define-fun us_repqtmkqtresultqtunused1 () us_rep
  o70)

;; "Assert"
(assert (and (<= o61 c238b3) (<= c238b3 o60)))

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused23 () Int
  c238b3)

;; "o"
(define-fun o71 () (Array Int us_rep)
  a2)

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused8 () (Array Int us_rep)
  o71)

;; "o"
(define-fun o72 () (Array Int us_rep)
  (store o71 c238b3 o70))

;; "set'result'unused"
(define-fun setqtresultqtunused1 () (Array Int us_rep)
  o72)

;; "o"
(define-fun o73 () us_t
  (us_tqtmk o72 o62))

;; "__t'mk'result'unused"
(define-fun us_tqtmkqtresultqtunused1 () us_t
  o73)

;; "o"
(define-fun o74 () (Array Int us_rep)
  (to_array o73))

;; "to_array'result'unused"
(define-fun to_arrayqtresultqtunused9 () (Array Int us_rep)
  o74)

(declare-const a3 (Array Int us_rep))

;; "a'unused"
(define-fun aqtunused4 () map__ref
  (map__refqtmk a3))

;; "H"
(assert (= a3 o74))

(declare-const o75 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o75))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused34 () Int
  o75)

(declare-const o76 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o76))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused35 () Int
  o76)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused13 () (Array Int us_rep)
  a3)

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused13 () us_t
  (of_array a3 o76 o75))

(declare-const o77 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o77))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused36 () Int
  o77)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused24 () Int
  k2)

;; "o"
(define-fun o78 () Bool
  (ite (<= k2 o77) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused2 () Bool
  o78)

;; "int__content'result'unused"
(define-fun int__contentqtresultqtunused25 () Int
  k2)

(declare-const o79 Int)

;; "Ensures"
(assert (= (to_rep1 a__last) o79))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused37 () Int
  o79)

(declare-const o80 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o80))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused38 () Int
  o80)

;; "map__content'result'unused"
(define-fun map__contentqtresultqtunused14 () (Array Int us_rep)
  a3)

;; "of_array'result'unused"
(define-fun of_arrayqtresultqtunused14 () us_t
  (of_array a3 o80 o79))

(declare-const o81 Int)

;; "Ensures"
(assert (= (to_rep1 a__first) o81))

;; "to_rep'result'unused"
(define-fun to_repqtresultqtunused39 () Int
  o81)

;; "o"
(define-fun o82 () Bool
  (ite (<= o81 k2) true false))

;; "infix <='result'unused"
(define-fun infix_lseqqtresultqtunused3 () Bool
  o82)

;; "andb'result'unused"
(define-fun andbqtresultqtunused1 () Bool
  (and o82 o78))

;; "LoopInvariant"
(assert (and (<= (to_rep1 a__first) k2) (<= k2 (to_rep1 a__last))))

;; "LoopInvariant"
(assert
  (and
    (forall ((i Int))
      (=>
        (and (<= first1 i) (<= i k2))
        (<= (to_rep
              (rec__frame_condition__cell__value
                (us_split_fields1 (select a3 i)))) max3)))
    (forall ((i Int))
      (=>
        (and (<= k2 i) (<= i first1))
        (<= (to_rep
              (rec__frame_condition__cell__value
                (us_split_fields1 (select a3 i)))) max3)))))

(declare-const i Int)

;; "H"
(assert (<= first1 i))

;; "H"
(assert (<= i k2))

(declare-const j Int)

;; "H"
(assert (<= i j))

;; "H"
(assert (<= j k2))

;; Goal "def'vc"
;; File "frame_condition.adb", line 122, characters 0-0
(assert
  (not
  (<= (to_rep
        (rec__frame_condition__cell__value (us_split_fields1 (select a3 i)))) 
  (get_max_left
    j
    a3))))

(check-sat)
